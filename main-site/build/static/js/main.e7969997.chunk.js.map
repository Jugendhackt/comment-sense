{"version":3,"sources":["ui/theme/index.js","constants.js","stores/UserStore.js","stores/DialogStore.js","components/Dialogs/SignUp/SignUpSuccess.js","components/Dialogs/SignUp/SignUpFail.js","components/Dialogs/SignUp/SignUp.js","components/Dialogs/SignUp/index.js","components/Dialogs/SignIn/SignInFail.js","components/Dialogs/SignIn/SignInSuccess.js","helpers.js","components/Dialogs/SignIn/SignIn.js","components/Dialogs/SignIn/index.js","components/Header/Drawer.js","components/Header/AccountDropDown.js","components/Header/Navbar.js","components/Header/index.js","components/TopWebsites/Website.js","stores/WebsiteStore.js","components/TopWebsites/TopWebsites.js","components/TopWebsites/index.js","components/TopComments/Comment.js","stores/CommentStore.js","components/TopComments/TopComments.js","components/TopComments/index.js","pages/Home.js","pages/Account.js","pages/NotFound.js","pages/Routes.js","App.js","index.js"],"names":["createMuiTheme","palette","type","primary","light","main","dark","contrastText","secondary","themeName","ipAddress","langDe","brandName","home","signIn","signInText","signInSuccessTitle","signInSuccessText","signInErrTitle","signInErrText","signUp","signUpText","signUpSuccessTitle","signUpSuccessText","signUpErrTitle","signUpErrText","toWebsite","username","password","email","cancel","ok","saveChanges","account","github","notFoundTitle","notFoundText","loggedInAs","logout","UserStore","observable","UserStoreContext","createContext","DialogStore","DialogStoreContext","SignUpSuccess","observer","props","theme","useTheme","fullScreen","useMediaQuery","breakpoints","down","dialogStore","useContext","Dialog","open","onClose","openSignUpSuccess","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","variant","color","onClick","window","location","reload","SignUpFail","openSignUpFail","useStyles","makeStyles","box","display","flexDirection","justifyContent","alignItems","alignContent","width","mb","marginBottom","spacing","margin","SignUp","userStore","classes","openSignUp","dividers","Box","className","TextField","label","value","fullWidth","required","onChange","evt","target","fetch","method","body","JSON","stringify","userName","then","res","status","catch","e","index","SignInFail","openSignInFail","SignInSuccess","openSignInSuccess","removeSessionId","document","cookie","SignIn","openSignIn","localStorage","setItem","list","height","Drawer","SwipeableDrawer","onOpen","List","ListItem","Typography","Divider","Link","href","button","ListItemIcon","Home","ListItemText","CreateAccount","loggedIn","LoggedInAccount","Code","Person","PersonAdd","SettingsApplications","sid","ExitToApp","AccountDropDown","keepMounted","anchorEl","anchorElAccount","openAccount","MenuItem","menuButton","marginRight","Navbar","handleOnClick","key","openDrawer","AppBar","position","Toolbar","IconButton","edge","Menu","currentTarget","website","title","paper","padding","minWidth","text","marginLeft","Website","Paper","url","length","substring","ThumbUp","comments","WebsiteStore","WebsiteStoreContext","progress","TopWebsites","websiteStore","useEffect","json","websites","sites","Array","isArray","from","map","item","uuid","v4","CircularProgress","size","comment","Comment","date","content","author","votes","CommentStore","CommentStoreContext","TopComments","commentStore","headline","likes","Grid","container","xs","sm","textField","div","buttonBox","Account","history","useHistory","push","NotFound","mt","marginTop","Routes","Container","fixed","exact","path","render","para","to","App","sessionId","Promise","resolve","useLoggedIn","match","RegExp","split","useSessionId","getItem","ThemeProvider","CssBaseline","ReactDOM","getElementById"],"mappings":"wOAmBeA,cAAe,CAAEC,QAjBhB,CACZC,KAAM,OACNC,QAAS,CACLC,MAAO,UACPC,KAAM,UACNC,KAAM,UACNC,aAAc,UAElBC,UAAW,CACPJ,MAAO,UACPC,KAAM,UACNC,KAAM,UACNC,aAAc,WAKmBE,UAFvB,iB,+ECjBZC,EAAY,yBAEZC,EAAS,CACXC,UAAW,eACXC,KAAM,OACNC,OAAQ,WACRC,WAAY,+BACZC,mBAAoB,yBACpBC,kBAAmB,sCACnBC,eAAgB,UAChBC,cAAe,uBACfC,OAAQ,cACRC,WAAY,+BACZC,mBAAoB,kBACpBC,kBAAmB,wCACnBC,eAAgB,UAChBC,cAAe,0CACfC,UAAW,uBACXC,SAAU,WACVC,SAAU,WACVC,MAAO,SACPC,OAAQ,YACRC,GAAI,KACJC,YAAa,0BACbC,QAAS,qBACTC,OAAQ,0BACRC,cAAe,wBACfC,aAAc,qDACdC,WAAY,mBACZC,OAAQ,Y,mMC1BNC,I,6PACDC,M,wEAAsB,M,uCACtBA,M,wEAAsB,M,oCACtBA,M,wEAAmB,M,kCACnBA,M,wEAAiB,M,uCACjBA,M,yEAAsB,K,GAGdC,GAAmBC,wBAAc,IAAIH,ICR5CI,I,ycACDH,M,yEAAwB,K,yCACxBA,M,yEAAwB,K,gDACxBA,M,yEAA+B,K,6CAC/BA,M,yEAA4B,K,gDAC5BA,M,yEAA+B,K,6CAC/BA,M,yEAA4B,K,0CAC5BA,M,yEAAyB,K,8CACzBA,M,yEAA6B,Q,yCAC7BA,M,yEAAwB,K,GAGhBI,GAAqBF,wBAAc,IAAIC,I,SCT9CE,GAAgBC,cAAS,SAACC,GAC5B,IAAMC,EAAQC,eACRC,EAAaC,YAAcH,EAAMI,YAAYC,KAAK,OAClDC,EAAcC,qBAAWX,IAM/B,OACI,kBAACY,EAAA,EAAD,CAAQC,KAAMV,EAAMU,KAAMC,QAAS,kBAAMJ,EAAYK,mBAAoB,GAAOT,WAAYA,GACxF,kBAACU,EAAA,EAAD,KAAcjD,EAAOW,oBACrB,kBAACuC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KAAoBnD,EAAOY,mBAC3B,kBAACwC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MAAM,UAAUC,QAV7C,WACXC,OAAOC,SAASC,WAS0D3D,EAAOoB,UCfnFwC,GAAazB,cAAS,SAACC,GACzB,IAAMC,EAAQC,eACRC,EAAaC,YAAcH,EAAMI,YAAYC,KAAK,OAClDC,EAAcC,qBAAWX,IAE/B,OACI,kBAACY,EAAA,EAAD,CAAQC,KAAMV,EAAMU,KAAMC,QAAS,kBAAMJ,EAAYkB,gBAAiB,GAAOtB,WAAYA,GACrF,kBAACU,EAAA,EAAD,KAAcjD,EAAOa,gBACrB,kBAACqC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KAAoBnD,EAAOc,eAC3B,kBAACsC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MAAM,YAAYC,QAAS,kBAAMb,EAAYkB,gBAAiB,IAAQ7D,EAAOoB,UCPvH0C,GAAYC,aAAW,SAAA1B,GAAK,MAAK,CACnC2B,IAAK,CACDC,QAAS,OACTC,cAAe,SACfC,eAAgB,SAChBC,WAAY,SACZC,aAAc,SACdC,MAAO,QAEXC,GAAI,CACAC,aAAcnC,EAAMoC,QAAQ,IAEhCC,OAAQ,CACJA,OAAQrC,EAAMoC,QAAQ,QAIxBE,GAASxC,cAAS,SAACC,GACrB,IAAMC,EAAQC,cACRC,EAAaC,YAAcH,EAAMI,YAAYC,KAAK,OAElDkC,EAAYhC,qBAAWd,IACvBa,EAAcC,qBAAWX,IAEzB4C,EAAUf,KAyBhB,OACI,oCACI,kBAACjB,EAAA,EAAD,CAAQC,KAAMV,EAAMU,KAAMC,QAAS,kBAAMJ,EAAYmC,YAAa,GAAOvC,WAAYA,GACjF,kBAACU,EAAA,EAAD,KAAcjD,EAAOS,QACrB,kBAACyC,EAAA,EAAD,CAAe6B,UAAQ,GACnB,kBAAC5B,EAAA,EAAD,KAAoBnD,EAAOU,YAC3B,kBAAC0C,EAAA,EAAD,KACI,kBAAC4B,EAAA,EAAD,CAAKC,UAAWJ,EAAQb,KACpB,kBAACkB,EAAA,EAAD,CAAWC,MAAOnF,EAAOgB,SAAUoE,MAAOR,EAAU5D,SAAUqE,WAAS,EAACC,UAAQ,EAACL,UAAWJ,EAAQN,GAAIgB,SAAU,SAAAC,GAAG,OAAIZ,EAAU5D,SAAWwE,EAAIC,OAAOL,SACzJ,kBAACF,EAAA,EAAD,CAAWC,MAAOnF,EAAOiB,SAAUmE,MAAOR,EAAU3D,SAAUoE,WAAS,EAACC,UAAQ,EAACL,UAAWJ,EAAQN,GAAIgB,SAAU,SAAAC,GAAG,OAAIZ,EAAU3D,SAAWuE,EAAIC,OAAOL,OAAO7F,KAAK,aACrK,kBAAC2F,EAAA,EAAD,CAAWC,MAAOnF,EAAOkB,MAAOkE,MAAOR,EAAU1D,MAAOmE,WAAS,EAACJ,UAAWJ,EAAQN,GAAIgB,SAAU,SAAAC,GAAG,OAAIZ,EAAU1D,MAAQsE,EAAIC,OAAOL,SACvI,kBAACJ,EAAA,EAAD,CAAKC,UAAWJ,EAAQH,QACpB,kBAACrB,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MAAM,UAAU0B,UAAWJ,EAAQH,OAAQlB,QAlClF,WACToB,EAAU5D,UAAY4D,EAAU3D,UAChCyE,MAAM,GAAD,OAAI3F,EAAJ,gBAA6B,CAC9B4F,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CACjBC,SAAUnB,EAAU5D,SACpBC,SAAU2D,EAAU3D,aAGvB+E,MAAK,SAAAC,GACiB,MAAfA,EAAIC,OACJvD,EAAYK,mBAAoB,EAEhCL,EAAYkB,gBAAiB,KAGpCsC,OAAM,SAAAC,GACHzD,EAAYkB,gBAAiB,OAiB2E7D,EAAOS,QACnG,kBAAC4C,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MAAM,YAAY0B,UAAWJ,EAAQH,OAAQlB,QAAS,kBAAMb,EAAYmC,YAAa,IAAQ9E,EAAOmB,aAMpJ,kBAACe,GAAD,CAAeY,KAAMH,EAAYK,oBACjC,kBAACY,GAAD,CAAYd,KAAMH,EAAYkB,qBC5E1C,SAASwC,GAAMjE,GACX,OACI,kBAACuC,GAAWvC,GCCpB,IAAMkE,GAAanE,cAAS,SAACC,GACzB,IAAMC,EAAQC,eACRC,EAAaC,YAAcH,EAAMI,YAAYC,KAAK,OAClDC,EAAcC,qBAAWX,IAE/B,OACI,kBAACY,EAAA,EAAD,CAAQC,KAAMV,EAAMU,KAAMC,QAAS,kBAAMJ,EAAY4D,gBAAiB,GAAOhE,WAAYA,GACrF,kBAACU,EAAA,EAAD,KAAcjD,EAAOO,gBACrB,kBAAC2C,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KAAoBnD,EAAOQ,eAC3B,kBAAC4C,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MAAM,YAAYC,QAAS,kBAAMb,EAAY4D,gBAAiB,IAAQvG,EAAOoB,UCXvHoF,GAAgBrE,cAAS,SAACC,GAC5B,IAAMC,EAAQC,eACRC,EAAaC,YAAcH,EAAMI,YAAYC,KAAK,OAClDC,EAAcC,qBAAWX,IAM/B,OACI,kBAACY,EAAA,EAAD,CAAQC,KAAMV,EAAMU,KAAMC,QAAS,kBAAMJ,EAAY8D,mBAAoB,GAAOlE,WAAYA,GACxF,kBAACU,EAAA,EAAD,KAAcjD,EAAOK,oBACrB,kBAAC6C,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KAAoBnD,EAAOM,mBAC3B,kBAAC8C,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MAAM,UAAUC,QAV7C,WACXC,OAAOC,SAASC,WAS0D3D,EAAOoB,UCAnFsF,GAAkB,WACpBC,SAASC,OAAS,gDCXhB9C,GAAYC,aAAW,SAAA1B,GAAK,MAAK,CACnC2B,IAAK,CACDC,QAAS,OACTC,cAAe,SACfC,eAAgB,SAChBC,WAAY,SACZC,aAAc,SACdC,MAAO,QAEXI,OAAQ,CACJA,OAAQrC,EAAMoC,QAAQ,IAE1BF,GAAI,CACAC,aAAcnC,EAAMoC,QAAQ,QAK9BoC,GAAS1E,cAAS,SAACC,GACrB,IAAMwC,EAAYhC,qBAAWd,IACvBa,EAAcC,qBAAWX,IAEzB4C,EAAUf,KACVzB,EAAQC,cACRC,EAAaC,YAAcH,EAAMI,YAAYC,KAAK,OAkBxD,OACI,oCACI,kBAACG,EAAA,EAAD,CAAQC,KAAMV,EAAMU,KAAMC,QAAS,kBAAMJ,EAAYmE,YAAa,GAAOvE,WAAYA,GACjF,kBAACU,EAAA,EAAD,KAAcjD,EAAOG,QACrB,kBAAC+C,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KAAoBnD,EAAOI,YAC3B,kBAACgD,EAAA,EAAD,KACI,kBAAC4B,EAAA,EAAD,CAAKC,UAAWJ,EAAQb,KACpB,kBAACkB,EAAA,EAAD,CAAWC,MAAOnF,EAAOgB,SAAUoE,MAAOR,EAAU5D,SAAUqE,WAAS,EAACC,UAAQ,EAACL,UAAWJ,EAAQN,GAAIgB,SAAU,SAAAC,GAAG,OAAIZ,EAAU5D,SAAWwE,EAAIC,OAAOL,SACzJ,kBAACF,EAAA,EAAD,CAAWC,MAAOnF,EAAOiB,SAAUmE,MAAOR,EAAU3D,SAAUoE,WAAS,EAACC,UAAQ,EAACL,UAAWJ,EAAQN,GAAIgB,SAAU,SAAAC,GAAG,OAAIZ,EAAU3D,SAAWuE,EAAIC,OAAOL,OAAO7F,KAAK,aACrK,kBAACyF,EAAA,EAAD,CAAKC,UAAWJ,EAAQH,QACpB,kBAACrB,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MAAM,UAAU0B,UAAWJ,EAAQH,OAAQlB,QA1BlF,WACbkC,MAAM,GAAD,OAAI3F,EAAJ,6BAAkC6E,EAAU5D,SAA5C,uBAAmE4D,EAAU3D,SAA7E,MACA+E,MAAK,SAAAC,GDfG,IAACjF,ECgBa,MAAfiF,EAAIC,QACJvD,EAAY8D,mBAAoB,EDjB9BzF,ECkBW4D,EAAU5D,SDjBvB+F,aACRC,QAAQ,WAAYhG,ICkBZ2B,EAAY4D,gBAAiB,KAGpCJ,OAAM,SAAAC,GACHzD,EAAY4D,gBAAiB,OAe+EvG,EAAOG,QACnG,kBAACkD,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MAAM,YAAY0B,UAAWJ,EAAQH,OAAQlB,QAAS,kBAAMb,EAAYmE,YAAa,IAAS9G,EAAOmB,aAMrJ,kBAACqF,GAAD,CAAe1D,KAAMH,EAAY8D,oBACjC,kBAACH,GAAD,CAAYxD,KAAMH,EAAY4D,qBCrE1C,SAASF,GAAMjE,GACX,OACI,kBAACyE,GAAWzE,GCMpB,I,YAAM0B,GAAYC,aAAW,SAAA1B,GAAK,MAAK,CACnC4E,KAAM,CACF3C,MAAO,IACP4C,OAAQ,YAIVC,GAAShF,cAAS,SAACC,GACrB,IAAMO,EAAcC,qBAAWX,IACzB2C,EAAYhC,qBAAWd,IAEvB+C,EAAUf,KAEhB,OACI,kBAACsD,EAAA,EAAD,CAAiBtE,KAAMV,EAAMU,KAAMC,QAASX,EAAMW,QAASsE,OAAQjF,EAAMW,SACrE,yBAAKkC,UAAWJ,EAAQoC,MACpB,kBAACK,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAYlE,QAAQ,MAAMtD,EAAOC,YAErC,kBAACwH,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,CAAMnE,MAAM,UAAUoE,KAAK,KACvB,kBAACJ,EAAA,EAAD,CAAUK,QAAM,GACZ,kBAACC,EAAA,EAAD,KAAc,kBAACC,EAAA,EAAD,CAAMvE,MAAM,eAC1B,kBAACwE,EAAA,EAAD,CAAcvI,QAASQ,EAAOE,SAGtC,kBAAC8H,GAAD,CAAe/D,QAASW,EAAUqD,WAClC,kBAACC,GAAD,CAAiBjE,QAASW,EAAUqD,WACpC,kBAACP,EAAA,EAAD,CAAMnE,MAAM,UAAUoE,KAAK,iDACvB,kBAACJ,EAAA,EAAD,CAAUK,QAAM,GACZ,kBAACC,EAAA,EAAD,KAAc,kBAACM,EAAA,EAAD,CAAM5E,MAAM,eAC1B,kBAACwE,EAAA,EAAD,CAAcvI,QAASQ,EAAOuB,aAK9C,kBAAC,GAAD,CAAQuB,KAAMH,EAAYmC,aAC1B,kBAAC,GAAD,CAAQhC,KAAMH,EAAYmE,iBAKhCkB,GAAgB7F,cAAS,SAACC,GAC5B,IAAMO,EAAcC,qBAAWX,IAE/B,OAAKG,EAAM6B,QAcA,KAZH,oCACI,kBAACsD,EAAA,EAAD,CAAUK,QAAM,EAACpE,QAAS,kBAAMb,EAAYmE,YAAa,IACrD,kBAACe,EAAA,EAAD,KAAc,kBAACO,EAAA,EAAD,CAAQ7E,MAAM,eAC5B,kBAACwE,EAAA,EAAD,CAAcvI,QAASQ,EAAOG,UAElC,kBAACoH,EAAA,EAAD,CAAUK,QAAM,EAACpE,QAAS,kBAAMb,EAAYmC,YAAa,IACrD,kBAAC+C,EAAA,EAAD,KAAc,kBAACQ,EAAA,EAAD,CAAW9E,MAAM,eAC/B,kBAACwE,EAAA,EAAD,CAAcvI,QAASQ,EAAOS,cAS5CyH,GAAkB/F,cAAS,SAACC,GAC9B,IAAMwC,EAAYhC,qBAAWd,IAY7B,OAAIM,EAAM6B,QAEF,oCACI,kBAACyD,EAAA,EAAD,CAAMnE,MAAM,UAAUoE,KAAK,aACvB,kBAACJ,EAAA,EAAD,CAAUK,QAAM,GACZ,kBAACC,EAAA,EAAD,KAAc,kBAACS,EAAA,EAAD,CAAsB/E,MAAM,eAC1C,kBAACwE,EAAA,EAAD,CAAcvI,QAASQ,EAAOsB,YAGtC,kBAACiG,EAAA,EAAD,CAAUK,QAAM,GACZ,kBAACC,EAAA,EAAD,KAAc,kBAACO,EAAA,EAAD,CAAQ7E,MAAM,eAC5B,kBAACwE,EAAA,EAAD,CAAcvI,QAAO,UAAKQ,EAAO0B,WAAZ,YAA0BkD,EAAU5D,aAE7D,kBAACuG,EAAA,EAAD,CAAUK,QAAM,EAACpE,QAvBd,WACXoB,EAAUqD,UAAW,EACrBrD,EAAU3D,SAAW,GACrB2D,EAAU5D,SAAW,GACrB4D,EAAU1D,MAAQ,GAClB0D,EAAU2D,IAAM,GAChB7B,KACAjD,OAAOC,SAASC,WAiBJ,kBAACkE,EAAA,EAAD,KAAc,kBAACW,EAAA,EAAD,CAAWjF,MAAM,eAC/B,kBAACwE,EAAA,EAAD,CAAcvI,QAASQ,EAAO2B,WAKnC,Q,qECnGT8G,GAAkBtG,cAAS,SAACC,GAC9B,IAAMwC,EAAYhC,qBAAWd,IACvBa,EAAcC,qBAAWX,IAiB/B,OAAIG,EAAM6B,QAEF,kBAAC,KAAD,CAAMyE,aAAW,EAACC,SAAUvG,EAAMuG,SAAU7F,KAAMV,EAAMU,KAAMC,QAjBhD,WAClBJ,EAAYiG,gBAAkB,KAC9BjG,EAAYkG,aAAc,IAgBlB,kBAACC,GAAA,EAAD,KACI,kBAACjB,EAAA,EAAD,KAAc,kBAACO,EAAA,EAAD,CAAQ7E,MAAM,eAC5B,kBAACwE,EAAA,EAAD,CAAcvI,QAAO,UAAKQ,EAAO0B,WAAZ,YAA0BkD,EAAU5D,aAE7D,kBAAC0G,EAAA,EAAD,CAAMnE,MAAM,UAAUoE,KAAK,aACvB,kBAACmB,GAAA,EAAD,KACI,kBAACjB,EAAA,EAAD,KAAc,kBAACS,EAAA,EAAD,CAAsB/E,MAAM,eAC1C,kBAACwE,EAAA,EAAD,CAAcvI,QAASQ,EAAOsB,YAGtC,kBAACwH,GAAA,EAAD,CAAUtF,QAvBP,WACXoB,EAAU5D,SAAW,GACrB4D,EAAU3D,SAAW,GACrB2D,EAAU1D,MAAQ,GAClB0D,EAAU2D,IAAM,GAChB3D,EAAUqD,UAAW,EACrBvB,KACAjD,OAAOC,SAASC,WAiBJ,kBAACkE,EAAA,EAAD,KAAc,kBAACO,EAAA,EAAD,CAAQ7E,MAAM,eAC5B,kBAACwE,EAAA,EAAD,CAAcvI,QAASQ,EAAO2B,WAKnC,QCrCTmC,GAAYC,aAAW,SAAA1B,GAAK,MAAK,CACnC0G,WAAY,CACRC,YAAa3G,EAAMoC,QAAQ,IAE/BnD,QAAS,CACL2C,QAAS,OACTE,eAAgB,WAChBG,MAAO,YAIT2E,GAAS9G,cAAS,SAACC,GACrB,IAAMO,EAAcC,qBAAWX,IACzB2C,EAAYhC,qBAAWd,IAEvB+C,EAAUf,KAEVoF,EAAgB,SAAA1D,KACdA,GAA2B,YAApBA,EAAIC,OAAOlG,MAAmC,QAAZiG,EAAI2D,KAA6B,UAAZ3D,EAAI2D,OAEtExG,EAAYyG,YAAczG,EAAYyG,aAQ1C,OACI,6BACI,kBAACC,GAAA,EAAD,CAAQC,SAAS,UACb,kBAACC,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAYC,KAAK,QAAQxE,UAAWJ,EAAQkE,WAAYxF,MAAM,UAAUC,QAAS0F,GAC7E,kBAACQ,GAAA,EAAD,OAEJ,kBAAClC,EAAA,EAAD,CAAYlE,QAAQ,MACftD,EAAOC,WAEZ,kBAAC+E,EAAA,EAAD,CAAKC,UAAWJ,EAAQvD,QAAS2C,QAAUW,EAAUqD,SAAY,QAAU,mBACvE,kBAACuB,GAAA,EAAD,CAAYhG,QAhBL,SAAAgC,GACvB7C,EAAYkG,aAAc,EAC1BlG,EAAYiG,gBAAkBpD,EAAImE,gBAed,kBAAC,KAAD,QAGR,kBAAClB,GAAD,CAAiB3F,KAAMH,EAAYkG,YAAaF,SAAUhG,EAAYiG,gBAAiB3E,QAASW,EAAUqD,aAGlH,kBAACd,GAAD,CAAQrE,KAAMH,EAAYyG,WAAY/B,OAAQ6B,EAAenG,QAAS,kBAAMJ,EAAYyG,YAAa,SCtD3G/C,GAAQ,SAACjE,GACX,OACI,kBAAC6G,GAAW7G,I,oECAd0B,GAAYC,aAAW,SAAA1B,GAAK,MAAK,CACnCuH,QAAS,CACL3F,QAAS,OACTC,cAAe,SACfQ,OAAQrC,EAAMoC,QAAQ,IAE1BoF,MAAO,CACHnF,OAAQrC,EAAMoC,QAAQ,IAE1BqF,MAAO,CACHpF,OAAQrC,EAAMoC,QAAQ,GACtBsF,QAAS,KACTC,SAAU,OAEdC,KAAM,CACFC,WAAY7H,EAAMoC,QAAQ,QAK5B0F,GAAU,SAAC/H,GACb,IAAMyC,EAAUf,KAYhB,OACI,kBAACyD,EAAA,EAAD,CAAUK,QAAM,EAAC3C,UAAWJ,EAAQ+E,SAChC,kBAACQ,GAAA,EAAD,CAAOnF,UAAWJ,EAAQiF,OACtB,kBAACtC,EAAA,EAAD,CAAYlE,QAAQ,OAXd,WACd,OAAIlB,EAAMiI,IAAIC,OAAS,GACZlI,EAAMiI,IAAIE,UAAU,EAAG,IAAM,MAEjCnI,EAAMiI,OAQL,6BACA,kBAACrF,EAAA,EAAD,CAAKf,QAAQ,QACT,kBAACuG,GAAA,EAAD,CAASjH,MAAM,cACf,kBAACwE,EAAA,EAAD,CAAcvI,QAAS4C,EAAMqI,SAAUxF,UAAWJ,EAAQoF,QAE9D,kBAACvC,EAAA,EAAD,CAAMnE,MAAM,UAAUoE,KAAMvF,EAAMiI,KAC9B,kBAAChH,EAAA,EAAD,CAAQE,MAAM,UAAUD,QAAQ,aAAatD,EAAOe,eC7ClE2J,I,qHACD7I,M,wEAAsB,M,IAGd8I,GAAsB5I,wBAAc,IAAI2I,ICC/C5G,GAAYC,aAAW,iBAAO,CAChC6G,SAAU,CACNlG,OAAQ,MAEZV,IAAK,CACDC,QAAS,OACTC,cAAe,SACfC,eAAgB,SAChBC,WAAY,cAKdyG,GAAc1I,cAAS,SAACC,GAC1B,IAAM0I,EAAelI,qBAAW+H,IAE1B9F,EAAUf,KAEhBiH,qBAAU,WACNrF,MAAM,GAAD,OAAI3F,EAAJ,gBACAiG,MAAK,SAAAC,GACF,GAAIA,EAAI7E,GACJ,OAAO6E,EAAI+E,UAElBhF,MAAK,SAAAC,GACF6E,EAAaG,SAAWhF,EAAIiF,WAGrC,IAoBH,OACI,kBAAC5D,EAAA,EAAD,KAlBI6D,MAAMC,QAAQN,EAAaG,WAAaH,EAAaG,SAASX,OACvDa,MAAME,KAAKP,EAAaG,UAAUK,KAAI,SAAAC,GACzC,OAAO,kBAAC,GAAD,CAASlB,IAAKkB,EAAKlB,IAAKI,SAAUc,EAAKd,SAAUtB,IAAKqC,KAAKC,UAIlE,kBAACzG,EAAA,EAAD,CAAKC,UAAWJ,EAAQb,KACpB,kBAAC0H,GAAA,EAAD,CAAkBC,KAAM,IAAK1G,UAAWJ,EAAQ+F,WAChD,kBAACc,GAAA,EAAD,CAAkBC,KAAM,IAAK1G,UAAWJ,EAAQ+F,WAChD,kBAACc,GAAA,EAAD,CAAkBC,KAAM,IAAK1G,UAAWJ,EAAQ+F,WAChD,kBAACc,GAAA,EAAD,CAAkBC,KAAM,IAAK1G,UAAWJ,EAAQ+F,WAChD,kBAACc,GAAA,EAAD,CAAkBC,KAAM,IAAK1G,UAAWJ,EAAQ+F,gBC/C9DvE,GAAQ,SAACjE,GACX,OACI,kBAACyI,GAAgBzI,ICDnB0B,GAAYC,aAAW,SAAA1B,GAAK,MAAK,CACnCuJ,QAAS,CACL3H,QAAS,OACTC,cAAe,SACfQ,OAAQrC,EAAMoC,QAAQ,IAE1BqF,MAAO,CACHpF,OAAQrC,EAAMoC,QAAQ,GACtBsF,QAAS,KACTC,SAAU,OAEdhG,IAAK,CACDC,QAAS,OACTC,cAAe,MACfC,eAAgB,iBAEpBI,GAAI,CACAC,aAAcnC,EAAMoC,QAAQ,IAEhCwF,KAAM,CACFC,WAAY7H,EAAMoC,QAAQ,QAKlC,SAASoH,GAAQzJ,GACb,IAAMyC,EAAUf,KAEhB,OACI,kBAACyD,EAAA,EAAD,CAAUK,QAAM,EAAC3C,UAAWJ,EAAQ+G,SAChC,kBAACxB,GAAA,EAAD,CAAOnF,UAAWJ,EAAQiF,OACtB,kBAAC9E,EAAA,EAAD,CAAKC,UAAS,UAAKJ,EAAQb,IAAb,YAAoBa,EAAQN,KACtC,kBAACiD,EAAA,EAAD,CAAYlE,QAAQ,MAAMlB,EAAMyH,OAChC,kBAACrC,EAAA,EAAD,CAAYlE,QAAQ,WAAWlB,EAAM0J,OAEzC,kBAAC/D,EAAA,EAAD,CAAcvI,QAAS4C,EAAM2J,QAAS9G,UAAWJ,EAAQN,KACzD,kBAACS,EAAA,EAAD,CAAKC,UAAWJ,EAAQb,KACpB,kBAACwD,EAAA,EAAD,CAAYlE,QAAQ,WAAWlB,EAAM4J,QACrC,kBAAChH,EAAA,EAAD,CAAKf,QAAQ,QACT,kBAACuG,GAAA,EAAD,CAASjH,MAAM,cACf,kBAACwE,EAAA,EAAD,CAAcvI,QAAS4C,EAAM6J,MAAOhH,UAAWJ,EAAQoF,W,ICzCzEiC,I,qHACDrK,M,wEAAsB,M,IAGdsK,GAAsBpK,wBAAc,IAAImK,ICC/CpI,GAAYC,aAAW,SAAA1B,GAAK,MAAK,CACnC2B,IAAK,CACDC,QAAS,OACTC,cAAe,SACfC,eAAgB,SAChBC,WAAY,UAEhBwG,SAAU,CACNlG,OAAQ,UAIV0H,GAAcjK,cAAS,SAACC,GAC1B,IAAMyC,EAAUf,KAEVuI,EAAezJ,qBAAWuJ,IAgChC,OA9BApB,qBAAU,WACNrF,MAAM,GAAD,OAAI3F,EAAJ,0BACAiG,MAAK,SAAAC,GACF,GAAIA,EAAI7E,GACJ,OAAO6E,EAAI+E,UAElBhF,MAAK,SAAAC,GACFoG,EAAa5B,SAAWxE,EAAIwE,cAErC,IAsBC,kBAACnD,EAAA,EAAD,KAnBI6D,MAAMC,QAAQiB,EAAa5B,WAAa4B,EAAa5B,SAASH,OACvD+B,EAAa5B,SAASa,KAAI,SAAAC,GAC7B,OAAO,kBAACM,GAAD,CAASC,KAAMP,EAAKO,KAAMC,QAASR,EAAKQ,QAASlC,MAAO0B,EAAKe,SAAUjC,IAAKkB,EAAKlB,IAAK2B,OAAQT,EAAKS,OAAQC,MAAOV,EAAKgB,MAAOpD,IAAKqC,KAAKC,UAI/I,kBAACzG,EAAA,EAAD,CAAKC,UAAWJ,EAAQb,KACpB,kBAAC0H,GAAA,EAAD,CAAkBC,KAAM,IAAK1G,UAAWJ,EAAQ+F,WAChD,kBAACc,GAAA,EAAD,CAAkBC,KAAM,IAAK1G,UAAWJ,EAAQ+F,WAChD,kBAACc,GAAA,EAAD,CAAkBC,KAAM,IAAK1G,UAAWJ,EAAQ+F,WAChD,kBAACc,GAAA,EAAD,CAAkBC,KAAM,IAAK1G,UAAWJ,EAAQ+F,WAChD,kBAACc,GAAA,EAAD,CAAkBC,KAAM,IAAK1G,UAAWJ,EAAQ+F,gBC7CpE,SAASvE,GAAMjE,GACX,OACI,kBAACgK,GAAgBhK,GCAzB,SAAS0F,KACL,OACI,kBAAC0E,GAAA,EAAD,CAAMC,WAAS,GACX,kBAACD,GAAA,EAAD,CAAMjB,MAAI,EAACmB,GAAI,GAAIC,GAAI,GACnB,kBAAC,GAAD,OAEJ,kBAACH,GAAA,EAAD,CAAMjB,MAAI,EAACmB,GAAI,GAAIC,GAAI,GACnB,kBAAC,GAAD,Q,aCLV7I,GAAYC,aAAW,SAAA1B,GAAK,MAAK,CACnCyH,MAAO,CACHxF,MAAO,OACPyF,QAAS1H,EAAMoC,QAAQ,IAE3BmI,UAAW,CACPtI,MAAO,MACPI,OAAQrC,EAAMoC,QAAQ,IAE1BoI,IAAK,CACD5I,QAAS,OACTE,eAAgB,UAEpBH,IAAK,CACDC,QAAS,OACTE,eAAgB,SAChBD,cAAe,SACfE,WAAY,UAEhB0I,UAAU,cACN7I,QAAS,OACTC,cAAe,MACfC,eAAgB,SAChBG,MAAO,QACNjC,EAAMI,YAAYC,KAAK,MAAQ,CAC5BwB,cAAe,WAGvB0D,OAAQ,CACJlD,OAAQrC,EAAMoC,QAAQ,QAIxBsI,GAAU5K,cAAS,SAACC,GACtB,IAAMwC,EAAYhC,qBAAWd,IAEvB+C,EAAUf,KACZkJ,EAAUC,eAUd,OACI,yBAAKhI,UAAWJ,EAAQgI,KACpB,kBAACzC,GAAA,EAAD,CAAOnF,UAAWJ,EAAQiF,OACtB,kBAAC9E,EAAA,EAAD,CAAKC,UAAWJ,EAAQb,KACpB,kBAACkB,EAAA,EAAD,CAAWC,MAAOnF,EAAOgB,SAAUiE,UAAWJ,EAAQ+H,UAAWxH,MAAOR,EAAU5D,SAAUuE,SAAU,SAAAC,GAAG,OAAIZ,EAAU5D,SAAWwE,EAAIC,OAAOL,SAC7I,kBAACF,EAAA,EAAD,CAAWC,MAAOnF,EAAOiB,SAAUgE,UAAWJ,EAAQ+H,UAAWxH,MAAOR,EAAU3D,SAAUsE,SAAU,SAAAC,GAAG,OAAIZ,EAAU3D,SAAWuE,EAAIC,OAAOL,OAAO7F,KAAK,aACzJ,kBAAC2F,EAAA,EAAD,CAAWC,MAAOnF,EAAOkB,MAAO+D,UAAWJ,EAAQ+H,UAAWxH,MAAOR,EAAU1D,MAAOqE,SAAU,SAAAC,GAAG,OAAIZ,EAAU1D,MAAQsE,EAAIC,OAAOL,SACpI,kBAACJ,EAAA,EAAD,CAAKC,UAAWJ,EAAQiI,WACpB,kBAACzJ,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MAAM,UAAUC,QAhB/C,aAgBkEyB,UAAWJ,EAAQ+C,QAAS5H,EAAOqB,aAClG,kBAACgC,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MAAM,YAAYC,QAbrD,WACTwJ,EAAQE,KAAK,MAYgEjI,UAAWJ,EAAQ+C,QAAS5H,EAAOmB,eC3DxH,SAASgM,GAAS/K,GACd,OACI,oCACI,kBAACoF,EAAA,EAAD,CAAYlE,QAAQ,MAAMtD,EAAOwB,eACjC,kBAACgG,EAAA,EAAD,CAAYlE,QAAQ,KAAKtD,EAAOyB,e,cCAtCqC,GAAYC,aAAW,SAAA1B,GAAK,MAAK,CACnC+K,GAAI,CACAC,UAAWhL,EAAMoC,QAAQ,QAIjC,SAAS6I,GAAOlL,GACZ,IAAMyC,EAAUf,KAEhB,OACI,kBAACyJ,GAAA,EAAD,CAAWC,OAAK,EAACvI,UAAWJ,EAAQuI,IAChC,kBAAC,KAAD,KACI,kBAAC,KAAD,CAAOK,OAAK,EAACC,KAAK,IAAIC,OAAQ,SAACC,GAAD,OAAU,kBAAC,GAASA,MAClD,kBAAC,KAAD,CAAOH,OAAK,EAACC,KAAK,WAAWC,OAAQ,SAACC,GAAD,OAAU,kBAACb,GAAYa,MAC5D,kBAAC,KAAD,CAAOH,OAAK,EAACC,KAAK,OAAOC,OAAQ,SAACC,GAAD,OAAU,kBAACT,GAAaS,MACzD,kBAAC,KAAD,CAAUC,GAAG,W,cCcdC,GAxBH3L,cAAS,SAACC,GACpB,IAAMwC,EAAYhC,qBAAWd,IAU7B,OnBhBkB,SAACiM,GACjB,OAAO,IAAIC,SAAQ,SAAAC,GACfvI,MAAM,GAAD,OAAI3F,EAAJ,8BAAmCgO,EAAnC,MACA/H,MAAK,SAAAC,GACiB,MAAfA,EAAIC,OACJ+H,GAAQ,GACc,MAAfhI,EAAIC,QACX+H,GAAQ,SmBE1BC,CnBfmB,WACjB,IAAMH,EAAYpH,SAASC,OAAOuH,MAAM,IAAIC,OAAO,qBACnD,GAAIL,EACA,OAAQA,EAAUzD,OAAUyD,EAAU,GAAGM,MAAM,KAAK,GAAK,KmBU7CC,IAEKtI,MAAK,SAAAC,GACtBA,IACFrB,EAAUqD,UAAW,EACrBrD,EAAU5D,SnBWI+F,aACDwH,QAAQ,gBmBPvB,6BACE,kBAACC,EAAA,EAAD,CAAenM,MAAOA,GACpB,kBAAC,IAAD,KACE,kBAACoM,GAAA,EAAD,MACA,kBAAC,GAAD,MACA,kBAAC,GAAD,Y,OCzBVC,IAASf,OAAO,kBAAC,GAAD,MAAShH,SAASgI,eAAe,U","file":"static/js/main.e7969997.chunk.js","sourcesContent":["import { createMuiTheme } from '@material-ui/core/styles';\n\nconst palette = {\n    type: \"dark\",\n    primary: {\n        light: '#ff9800',\n        main: '#f57c00',\n        dark: '#e65100',\n        contrastText: '#fffff'\n    },\n    secondary: {\n        light: '#42a5f5',\n        main: '#1e88e5',\n        dark: '#0d47a1',\n        contrastText: '#fffff'\n    }\n};\nconst themeName = 'CommentSense';\n\nexport default createMuiTheme({ palette, themeName });\n","const ipAddress = \"http://commentsense.de\";\n\nconst langDe = {\n    brandName: \"CommentSense\",\n    home: \"Home\",\n    signIn: \"Anmelden\",\n    signInText: \"Hier kommt noch ein Text hin\",\n    signInSuccessTitle: \"Erfolgreich angemeldet\",\n    signInSuccessText: \"Du hast dich erfolgreich angemeldet\",\n    signInErrTitle: \"Fehler!\",\n    signInErrText: \"Fehler beim anmelden\",\n    signUp: \"Registieren\",\n    signUpText: \"Hier kommt noch ein Text hin\",\n    signUpSuccessTitle: \"Nutzer erstellt\",\n    signUpSuccessText: \"Der Nutzer wurde erfolgreich erstellt\",\n    signUpErrTitle: \"Fehler!\",\n    signUpErrText: \"Der Nutzer konnte nicht erstellt werden\",\n    toWebsite: \"zur Website wechseln\",\n    username: \"Nickname\",\n    password: \"Passwort\",\n    email: \"E-mail\",\n    cancel: \"Abbrechen\",\n    ok: \"OK\",\n    saveChanges: \"Änderungen speichern\",\n    account: \"Account bearbeiten\",\n    github: \"CommentSense auf Github\",\n    notFoundTitle: \"Seite nicht gefunden!\",\n    notFoundText: \"Die angefragte Seite konnte nicht gefunden werden.\",\n    loggedInAs: \"Angemeldet als: \",\n    logout: \"Abmelden\"\n};\n\n\nexport { ipAddress, langDe };","import { observable} from \"mobx\"\nimport {createContext} from \"react\";\n\nclass UserStore {\n    @observable username = \"\";\n    @observable password = \"\";\n    @observable email = \"\";\n    @observable sid = \"\";\n    @observable loggedIn = false;\n};\n\nexport const UserStoreContext = createContext(new UserStore());","import { observable } from \"mobx\";\nimport { createContext } from \"react\";\n\nclass DialogStore {\n    @observable openSignIn = false;\n    @observable openSignUp = false;\n    @observable openSignInSuccess = false;\n    @observable openSignInFail = false;\n    @observable openSignUpSuccess = false;\n    @observable openSignUpFail = false;\n    @observable openAccount = false;\n    @observable anchorElAccount = null;\n    @observable openDrawer = false;\n};\n\nexport const DialogStoreContext = createContext(new DialogStore());","import React, { useContext } from \"react\";\nimport { useTheme, useMediaQuery, Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, Button } from \"@material-ui/core\";\nimport { observer } from \"mobx-react-lite\";\nimport { DialogStoreContext } from \"../../../stores/DialogStore\";\nimport { langDe } from \"../../../constants\";\n\nconst SignUpSuccess = observer((props) => {\n    const theme = useTheme();\n    const fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\n    const dialogStore = useContext(DialogStoreContext);\n\n    const reload = () => {\n        window.location.reload();\n    };\n\n    return (\n        <Dialog open={props.open} onClose={() => dialogStore.openSignUpSuccess = false} fullScreen={fullScreen}>\n            <DialogTitle>{langDe.signUpSuccessTitle}</DialogTitle>\n            <DialogContent>\n                <DialogContentText>{langDe.signUpSuccessText}</DialogContentText>\n                <DialogActions>\n                    <Button variant=\"contained\" color=\"primary\" onClick={reload}>{langDe.ok}</Button>\n                </DialogActions>\n            </DialogContent>\n        </Dialog>\n    );\n});\n\nexport { SignUpSuccess };","import React, { useContext } from \"react\";\nimport { useTheme, useMediaQuery, Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, Button } from \"@material-ui/core\";\nimport { observer } from \"mobx-react-lite\";\nimport { DialogStoreContext } from \"../../../stores/DialogStore\";\nimport { langDe } from \"../../../constants\";\n\nconst SignUpFail = observer((props) => {\n    const theme = useTheme();\n    const fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\n    const dialogStore = useContext(DialogStoreContext);\n\n    return (\n        <Dialog open={props.open} onClose={() => dialogStore.openSignUpFail = false} fullScreen={fullScreen}>\n            <DialogTitle>{langDe.signUpErrTitle}</DialogTitle>\n            <DialogContent>\n                <DialogContentText>{langDe.signUpErrText}</DialogContentText>\n                <DialogActions>\n                    <Button variant=\"contained\" color=\"secondary\" onClick={() => dialogStore.openSignUpFail = false}>{langDe.ok}</Button>\n                </DialogActions>\n            </DialogContent>\n        </Dialog>\n    );\n});\n\nexport { SignUpFail };","import React, { useContext } from \"react\";\nimport { Dialog, useMediaQuery, DialogTitle, DialogContent, DialogContentText, DialogActions, TextField, Box, makeStyles, Button } from \"@material-ui/core\";\nimport { useTheme } from \"@material-ui/styles\";\nimport { observer } from \"mobx-react-lite\";\nimport { UserStoreContext } from \"../../../stores/UserStore\";\nimport { DialogStoreContext } from \"../../../stores/DialogStore\";\nimport { langDe, ipAddress } from \"../../../constants\";\nimport { SignUpSuccess } from \"./SignUpSuccess\";\nimport { SignUpFail } from \"./SignUpFail\";\n\nconst useStyles = makeStyles(theme => ({\n    box: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        alignContent: \"center\",\n        width: \"100%\"\n    },\n    mb: {\n        marginBottom: theme.spacing(2)\n    },\n    margin: {\n        margin: theme.spacing(1)\n    }\n}));\n\nconst SignUp = observer((props) => {\n    const theme = useTheme();\n    const fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\n\n    const userStore = useContext(UserStoreContext);\n    const dialogStore = useContext(DialogStoreContext);\n\n    const classes = useStyles();\n\n\n    const sendData = () => {\n        if (userStore.username && userStore.password) {\n            fetch(`${ipAddress}/api/signup/`, {\n                method: \"POST\",\n                body: JSON.stringify({\n                    userName: userStore.username,\n                    password: userStore.password\n                })\n            })\n                .then(res => {\n                    if (res.status === 200) {\n                        dialogStore.openSignUpSuccess = true;\n                    } else {\n                        dialogStore.openSignUpFail = true;\n                    }\n                })\n                .catch(e => {\n                    dialogStore.openSignUpFail = true;\n                });\n        }\n    };\n\n    return (\n        <>\n            <Dialog open={props.open} onClose={() => dialogStore.openSignUp = false} fullScreen={fullScreen}>\n                <DialogTitle>{langDe.signUp}</DialogTitle>\n                <DialogContent dividers>\n                    <DialogContentText>{langDe.signUpText}</DialogContentText>\n                    <DialogActions>\n                        <Box className={classes.box} >\n                            <TextField label={langDe.username} value={userStore.username} fullWidth required className={classes.mb} onChange={evt => userStore.username = evt.target.value} />\n                            <TextField label={langDe.password} value={userStore.password} fullWidth required className={classes.mb} onChange={evt => userStore.password = evt.target.value} type=\"password\" />\n                            <TextField label={langDe.email} value={userStore.email} fullWidth className={classes.mb} onChange={evt => userStore.email = evt.target.value} />\n                            <Box className={classes.margin} >\n                                <Button variant=\"contained\" color=\"primary\" className={classes.margin} onClick={sendData} >{langDe.signUp}</Button>\n                                <Button variant=\"contained\" color=\"secondary\" className={classes.margin} onClick={() => dialogStore.openSignUp = false}>{langDe.cancel}</Button>\n                            </Box>\n                        </Box>\n                    </DialogActions>\n                </DialogContent>\n            </Dialog>\n            <SignUpSuccess open={dialogStore.openSignUpSuccess} />\n            <SignUpFail open={dialogStore.openSignUpFail} />\n        </>\n    );\n});\n\nexport { SignUp };","import React from \"react\";\nimport { SignUp } from \"./SignUp\";\n\nfunction index(props) {\n    return (\n        <SignUp {...props} />\n    );\n};\n\nexport { index as SignUp };","import React, { useContext } from \"react\";\nimport { observer } from \"mobx-react-lite\";\nimport { useTheme, useMediaQuery, Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, Button } from \"@material-ui/core\";\nimport { DialogStoreContext } from \"../../../stores/DialogStore\";\nimport { langDe } from \"../../../constants\";\n\nconst SignInFail = observer((props) => {\n    const theme = useTheme();\n    const fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\n    const dialogStore = useContext(DialogStoreContext);\n\n    return (\n        <Dialog open={props.open} onClose={() => dialogStore.openSignInFail = false} fullScreen={fullScreen}>\n            <DialogTitle>{langDe.signInErrTitle}</DialogTitle>\n            <DialogContent>\n                <DialogContentText>{langDe.signInErrText}</DialogContentText>\n                <DialogActions>\n                    <Button variant=\"contained\" color=\"secondary\" onClick={() => dialogStore.openSignInFail = false}>{langDe.ok}</Button>\n                </DialogActions>\n            </DialogContent>\n        </Dialog>\n    );\n});\n\nexport { SignInFail };\n","import React, { useContext } from \"react\";\nimport { useTheme, useMediaQuery, Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, Button } from \"@material-ui/core\";\nimport { observer } from \"mobx-react-lite\";\nimport { DialogStoreContext } from \"../../../stores/DialogStore\";\nimport { langDe } from \"../../../constants\";\n\nconst SignInSuccess = observer((props) => {\n    const theme = useTheme();\n    const fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\n    const dialogStore = useContext(DialogStoreContext);\n\n    const reload = () => {\n        window.location.reload();\n    };\n\n    return (\n        <Dialog open={props.open} onClose={() => dialogStore.openSignInSuccess = false} fullScreen={fullScreen}>\n            <DialogTitle>{langDe.signInSuccessTitle}</DialogTitle>\n            <DialogContent>\n                <DialogContentText>{langDe.signInSuccessText}</DialogContentText>\n                <DialogActions>\n                    <Button variant=\"contained\" color=\"primary\" onClick={reload}>{langDe.ok}</Button>\n                </DialogActions>\n            </DialogContent>\n        </Dialog>\n    );\n});\n\nexport { SignInSuccess };","import { ipAddress } from \"./constants\";\n\nconst useSessionId = () => {\n    const sessionId = document.cookie.match(new RegExp('(^| )sid=([^;]+)'));\n    if (sessionId)\n        return (sessionId.length) ? sessionId[0].split(\"=\")[1] : null;\n};\n\nconst useLoggedIn = (sessionId) => {\n    return new Promise(resolve => {\n        fetch(`${ipAddress}/api/checksid?sid='${sessionId}'`)\n            .then(res => {\n                if (res.status === 410) {\n                    resolve(false);\n                } else if (res.status === 200) {\n                    resolve(true);\n                }\n            })\n    });\n};\n\nconst removeSessionId = () => {\n    document.cookie = \"sid=; expires Thu, 01 Jan 1970 00:00:01 GMT;\";\n};\n\nconst saveUsername = (username) => {\n    const storage = localStorage;\n    storage.setItem(\"username\", username);\n};\n\nconst getUsername = () => {\n    const storage = localStorage;\n    return storage.getItem(\"username\");\n};\n\nexport {\n    useSessionId,\n    useLoggedIn,\n    saveUsername,\n    getUsername,\n    removeSessionId\n};","import React, { useContext } from \"react\";\nimport { observer } from \"mobx-react-lite\";\nimport { Dialog, useMediaQuery, DialogTitle, DialogContent, DialogContentText, DialogActions, TextField, Box, makeStyles, Button } from \"@material-ui/core\";\nimport { useTheme } from \"@material-ui/styles\";\nimport { langDe, ipAddress } from \"../../../constants\";\nimport { UserStoreContext } from \"../../../stores/UserStore\";\nimport { DialogStoreContext } from \"../../../stores/DialogStore\";\nimport { SignInFail } from \"./SignInFail\";\nimport { SignInSuccess } from \"./SignInSuccess\";\nimport { saveUsername } from \"../../../helpers\";\n\nconst useStyles = makeStyles(theme => ({\n    box: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        alignContent: \"center\",\n        width: \"100%\"\n    },\n    margin: {\n        margin: theme.spacing(1)\n    },\n    mb: {\n        marginBottom: theme.spacing(2)\n    }\n}));\n\n\nconst SignIn = observer((props) => {\n    const userStore = useContext(UserStoreContext);\n    const dialogStore = useContext(DialogStoreContext);\n\n    const classes = useStyles();\n    const theme = useTheme();\n    const fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\n\n\n    const sendData = () => {\n        fetch(`${ipAddress}/api/signin?name='${userStore.username}'&password='${userStore.password}'`)\n            .then(res => {\n                if (res.status === 200) {\n                    dialogStore.openSignInSuccess = true;\n                    saveUsername(userStore.username);\n                } else {\n                    dialogStore.openSignInFail = true;\n                }\n            })\n            .catch(e => {\n                dialogStore.openSignInFail = true;\n            })\n    };\n\n    return (\n        <>\n            <Dialog open={props.open} onClose={() => dialogStore.openSignIn = false} fullScreen={fullScreen}>\n                <DialogTitle>{langDe.signIn}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>{langDe.signInText}</DialogContentText>\n                    <DialogActions>\n                        <Box className={classes.box}>\n                            <TextField label={langDe.username} value={userStore.username} fullWidth required className={classes.mb} onChange={evt => userStore.username = evt.target.value} />\n                            <TextField label={langDe.password} value={userStore.password} fullWidth required className={classes.mb} onChange={evt => userStore.password = evt.target.value} type=\"password\" />\n                            <Box className={classes.margin}>\n                                <Button variant=\"contained\" color=\"primary\" className={classes.margin} onClick={sendData} >{langDe.signIn}</Button>\n                                <Button variant=\"contained\" color=\"secondary\" className={classes.margin} onClick={() => dialogStore.openSignIn = false} >{langDe.cancel}</Button>\n                            </Box>\n                        </Box>\n                    </DialogActions>\n                </DialogContent>\n            </Dialog>\n            <SignInSuccess open={dialogStore.openSignInSuccess} />\n            <SignInFail open={dialogStore.openSignInFail} />\n        </>\n    );\n});\n\nexport { SignIn };","import React from \"react\";\nimport { SignIn } from \"./SignIn\";\n\nfunction index(props) {\n    return (\n        <SignIn {...props} />\n    );\n};\n\nexport { index as SignIn };","import React, { useContext } from \"react\";\nimport { SwipeableDrawer, makeStyles, ListItem, Typography, List, Divider, Link, ListItemText, ListItemIcon } from \"@material-ui/core\";\nimport { langDe } from \"../../constants\";\nimport { Home, Person, PersonAdd, SettingsApplications, Code, ExitToApp } from \"@material-ui/icons\";\nimport { SignUp } from \"../Dialogs/SignUp/\";\nimport { SignIn } from \"../Dialogs/SignIn/\";\nimport { observer } from \"mobx-react-lite\";\nimport { DialogStoreContext } from \"../../stores/DialogStore\";\nimport { UserStoreContext } from \"../../stores/UserStore\";\nimport { removeSessionId } from \"../../helpers\";\n\nconst useStyles = makeStyles(theme => ({\n    list: {\n        width: 250,\n        height: \"100%\"\n    }\n}));\n\nconst Drawer = observer((props) => {\n    const dialogStore = useContext(DialogStoreContext);\n    const userStore = useContext(UserStoreContext);\n\n    const classes = useStyles();\n\n    return (\n        <SwipeableDrawer open={props.open} onClose={props.onClose} onOpen={props.onClose}>\n            <div className={classes.list}>\n                <List>\n                    <ListItem>\n                        <Typography variant=\"h6\">{langDe.brandName}</Typography>\n                    </ListItem>\n                    <Divider />\n                    <Link color=\"inherit\" href=\"/\">\n                        <ListItem button>\n                            <ListItemIcon><Home color=\"secondary\" /></ListItemIcon>\n                            <ListItemText primary={langDe.home} />\n                        </ListItem>\n                    </Link>\n                    <CreateAccount display={userStore.loggedIn} />\n                    <LoggedInAccount display={userStore.loggedIn} />\n                    <Link color=\"inherit\" href=\"https://github.com/Jugendhackt/comment-sense/\">\n                        <ListItem button>\n                            <ListItemIcon><Code color=\"secondary\" /></ListItemIcon>\n                            <ListItemText primary={langDe.github} />\n                        </ListItem>\n                    </Link>\n                </List>\n            </div>\n            <SignUp open={dialogStore.openSignUp} />\n            <SignIn open={dialogStore.openSignIn} />\n        </SwipeableDrawer>\n    );\n});\n\nconst CreateAccount = observer((props) => {\n    const dialogStore = useContext(DialogStoreContext);\n\n    if (!props.display) {\n        return (\n            <>\n                <ListItem button onClick={() => dialogStore.openSignIn = true} >\n                    <ListItemIcon><Person color=\"secondary\" /></ListItemIcon>\n                    <ListItemText primary={langDe.signIn} />\n                </ListItem>\n                <ListItem button onClick={() => dialogStore.openSignUp = true} >\n                    <ListItemIcon><PersonAdd color=\"secondary\" /></ListItemIcon>\n                    <ListItemText primary={langDe.signUp} />\n                </ListItem>\n            </>\n        );\n    } else {\n        return null;\n    }\n});\n\nconst LoggedInAccount = observer((props) => {\n    const userStore = useContext(UserStoreContext);\n\n    const logout = () => {\n        userStore.loggedIn = false;\n        userStore.password = \"\";\n        userStore.username = \"\";\n        userStore.email = \"\";\n        userStore.sid = \"\";\n        removeSessionId();\n        window.location.reload();\n    };\n\n    if (props.display) {\n        return (\n            <>\n                <Link color=\"inherit\" href=\"/account/\">\n                    <ListItem button>\n                        <ListItemIcon><SettingsApplications color=\"secondary\" /></ListItemIcon>\n                        <ListItemText primary={langDe.account} />\n                    </ListItem>\n                </Link>\n                <ListItem button>\n                    <ListItemIcon><Person color=\"secondary\" /></ListItemIcon>\n                    <ListItemText primary={`${langDe.loggedInAs} ${userStore.username}`} />\n                </ListItem>\n                <ListItem button onClick={logout}>\n                    <ListItemIcon><ExitToApp color=\"secondary\" /></ListItemIcon>\n                    <ListItemText primary={langDe.logout} />\n                </ListItem>\n            </>\n        );\n    } else {\n        return null;\n    }\n});\n\nexport { Drawer };","import React, { useContext } from \"react\";\nimport { MenuItem, ListItemIcon, ListItemText, Menu, Link } from \"@material-ui/core\";\nimport { Person, SettingsApplications } from \"@material-ui/icons\";\nimport { langDe } from \"../../constants\";\nimport { observer } from \"mobx-react-lite\";\nimport { UserStoreContext } from \"../../stores/UserStore\";\nimport { DialogStoreContext } from \"../../stores/DialogStore\";\nimport { removeSessionId } from \"../../helpers\";\n\nconst AccountDropDown = observer((props) => {\n    const userStore = useContext(UserStoreContext);\n    const dialogStore = useContext(DialogStoreContext);\n\n    const handleOnClose = () => {\n        dialogStore.anchorElAccount = null;\n        dialogStore.openAccount = false;\n    };\n\n    const logout = () => {\n        userStore.username = \"\";\n        userStore.password = \"\";\n        userStore.email = \"\";\n        userStore.sid = \"\";\n        userStore.loggedIn = false;\n        removeSessionId();\n        window.location.reload();\n    };\n\n    if (props.display) {\n        return (\n            <Menu keepMounted anchorEl={props.anchorEl} open={props.open} onClose={handleOnClose}>\n                <MenuItem>\n                    <ListItemIcon><Person color=\"secondary\" /></ListItemIcon>\n                    <ListItemText primary={`${langDe.loggedInAs} ${userStore.username}`} />\n                </MenuItem>\n                <Link color=\"inherit\" href=\"/account/\">\n                    <MenuItem>\n                        <ListItemIcon><SettingsApplications color=\"secondary\" /></ListItemIcon>\n                        <ListItemText primary={langDe.account} />\n                    </MenuItem>\n                </Link>\n                <MenuItem onClick={logout}>\n                    <ListItemIcon><Person color=\"secondary\" /></ListItemIcon>\n                    <ListItemText primary={langDe.logout} />\n                </MenuItem>\n            </Menu>\n        );\n    } else {\n        return null;\n    }\n});\n\nexport { AccountDropDown };","import React, { useContext } from \"react\";\nimport { Drawer } from \"./Drawer\";\nimport { AppBar, Toolbar, IconButton, Typography, makeStyles, Box } from \"@material-ui/core\";\nimport { langDe } from \"../../constants\";\nimport { AccountCircle as AccountIcon, Menu as MenuIcon } from \"@material-ui/icons\";\n\nimport { AccountDropDown } from \"./AccountDropDown\";\nimport { DialogStoreContext } from \"../../stores/DialogStore\";\nimport { observer } from \"mobx-react-lite\";\nimport { UserStoreContext } from \"../../stores/UserStore\";\n\nconst useStyles = makeStyles(theme => ({\n    menuButton: {\n        marginRight: theme.spacing(2)\n    },\n    account: {\n        display: \"flex\",\n        justifyContent: \"flex-end\",\n        width: \"100%\"\n    }\n}));\n\nconst Navbar = observer((props) => {\n    const dialogStore = useContext(DialogStoreContext);\n    const userStore = useContext(UserStoreContext);\n\n    const classes = useStyles();\n\n    const handleOnClick = evt => {\n        if (evt && evt.target.type === \"keydown\" && (evt.key === \"Tab\" || evt.key === \"Shift\"))\n            return;\n        dialogStore.openDrawer = !dialogStore.openDrawer;\n    };\n\n    const handleClickAccount = evt => {\n        dialogStore.openAccount = true;\n        dialogStore.anchorElAccount = evt.currentTarget;\n    };\n\n    return (\n        <div>\n            <AppBar position=\"static\">\n                <Toolbar>\n                    <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" onClick={handleOnClick}>\n                        <MenuIcon />\n                    </IconButton>\n                    <Typography variant=\"h6\">\n                        {langDe.brandName}\n                    </Typography>\n                    <Box className={classes.account} display={(userStore.loggedIn) ? \"block\" : \"none !important\"}>\n                        <IconButton onClick={handleClickAccount}>\n                            <AccountIcon />\n                        </IconButton>\n                    </Box>\n                    <AccountDropDown open={dialogStore.openAccount} anchorEl={dialogStore.anchorElAccount} display={userStore.loggedIn} />\n                </Toolbar>\n            </AppBar>\n            <Drawer open={dialogStore.openDrawer} onOpen={handleOnClick} onClose={() => dialogStore.openDrawer = false} />\n        </div>\n    );\n});\n\nexport { Navbar };\n","import React from \"react\";\nimport { Navbar } from \"./Navbar\";\n\nconst index = (props) => {\n    return (\n        <Navbar {...props} />\n    );\n};\n\nexport { index as Header };","import React from \"react\";\nimport { ListItem, ListItemText, Typography, Link, Button, makeStyles, Paper, Box } from \"@material-ui/core\";\nimport { langDe } from \"../../constants\";\nimport { ThumbUp } from \"@material-ui/icons\";\n\nconst useStyles = makeStyles(theme => ({\n    website: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        margin: theme.spacing(1)\n    },\n    title: {\n        margin: theme.spacing(2)\n    },\n    paper: {\n        margin: theme.spacing(1),\n        padding: \"5%\",\n        minWidth: \"40%\"\n    },\n    text: {\n        marginLeft: theme.spacing(1)\n    }\n}));\n\n\nconst Website = (props) => {\n    const classes = useStyles();\n    const para = props;\n\n    \n    const showTitle = () => {\n        if (props.url.length > 40) {\n            return props.url.substring(0, 40) + \"...\";\n        }\n        return props.url;\n    }; \n\n\n    return (\n        <ListItem button className={classes.website} >\n            <Paper className={classes.paper}>\n                <Typography variant=\"h5\">{showTitle}</Typography>\n                <br />\n                <Box display=\"flex\">\n                    <ThumbUp color=\"secondary\" />\n                    <ListItemText primary={props.comments} className={classes.text} />\n                </Box>\n                <Link color=\"inherit\" href={props.url}>\n                    <Button color=\"primary\" variant=\"contained\">{langDe.toWebsite}</Button>\n                </Link>\n            </Paper>\n        </ListItem>\n    );\n};\n\nexport { Website }","import { createContext } from \"react\";\nimport { observable } from \"mobx\";\n\nclass WebsiteStore {\n    @observable websites = [];\n};\n\nexport const WebsiteStoreContext = createContext(new WebsiteStore());","import React, { useEffect, useContext } from \"react\";\nimport { List, makeStyles, CircularProgress, Box } from \"@material-ui/core\";\nimport uuid from \"uuid\";\nimport { ipAddress } from \"../../constants\";\nimport { Website } from \"./Website\";\nimport { WebsiteStoreContext } from \"../../stores/WebsiteStore\";\nimport { observer } from \"mobx-react-lite\";\n\nconst useStyles = makeStyles(() => ({\n    progress: {\n        margin: \"5%\"\n    },\n    box: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n    }\n}));\n\n// eslint-disable-next-line no-unused-vars\nconst TopWebsites = observer((props) => {\n    const websiteStore = useContext(WebsiteStoreContext);\n\n    const classes = useStyles();\n\n    useEffect(() => {\n        fetch(`${ipAddress}/api/sites/`)\n            .then(res => {\n                if (res.ok)\n                    return res.json();\n            })\n            .then(res => {\n                websiteStore.websites = res.sites;\n            })\n        \n    }, []);\n\n    const showWebsites = () => {\n        if (Array.isArray(websiteStore.websites) && websiteStore.websites.length) {\n            return Array.from(websiteStore.websites).map(item => {\n                return <Website url={item.url} comments={item.comments} key={uuid.v4()} />\n            });\n        } else {\n            return (\n                <Box className={classes.box}>\n                    <CircularProgress size={100} className={classes.progress} />\n                    <CircularProgress size={100} className={classes.progress} />\n                    <CircularProgress size={100} className={classes.progress} />\n                    <CircularProgress size={100} className={classes.progress} />\n                    <CircularProgress size={100} className={classes.progress} />\n                </Box>\n            );\n        }\n    };\n\n    return (\n        <List>\n            {showWebsites()}\n        </List>\n    );\n});\n\nexport { TopWebsites };","import React from \"react\";\nimport {TopWebsites} from \"./TopWebsites\";\n\nconst index = (props) => {\n    return (\n        <TopWebsites {...props} />\n    );\n};\n\nexport {index as TopWebsites};","import React from \"react\";\nimport { ListItem, Paper, makeStyles, Typography, ListItemText, Box } from \"@material-ui/core\";\nimport { ThumbUp } from \"@material-ui/icons\";\n\nconst useStyles = makeStyles(theme => ({\n    comment: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        margin: theme.spacing(1)\n    },\n    paper: {\n        margin: theme.spacing(2),\n        padding: \"5%\",\n        minWidth: \"40%\"\n    },\n    box: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        justifyContent: \"space-between\"\n    },\n    mb: {\n        marginBottom: theme.spacing(2)\n    },\n    text: {\n        marginLeft: theme.spacing(1)\n    }\n}));\n\n\nfunction Comment(props) {\n    const classes = useStyles();\n\n    return (\n        <ListItem button className={classes.comment}>\n            <Paper className={classes.paper}>\n                <Box className={`${classes.box} ${classes.mb}`}>\n                    <Typography variant=\"h5\">{props.title}</Typography>\n                    <Typography variant=\"caption\">{props.date}</Typography>\n                </Box>\n                <ListItemText primary={props.content} className={classes.mb} />\n                <Box className={classes.box}>\n                    <Typography variant=\"caption\">{props.author}</Typography>\n                    <Box display=\"flex\">\n                        <ThumbUp color=\"secondary\" />\n                        <ListItemText primary={props.votes} className={classes.text} />\n                    </Box>\n                </Box>\n            </Paper>\n        </ListItem>\n    );\n};\n\nexport { Comment };","import { observable } from \"mobx\";\nimport { createContext } from \"react\";\n\nclass CommentStore {\n    @observable comments = [];\n};\n\nexport const CommentStoreContext = createContext(new CommentStore());\n\n","import React, { useEffect, useContext } from \"react\";\nimport uuid from \"uuid\";\nimport {observer} from \"mobx-react-lite\";\nimport { List, makeStyles, CircularProgress, Box } from \"@material-ui/core\";\nimport { Comment } from \"./Comment\";\nimport { ipAddress } from \"../../constants\";\nimport { CommentStoreContext } from \"../../stores/CommentStore\";\n\nconst useStyles = makeStyles(theme => ({\n    box: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n    },\n    progress: {\n        margin: \"5%\"\n    }\n}));\n\nconst TopComments = observer((props) => {\n    const classes = useStyles();\n\n    const commentStore = useContext(CommentStoreContext);\n\n    useEffect(() => {\n        fetch(`${ipAddress}/api/comments?count=5`)\n            .then(res => {\n                if (res.ok)\n                    return res.json();\n            })\n            .then(res => {\n                commentStore.comments = res.comments;\n            })\n    }, []);\n\n    function showComments() {\n        if (Array.isArray(commentStore.comments) && commentStore.comments.length) {\n            return commentStore.comments.map(item => {\n                return <Comment date={item.date} content={item.content} title={item.headline} url={item.url} author={item.author} votes={item.likes} key={uuid.v4()} />\n            });\n        } else {\n            return (\n                <Box className={classes.box}>\n                    <CircularProgress size={100} className={classes.progress} />\n                    <CircularProgress size={100} className={classes.progress} />\n                    <CircularProgress size={100} className={classes.progress} />\n                    <CircularProgress size={100} className={classes.progress} />\n                    <CircularProgress size={100} className={classes.progress} />\n                </Box>\n            );\n        }\n\n    };\n\n    return (\n        <List>\n            {showComments()}\n        </List>\n    );\n});\n\nexport { TopComments };","import React from \"react\";\nimport { TopComments } from \"./TopComments\";\n\nfunction index(props) {\n    return (\n        <TopComments {...props} />\n    );\n};\n\nexport { index as TopComments };","import React from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport { TopWebsites } from \"../components/TopWebsites/index\";\nimport { TopComments } from \"../components/TopComments/index\";\n\nfunction Home() {\n    return (\n        <Grid container>\n            <Grid item xs={12} sm={6}>\n                <TopWebsites />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n                <TopComments />\n            </Grid>\n        </Grid>\n    );\n};\n\nexport { Home };","import React, { useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport {observer} from \"mobx-react-lite\";\nimport { TextField, makeStyles, Box, Paper, Button } from \"@material-ui/core\";\nimport { langDe } from \"../constants\";\nimport {UserStoreContext} from \"../stores/UserStore\";\n\nconst useStyles = makeStyles(theme => ({\n    paper: {\n        width: \"100%\",\n        padding: theme.spacing(2)\n    },\n    textField: {\n        width: \"90%\",\n        margin: theme.spacing(1)\n    },\n    div: {\n        display: \"flex\",\n        justifyContent: \"center\"\n    },\n    box: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        flexDirection: \"column\",\n        alignItems: \"center\"\n    },\n    buttonBox: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        justifyContent: \"center\",\n        width: \"100%\",\n        [theme.breakpoints.down(\"sm\")]: {\n            flexDirection: \"column\"\n        }\n    },\n    button: {\n        margin: theme.spacing(2)\n    }\n}));\n\nconst Account = observer((props) =>{\n    const userStore = useContext(UserStoreContext);\n\n    const classes = useStyles();\n    let history = useHistory();\n\n    const sendData = () => {\n\n    };\n\n    const home = () => {\n        history.push(\"/\");\n    };\n\n    return (\n        <div className={classes.div} >\n            <Paper className={classes.paper}>\n                <Box className={classes.box}>\n                    <TextField label={langDe.username} className={classes.textField} value={userStore.username} onChange={evt => userStore.username = evt.target.value} />\n                    <TextField label={langDe.password} className={classes.textField} value={userStore.password} onChange={evt => userStore.password = evt.target.value} type=\"password\" />\n                    <TextField label={langDe.email} className={classes.textField} value={userStore.email} onChange={evt => userStore.email = evt.target.value} />\n                    <Box className={classes.buttonBox}>\n                        <Button variant=\"contained\" color=\"primary\" onClick={sendData} className={classes.button}>{langDe.saveChanges}</Button>\n                        <Button variant=\"contained\" color=\"secondary\" onClick={home} className={classes.button}>{langDe.cancel}</Button>\n                    </Box>\n                </Box>\n            </Paper>\n        </div>\n    );\n});\n\nexport { Account };","import React from \"react\";\nimport { Typography } from \"@material-ui/core\";\nimport { langDe } from \"../constants\";\n\nfunction NotFound(props) {\n    return (\n        <>\n            <Typography variant=\"h3\">{langDe.notFoundTitle}</Typography>\n            <Typography variant=\"p\">{langDe.notFoundText}</Typography>\n        </>\n    );\n};\n\nexport { NotFound };","import React from \"react\";\nimport { Route, Redirect, Switch } from \"react-router-dom\";\nimport { Home } from \"./Home\";\nimport { Account } from \"./Account\";\nimport { NotFound } from \"./NotFound\";\nimport { Container, makeStyles } from \"@material-ui/core\";\n\n\nconst useStyles = makeStyles(theme => ({\n    mt: {\n        marginTop: theme.spacing(2)\n    }\n}));\n\nfunction Routes(props) {\n    const classes = useStyles();\n\n    return (\n        <Container fixed className={classes.mt}>\n            <Switch>\n                <Route exact path=\"/\" render={(para) => <Home {...para} />} />\n                <Route exact path=\"/account\" render={(para) => <Account {...para} />} />\n                <Route exact path=\"/404\" render={(para) => <NotFound {...para} />} />\n                <Redirect to=\"/404\" />\n            </Switch>\n        </Container>\n    );\n};\n\nexport { Routes as Pages };","import React, { useContext } from 'react';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport theme from \"../src/ui/theme/\";\n\nimport { Header } from \"./components/Header\";\nimport { Pages } from \"./pages/Routes\";\nimport { CssBaseline } from '@material-ui/core';\nimport { useSessionId, useLoggedIn, getUsername } from './helpers';\nimport { observer } from 'mobx-react-lite';\nimport { UserStoreContext } from './stores/UserStore';\n\n\nconst App = observer((props) => {\n  const userStore = useContext(UserStoreContext);\n  const sessionId = useSessionId();\n\n  useLoggedIn(sessionId).then(res => {\n    if (res) {\n      userStore.loggedIn = true;\n      userStore.username = getUsername();\n    }\n  });\n\n  return (\n    <div>\n      <ThemeProvider theme={theme}>\n        <Router>\n          <CssBaseline />\n          <Header />\n          <Pages />\n        </Router>\n      </ThemeProvider>\n    </div>\n  );\n});\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport \"./style/style.css\";\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}