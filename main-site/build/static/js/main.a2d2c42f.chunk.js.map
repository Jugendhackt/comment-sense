{"version":3,"sources":["theme/index.js","util/lang/langDe.js","components/Alert/Alert.js","util/constants.js","util/routes/signUpRoute.js","util/routes/signInRoute.js","util/routes/voteCommentRoute.js","util/routes/changeUserRoute.js","stores/CommentStore.js","stores/UserStore.js","stores/DialogStore.js","util/contexts/storesContext.js","util/hooks/use-stores.js","util/hooks/use-loggedIn.js","util/hooks/use-removeSessionId.js","components/SignUp/SignUp.js","util/helpers.js","components/SignIn/SignIn.js","components/SideList/LoggedIn.js","components/SideList/CreateAccount.js","components/SideList/SideList.js","components/Header/AccountDropDown.js","components/Header/LoggedIn.js","components/Header/Navbar.js","components/Website/Website.js","stores/WebsiteStore.js","components/TopWebsites/TopWebsites.js","components/TopWebsites/index.js","components/Comment/Comment.js","components/TopComments/TopComments.js","components/TopComments/index.js","pages/Home.js","pages/Account.js","pages/NotFound.js","pages/Routes.js","App.js","index.js"],"names":["createMuiTheme","palette","type","primary","light","main","dark","contrastText","secondary","themeName","langDe","brandName","home","signIn","signInText","signInSuccessTitle","signInSuccessText","signInErrTitle","signInErrText","signUp","signUpText","signUpSuccessTitle","signUpSuccessText","signUpErrTitle","signUpErrText","toWebsite","username","password","email","cancel","ok","saveChanges","account","github","notFoundTitle","notFoundText","loggedInAs","logout","addComment","addCommentText","commentSend","commentTitle","commentText","commentSuccessTitle","commentSuccessText","commentFailTitle","commentFailText","Transition","React","forwardRef","props","ref","Slide","direction","Alert","observer","theme","useTheme","fullScreen","useMediaQuery","breakpoints","down","Dialog","open","onClose","TransitionComponent","DialogTitle","title","DialogContent","DialogContentText","text","DialogActions","Button","variant","color","onClick","ipAddress","signUpRoute","signInRoute","data","voteCommentRoute","changeUserRoute","CommentStore","comments","this","observable","action","UserStore","sid","loggedIn","DialogStore","openSignIn","openSignUp","signInSuccess","openSignInSuccess","signInFail","openSignInFail","signUpSuccess","openSignUpSuccess","signUpFail","openSignUpFail","openAccount","anchorEl","anchorElAccount","drawer","openDrawer","storesContext","createContext","commentStore","userStore","dialogStore","useStores","useContext","useLoggedIn","sessionId","Promise","resolve","console","log","undefined","fetch","then","res","status","removeSessionId","document","cookie","useStyles","makeStyles","box","display","flexDirection","justifyContent","alignItems","alignContent","width","mb","marginBottom","spacing","center","SignUp","classes","Fragment","handleSignUp","dividers","TextField","label","value","fullWidth","required","className","onChange","evt","handleUsername","target","handlePassword","method","header","body","JSON","stringify","handleSignUpSuccess","handleSignUpFail","catch","e","setStorage","id","Array","isArray","i","length","localStorage","setItem","getStorage","arr","push","getItem","SignIn","handleSignIn","handleSignInSuccess","json","handleSignInFail","handleSid","LoggedIn","Link","href","ListItem","button","ListItemIcon","SettingsApplications","ListItemText","Person","useRemoveSessionId","window","location","reload","ExitToApp","CreateAccount","PersonAdd","list","height","SideList","Drawer","handleDrawer","List","Typography","Divider","Home","Code","AccountDropDown","keepMounted","handleAnchorElAccount","handleAccount","MenuItem","restoreUserStore","removeItem","Box","IconButton","currentTarget","menuButton","marginRight","Navbar","AppBar","position","Toolbar","edge","key","Menu","website","margin","paper","padding","minWidth","marginLeft","Website","Paper","url","substring","ThumbUp","WebsiteStore","WebsiteStoreContext","progress","TopWebsites","websiteStore","useEffect","websites","sites","from","map","item","uuid","v4","CircularProgress","size","index","comment","Comment","date","content","author","headers","vote","voted","votes","TopComments","headline","likes","Grid","container","xs","sm","textField","div","buttonBox","Account","history","useHistory","NotFound","mt","marginTop","Routes","Container","fixed","exact","path","render","para","to","App","ThemeProvider","CssBaseline","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.a2d2c42f.chunk.js","sourcesContent":["import { createMuiTheme } from '@material-ui/core/styles';\r\n\r\nconst palette = {\r\n    type: \"dark\",\r\n    primary: {\r\n        light: '#ff9800',\r\n        main: '#f57c00',\r\n        dark: '#e65100',\r\n        contrastText: '#fffff'\r\n    },\r\n    secondary: {\r\n        light: '#42a5f5',\r\n        main: '#1e88e5',\r\n        dark: '#0d47a1',\r\n        contrastText: '#fffff'\r\n    }\r\n};\r\nconst themeName = 'CommentSense';\r\n\r\nexport default createMuiTheme({ palette, themeName });\r\n","export const langDe = {\r\n    brandName: \"CommentSense\",\r\n    home: \"Home\",\r\n    signIn: \"Anmelden\",\r\n    signInText: \"Hier kommt noch ein Text hin\",\r\n    signInSuccessTitle: \"Erfolgreich angemeldet\",\r\n    signInSuccessText: \"Du hast dich erfolgreich angemeldet\",\r\n    signInErrTitle: \"Fehler!\",\r\n    signInErrText: \"Fehler beim anmelden\",\r\n    signUp: \"Registieren\",\r\n    signUpText: \"Hier kommt noch ein Text hin\",\r\n    signUpSuccessTitle: \"Nutzer erstellt\",\r\n    signUpSuccessText: \"Der Nutzer wurde erfolgreich erstellt\",\r\n    signUpErrTitle: \"Fehler!\",\r\n    signUpErrText: \"Der Nutzer konnte nicht erstellt werden\",\r\n    toWebsite: \"zur Website wechseln\",\r\n    username: \"Nickname\",\r\n    password: \"Passwort\",\r\n    email: \"E-mail\",\r\n    cancel: \"Abbrechen\",\r\n    ok: \"OK\",\r\n    saveChanges: \"Änderungen speichern\",\r\n    account: \"Account bearbeiten\",\r\n    github: \"CommentSense auf Github\",\r\n    notFoundTitle: \"Seite nicht gefunden!\",\r\n    notFoundText: \"Die angefragte Seite konnte nicht gefunden werden.\",\r\n    loggedInAs: \"Angemeldet als: \",\r\n    logout: \"Abmelden\",\r\n    addComment: \"Kommentar schreiben\",\r\n    addCommentText: \"Bitte fülle alle Felder aus\",\r\n    commentSend: \"Kommentar senden\",\r\n    commentTitle: \"Titel\",\r\n    commentText: \"Kommentar\",\r\n    commentSuccessTitle: \"Kommentar erfolgreich erstellt\",\r\n    commentSuccessText: \"Hier kommt noch Text hin\",\r\n    commentFailTitle: \"Fehler beim Kommentar erstellen\",\r\n    commentFailText: \"Hier kommt noch Text hin\"\r\n};\r\n\r\nexport default langDe;","import React from \"react\";\r\nimport {observer} from \"mobx-react-lite\";\r\nimport {\r\n    Dialog,\r\n    DialogTitle,\r\n    DialogContent,\r\n    DialogContentText,\r\n    DialogActions,\r\n    useTheme,\r\n    useMediaQuery,\r\n    Slide,\r\n    Button\r\n} from \"@material-ui/core\";\r\nimport {langDe} from \"../../util/lang\";\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />\r\n});\r\n\r\nconst Alert = observer((props) => {\r\n    const theme = useTheme();\r\n    const fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\r\n\r\n    return (\r\n        <Dialog open={props.open} onClose={props.onClose} fullScreen={fullScreen}\r\n                TransitionComponent={Transition}>\r\n            <DialogTitle>{props.title}</DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText>{props.text}</DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button variant=\"contained\" color=\"secondary\" onClick={props.onClose}>{langDe.cancel}</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n});\r\n\r\nexport default Alert;","const ipAddress = \"http://commentsense.de\";\r\n\r\nconst standardComment = {\r\n    date: \"1.1.1970\",\r\n    content: \"Keine Kommentare vorhanden\",\r\n    title: \"Kein Kommentar\",\r\n    author: \"CommentSense\",\r\n    votes: \"1\"\r\n};\r\n\r\n\r\nexport {ipAddress, standardComment};","import {ipAddress} from \"../constants\";\r\n\r\nexport const signUpRoute = () => {\r\n    return `${ipAddress}/api/signup/`;\r\n};\r\n\r\nexport default signUpRoute;","import {ipAddress} from \"../constants\";\r\n\r\nexport const signInRoute = (data) => {\r\n    if (data.username && data.password) {\r\n        return `${ipAddress}/api/signin?username=${data.username}&password=${data.password}`;\r\n    } else {\r\n        return null;\r\n    }\r\n};\r\n\r\nexport default signInRoute;","import {ipAddress} from \"../constants\";\r\nexport const voteCommentRoute = () => {\r\n    return `${ipAddress}/api/comments/`;\r\n};\r\n\r\nexport default voteCommentRoute;","import {ipAddress} from \"../constants\";\r\n\r\nexport const changeUserRoute = () => {\r\n    return `${ipAddress}/api/user`;\r\n};\r\n\r\nexport default changeUserRoute;","import { observable, action } from \"mobx\";\r\nimport { createContext } from \"react\";\r\n\r\nexport class CommentStore {\r\n    @observable comments = [];\r\n\r\n    @action handleComments(comments) {\r\n        this.comments = comments;\r\n    }\r\n}","import { observable, action} from \"mobx\"\r\nimport {createContext} from \"react\";\r\n\r\nexport class UserStore {\r\n    @observable username = \"\";\r\n    @observable password = \"\";\r\n    @observable email = \"\";\r\n    @observable sid = \"\";\r\n    @observable loggedIn = false;\r\n\r\n    @action handleUsername(username) {\r\n        this.username = username;\r\n    }\r\n\r\n    @action handlePassword(password) {\r\n        this.password = password;\r\n    }\r\n\r\n    @action handleSid(sid) {\r\n        this.sid = sid;\r\n    }\r\n\r\n    @action handleLoggedIn(loggedIn) {\r\n        this.loggedIn = loggedIn;\r\n    }\r\n}","import {observable, action} from \"mobx\";\r\n\r\nexport class DialogStore {\r\n    @observable openSignIn = false;\r\n    @observable openSignUp = false;\r\n    @observable openSignInSuccess = false;\r\n    @observable openSignInFail = false;\r\n    @observable openSignUpSuccess = false;\r\n    @observable openSignUpFail = false;\r\n    @observable openAccount = false;\r\n    @observable anchorElAccount = null;\r\n    @observable openDrawer = false;\r\n\r\n    @action handleSignIn(signIn) {\r\n        this.openSignIn = signIn;\r\n    }\r\n\r\n    @action handleSignUp(signUp) {\r\n        this.openSignUp = signUp;\r\n    }\r\n\r\n    @action handleSignInSuccess(signInSuccess) {\r\n        this.openSignInSuccess = signInSuccess;\r\n    }\r\n\r\n    @action handleSignInFail(signInFail) {\r\n        this.openSignInFail = signInFail;\r\n    }\r\n\r\n    @action handleSignUpSuccess(signUpSuccess) {\r\n        this.openSignUpSuccess = signUpSuccess;\r\n    }\r\n\r\n    @action handleSignUpFail(signUpFail) {\r\n        this.openSignUpFail = signUpFail;\r\n    }\r\n\r\n    @action handleAccount(account) {\r\n        this.openAccount = account;\r\n    }\r\n\r\n    @action handleAnchorElAccount(anchorEl){\r\n        this.anchorElAccount = anchorEl;\r\n    }\r\n\r\n    @action handleDrawer(drawer) {\r\n        this.openDrawer = drawer;\r\n    }\r\n}","import {createContext} from \"react\";\r\nimport {CommentStore} from \"../../stores/CommentStore\";\r\nimport {UserStore} from \"../../stores/UserStore\";\r\nimport {DialogStore} from \"../../stores/DialogStore\";\r\n\r\nexport const storesContext = createContext({\r\n    commentStore: new CommentStore(),\r\n    userStore: new UserStore(),\r\n    dialogStore: new DialogStore()\r\n});\r\n\r\nexport default storesContext;","import {useContext} from \"react\";\r\nimport {storesContext} from \"../contexts\";\r\n\r\nexport const useStores = () => useContext(storesContext);\r\nexport default useStores;","import {ipAddress} from \"../constants\";\r\n\r\nexport const useLoggedIn = (sessionId) => {\r\n    return new Promise(resolve => {\r\n        console.log(sessionId);\r\n        if (sessionId !== undefined && sessionId !== null) {\r\n            fetch(`${ipAddress}/api/checksid?sid='${sessionId}'`)\r\n                .then(res => {\r\n                    if (res.status === 401) {\r\n                        resolve(false);\r\n                    } else if (res.status === 200) {\r\n                        resolve(true);\r\n                    }\r\n                })\r\n        } else {\r\n            resolve(false);\r\n        }\r\n    });\r\n};\r\n\r\nexport default useLoggedIn;","const removeSessionId = () => {\r\n    document.cookie = \"sid=; expires Thu, 01 Jan 1970 00:00:01 GMT;\";\r\n};\r\nexport default removeSessionId;","import React from \"react\";\r\nimport {\r\n    Button,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogContentText,\r\n    DialogTitle,\r\n    makeStyles,\r\n    TextField\r\n} from \"@material-ui/core\";\r\nimport {observer} from \"mobx-react-lite\";\r\nimport {langDe} from \"../../util/lang\";\r\nimport {Alert} from \"../Alert\";\r\nimport {signUpRoute} from \"../../util/routes\";\r\nimport {useStores} from \"../../util/hooks\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    box: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        alignContent: \"center\",\r\n        width: \"100%\"\r\n    },\r\n    mb: {\r\n        marginBottom: theme.spacing(2)\r\n    },\r\n    center: {\r\n        display: \"flex\",\r\n        justifyContent: \"center\"\r\n    }\r\n}));\r\n\r\nconst SignUp = observer((props) => {\r\n    const {userStore, dialogStore} = useStores();\r\n    const classes = useStyles();\r\n\r\n    const sendData = () => {\r\n        if (userStore.username && userStore.password) {\r\n            fetch(signUpRoute(), {\r\n                method: \"POST\",\r\n                header: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify({\r\n                    username: userStore.username,\r\n                    password: userStore.password\r\n                })\r\n            })\r\n                .then(res => {\r\n                    if (res.status === 200) {\r\n                        dialogStore.handleSignUpSuccess(true);\r\n                        dialogStore.handleSignUp(false);\r\n                    } else {\r\n                        dialogStore.handleSignUpFail(true);\r\n                        dialogStore.handleSignUp(false);\r\n                    }\r\n                })\r\n                .catch(e => {\r\n                    dialogStore.handleSignUpFail(true);\r\n                });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Dialog open={dialogStore.openSignUp} onClose={() => dialogStore.handleSignUp(false)} fullScreen={true}>\r\n                <DialogTitle>{langDe.signUp}</DialogTitle>\r\n                <DialogContent dividers>\r\n                    <DialogContentText>{langDe.signUpText}</DialogContentText>\r\n                    <TextField label={langDe.username} value={userStore.username} fullWidth required\r\n                               className={classes.mb} onChange={evt => userStore.handleUsername(evt.target.value)}/>\r\n                    <TextField label={langDe.password} value={userStore.password} fullWidth required\r\n                               className={classes.mb} onChange={evt => userStore.handlePassword(evt.target.value)}\r\n                               type=\"password\"/>\r\n                </DialogContent>\r\n                <DialogActions className={classes.center}>\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={sendData}>{langDe.signUp}</Button>\r\n                    <Button variant=\"contained\" color=\"secondary\"\r\n                            onClick={() => dialogStore.handleSignUp(false)}>{langDe.cancel}</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n            <Alert open={dialogStore.openSignUpSuccess} onClose={() => dialogStore.handleSignUpSuccess(false)}\r\n                   title={langDe.signUpSuccessTitle} text={langDe.signUpSuccessText}/>\r\n            <Alert open={dialogStore.openSignUpFail} onClose={() => dialogStore.handleSignUpFail(false)}\r\n                   title={langDe.signUpErrTitle} text={langDe.signUpErrText}/>\r\n        </React.Fragment>\r\n    );\r\n});\r\n\r\nexport default SignUp;","export const setStorage = (id, value) => {\r\n    if (Array.isArray(id) && Array.isArray(value)) {\r\n        for (let i = 0; i < id.length; i++) {\r\n            localStorage.setItem(id[i], value[i]);\r\n        }\r\n    } else {\r\n        localStorage.setItem(id, value);\r\n    }\r\n};\r\n\r\nexport const getStorage = (id) => {\r\n    if (Array.isArray(id)) {\r\n        let arr = [];\r\n        const length = id.length;\r\n        for (let i = 0; i < length; i++) {\r\n            arr.push(localStorage.getItem(id[i]));\r\n        }\r\n        return arr;\r\n    } else {\r\n        return localStorage.getItem(id);\r\n    }\r\n};\r\n\r\nexport const removeStorage = (id) => {\r\n    localStorage.removeItem(id);\r\n};\r\n\r\nexport const restoreUserStore = (userStore) => {\r\n    userStore.username = \"\";\r\n    userStore.password = \"\";\r\n    userStore.email = \"\";\r\n    userStore.sid = \"\";\r\n    userStore.loggedIn = false;\r\n};","import React from \"react\";\r\nimport {observer} from \"mobx-react-lite\";\r\nimport {\r\n    Button,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogContentText,\r\n    DialogTitle,\r\n    makeStyles,\r\n    TextField\r\n} from \"@material-ui/core\";\r\nimport {langDe} from \"../../util/lang\";\r\nimport {setStorage} from \"../../util/helpers\";\r\nimport {Alert} from \"../Alert\";\r\nimport {useStores} from \"../../util/hooks\";\r\nimport {signInRoute} from \"../../util/routes\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    box: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        alignContent: \"center\",\r\n        width: \"100%\"\r\n    },\r\n    center: {\r\n        display: \"flex\",\r\n        justifyContent: \"center\"\r\n    },\r\n    mb: {\r\n        marginBottom: theme.spacing(2)\r\n    }\r\n}));\r\n\r\n\r\nconst SignIn = observer((props) => {\r\n    const {userStore, dialogStore} = useStores();\r\n    const classes = useStyles();\r\n\r\n    const sendData = () => {\r\n        fetch(signInRoute({username: userStore.username, password: userStore.password}))\r\n            .then(res => {\r\n                if (res.status === 200) {\r\n                    setStorage(\"username\", userStore.username);\r\n                    dialogStore.handleSignInSuccess(true);\r\n                    dialogStore.handleSignIn(false);\r\n                    return res.json();\r\n                } else {\r\n                    dialogStore.handleSignInFail(true);\r\n                    dialogStore.handleSignIn(false);\r\n                }\r\n            })\r\n            .then(res => {\r\n                if (res.sid) {\r\n                    userStore.handleSid(res.sid);\r\n                    setStorage(\"sid\", res.sid);\r\n                }\r\n            })\r\n            .catch(e => {\r\n                dialogStore.handleSignInFail(true);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Dialog open={dialogStore.openSignIn} onClose={() => dialogStore.handleSignIn(false)} fullScreen={true}>\r\n                <DialogTitle>{langDe.signIn}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>{langDe.signInText}</DialogContentText>\r\n                    <TextField label={langDe.username} value={userStore.username} fullWidth required\r\n                               className={classes.mb} onChange={evt => userStore.handleUsername(evt.target.value)}/>\r\n                    <TextField label={langDe.password} value={userStore.password} fullWidth required\r\n                               className={classes.mb} onChange={evt => userStore.handlePassword(evt.target.value)}\r\n                               type=\"password\"/>\r\n                </DialogContent>\r\n                <DialogActions className={classes.center}>\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={sendData}>{langDe.signIn}</Button>\r\n                    <Button variant=\"contained\" color=\"secondary\"\r\n                            onClick={() => dialogStore.handleSignIn(false)}>{langDe.cancel}</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n            <Alert open={dialogStore.openSignInSuccess} onClose={() => dialogStore.handleSignInSuccess(false)}\r\n                   title={langDe.signInSuccessTitle} text={langDe.signInSuccessText}/>\r\n            <Alert open={dialogStore.openSignInFail} onClose={() => dialogStore.handleSignInFail(false)}\r\n                   title={langDe.signUpErrTitle} text={langDe.signUpErrText}/>\r\n        </>\r\n    );\r\n});\r\n\r\nexport default SignIn;","import {observer} from \"mobx-react-lite\";\r\nimport {useStores} from \"../../util/hooks\";\r\nimport {useRemoveSessionId} from \"../../util/hooks\";\r\nimport {Link, ListItem, ListItemIcon, ListItemText} from \"@material-ui/core\";\r\nimport {ExitToApp, Person, SettingsApplications} from \"@material-ui/icons\";\r\nimport {langDe} from \"../../util/lang\";\r\nimport React from \"react\";\r\n\r\nexport const LoggedIn = observer((props) => {\r\n    const {userStore} = useStores();\r\n\r\n    const logout = () => {\r\n        userStore.loggedIn = false;\r\n        userStore.password = \"\";\r\n        userStore.username = \"\";\r\n        userStore.email = \"\";\r\n        userStore.sid = \"\";\r\n        useRemoveSessionId();\r\n        window.location.reload();\r\n    };\r\n\r\n    if (userStore.loggedIn) {\r\n        return (\r\n            <>\r\n                <Link color=\"inherit\" href=\"/account/\">\r\n                    <ListItem button>\r\n                        <ListItemIcon><SettingsApplications color=\"secondary\"/></ListItemIcon>\r\n                        <ListItemText primary={langDe.account}/>\r\n                    </ListItem>\r\n                </Link>\r\n                <ListItem button>\r\n                    <ListItemIcon><Person color=\"secondary\"/></ListItemIcon>\r\n                    <ListItemText primary={`${langDe.loggedInAs} ${userStore.username}`}/>\r\n                </ListItem>\r\n                <ListItem button onClick={logout}>\r\n                    <ListItemIcon><ExitToApp color=\"secondary\"/></ListItemIcon>\r\n                    <ListItemText primary={langDe.logout}/>\r\n                </ListItem>\r\n            </>\r\n        );\r\n    } else {\r\n        return null;\r\n    }\r\n});\r\nexport default LoggedIn;","import {observer} from \"mobx-react-lite\";\r\nimport {useStores} from \"../../util/hooks\";\r\nimport {ListItem, ListItemIcon, ListItemText} from \"@material-ui/core\";\r\nimport {Person, PersonAdd} from \"@material-ui/icons\";\r\nimport {langDe} from \"../../util/lang\";\r\nimport React from \"react\";\r\n\r\nexport const CreateAccount = observer((props) => {\r\n    const {dialogStore, userStore} = useStores();\r\n\r\n    if (!userStore.loggedIn) {\r\n        return (\r\n            <>\r\n                <ListItem button onClick={() => dialogStore.openSignIn = true}>\r\n                    <ListItemIcon><Person color=\"secondary\"/></ListItemIcon>\r\n                    <ListItemText primary={langDe.signIn}/>\r\n                </ListItem>\r\n                <ListItem button onClick={() => dialogStore.openSignUp = true}>\r\n                    <ListItemIcon><PersonAdd color=\"secondary\"/></ListItemIcon>\r\n                    <ListItemText primary={langDe.signUp}/>\r\n                </ListItem>\r\n            </>\r\n        );\r\n    } else {\r\n        return null;\r\n    }\r\n});","import React from \"react\";\r\nimport {\r\n    Drawer,\r\n    makeStyles,\r\n    ListItem,\r\n    Typography,\r\n    List,\r\n    Divider,\r\n    Link,\r\n    ListItemText,\r\n    ListItemIcon\r\n} from \"@material-ui/core\";\r\nimport {langDe} from \"../../util/lang\";\r\nimport {Home, Code} from \"@material-ui/icons\";\r\nimport {SignUp} from \"../SignUp\";\r\nimport {SignIn} from \"../SignIn\";\r\nimport {observer} from \"mobx-react-lite\";\r\nimport {useStores} from \"../../util/hooks\";\r\nimport {LoggedIn} from \"./LoggedIn\";\r\nimport {CreateAccount} from \"./CreateAccount\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    list: {\r\n        width: 250,\r\n        height: \"100%\"\r\n    }\r\n}));\r\n\r\nconst SideList = observer((props) => {\r\n    const {dialogStore} = useStores();\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Drawer open={dialogStore.openDrawer} onClose={() => dialogStore.handleDrawer(false)}>\r\n            <div className={classes.list}>\r\n                <List>\r\n                    <ListItem>\r\n                        <Typography variant=\"h6\">{langDe.brandName}</Typography>\r\n                    </ListItem>\r\n                    <Divider/>\r\n                    <Link color=\"inherit\" href=\"/\">\r\n                        <ListItem button>\r\n                            <ListItemIcon><Home color=\"secondary\"/></ListItemIcon>\r\n                            <ListItemText primary={langDe.home}/>\r\n                        </ListItem>\r\n                    </Link>\r\n                    <CreateAccount/>\r\n                    <LoggedIn/>\r\n                    <Link color=\"inherit\" href=\"https://github.com/Jugendhackt/comment-sense/\">\r\n                        <ListItem button>\r\n                            <ListItemIcon><Code color=\"secondary\"/></ListItemIcon>\r\n                            <ListItemText primary={langDe.github}/>\r\n                        </ListItem>\r\n                    </Link>\r\n                </List>\r\n            </div>\r\n            <SignUp/>\r\n            <SignIn/>\r\n        </Drawer>\r\n    );\r\n});\r\n\r\nexport default SideList;","import {ListItemIcon, ListItemText, Menu, MenuItem} from \"@material-ui/core\";\r\nimport {Person} from \"@material-ui/icons\";\r\nimport {observer} from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport {langDe} from \"../../util/lang\";\r\nimport {removeStorage, restoreUserStore} from \"../../util/helpers\";\r\nimport {useStores} from \"../../util/hooks\";\r\n\r\nconst AccountDropDown = observer((props) => {\r\n    const {userStore, dialogStore} = useStores();\r\n\r\n    const handleOnClose = () => {\r\n        dialogStore.handleAnchorElAccount(null);\r\n        dialogStore.handleAccount(false);\r\n    };\r\n\r\n    const logout = () => {\r\n        restoreUserStore(userStore);\r\n        removeStorage(\"sid\");\r\n        window.location.reload();\r\n    };\r\n\r\n    if (userStore.loggedIn) {\r\n        return (\r\n            <Menu keepMounted={true} anchorEl={dialogStore.anchorElAccount} open={dialogStore.openAccount}\r\n                  onClose={handleOnClose}>\r\n                <MenuItem>\r\n                    <ListItemIcon><Person color=\"secondary\"/></ListItemIcon>\r\n                    <ListItemText primary={`${langDe.loggedInAs} ${userStore.username}`}/>\r\n                </MenuItem>\r\n                <MenuItem onClick={logout}>\r\n                    <ListItemIcon><Person color=\"secondary\"/></ListItemIcon>\r\n                    <ListItemText primary={langDe.logout}/>\r\n                </MenuItem>\r\n            </Menu>\r\n        );\r\n    } else {\r\n        return null;\r\n    }\r\n});\r\n\r\nexport default AccountDropDown;\r\n","import {observer} from \"mobx-react-lite\";\r\nimport {useStores} from \"../../util/hooks\";\r\nimport {Box, IconButton, makeStyles} from \"@material-ui/core\";\r\nimport {Person} from \"@material-ui/icons\";\r\nimport React from \"react\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    account: {\r\n        display: \"flex\",\r\n        justifyContent: \"flex-end\",\r\n        width: \"100%\"\r\n    }\r\n}));\r\n\r\nexport const LoggedIn = observer((props) => {\r\n    const {dialogStore, userStore} = useStores();\r\n\r\n    const classes = useStyles();\r\n\r\n    const handleOnClick = (evt) => {\r\n        dialogStore.handleAccount(true);\r\n        dialogStore.handleAnchorElAccount(evt.currentTarget);\r\n    };\r\n\r\n    if (userStore.loggedIn) {\r\n        return (\r\n            <Box className={classes.account}>\r\n                <IconButton color=\"inherit\" onClick={handleOnClick}>\r\n                    <Person/>\r\n                </IconButton>\r\n            </Box>\r\n        );\r\n    } else {\r\n        return null;\r\n    }\r\n});\r\n\r\nexport default LoggedIn;","import React from \"react\";\r\nimport {AppBar, IconButton, makeStyles, Toolbar, Typography} from \"@material-ui/core\";\r\nimport {Menu} from \"@material-ui/icons\";\r\nimport {langDe} from \"../../util/lang\";\r\nimport {SideList} from \"../SideList\";\r\nimport {observer} from \"mobx-react-lite\";\r\nimport AccountDropDown from \"./AccountDropDown\";\r\nimport {LoggedIn} from \"./LoggedIn\";\r\nimport {useStores} from \"../../util/hooks\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    menuButton: {\r\n        marginRight: theme.spacing(2)\r\n    }\r\n}));\r\n\r\n\r\nconst Navbar = observer((props) => {\r\n    const {dialogStore} = useStores();\r\n\r\n    const classes = useStyles();\r\n\r\n    const handleOnClick = evt => {\r\n        if (evt && evt.target.type === \"keydown\" && (evt.key === \"Tab\" || evt.key === \"Shift\"))\r\n            return;\r\n        dialogStore.handleDrawer(!dialogStore.openDrawer);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <AppBar position=\"sticky\">\r\n                <Toolbar>\r\n                    <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" onClick={handleOnClick}>\r\n                        <Menu/>\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\">{langDe.brandName}</Typography>\r\n                    <LoggedIn/>\r\n                    <AccountDropDown/>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <SideList/>\r\n        </>\r\n    );\r\n});\r\n\r\nexport default Navbar;","import React from \"react\";\r\nimport {ListItem, ListItemText, Typography, Link, Button, makeStyles, Paper, Box} from \"@material-ui/core\";\r\nimport {langDe} from \"../../util/lang\";\r\nimport {ThumbUp} from \"@material-ui/icons\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    website: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        margin: theme.spacing(1)\r\n    },\r\n    title: {\r\n        margin: theme.spacing(2)\r\n    },\r\n    paper: {\r\n        margin: theme.spacing(1),\r\n        padding: \"5%\",\r\n        minWidth: \"40%\"\r\n    },\r\n    text: {\r\n        marginLeft: theme.spacing(1)\r\n    }\r\n}));\r\n\r\n\r\nconst Website = (props) => {\r\n    const classes = useStyles();\r\n\r\n    const showTitle = () => {\r\n        if (props.url.length > 40) {\r\n            return props.url.substring(0, 40) + \"...\";\r\n        }\r\n        return props.url;\r\n    };\r\n\r\n    return (\r\n        <ListItem button className={classes.website}>\r\n            <Paper className={classes.paper}>\r\n                <Typography variant=\"h5\">{showTitle()}</Typography>\r\n                <br/>\r\n                <Box display=\"flex\">\r\n                    <ThumbUp color=\"secondary\"/>\r\n                    <ListItemText primary={props.comments} className={classes.text}/>\r\n                </Box>\r\n                <Link color=\"inherit\" href={props.url}>\r\n                    <Button color=\"primary\" variant=\"contained\">{langDe.toWebsite}</Button>\r\n                </Link>\r\n            </Paper>\r\n        </ListItem>\r\n    );\r\n};\r\n\r\nexport {Website}","import { createContext } from \"react\";\r\nimport { observable } from \"mobx\";\r\n\r\nclass WebsiteStore {\r\n    @observable websites = [];\r\n};\r\n\r\nexport const WebsiteStoreContext = createContext(new WebsiteStore());","import React, {useEffect, useContext} from \"react\";\r\nimport {List, makeStyles, CircularProgress, Box} from \"@material-ui/core\";\r\nimport uuid from \"uuid\";\r\nimport {ipAddress} from \"../../util/constants\";\r\nimport {Website} from \"../Website/Website\";\r\nimport {WebsiteStoreContext} from \"../../stores/WebsiteStore\";\r\nimport {observer} from \"mobx-react-lite\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    progress: {\r\n        margin: \"5%\"\r\n    },\r\n    box: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\"\r\n    }\r\n}));\r\n\r\nconst TopWebsites = observer((props) => {\r\n    const websiteStore = useContext(WebsiteStoreContext);\r\n\r\n    const classes = useStyles();\r\n\r\n    useEffect(() => {\r\n        fetch(`${ipAddress}/api/sites/`)\r\n            .then(res => {\r\n                if (res.ok)\r\n                    return res.json();\r\n            })\r\n            .then(res => {\r\n                websiteStore.websites = res.sites;\r\n            })\r\n\r\n    }, []);\r\n\r\n    const showWebsites = () => {\r\n        if (Array.isArray(websiteStore.websites) && websiteStore.websites.length) {\r\n            return Array.from(websiteStore.websites).map(item => {\r\n                return <Website url={item.url} comments={item.comments} key={uuid.v4()}/>\r\n            });\r\n        } else {\r\n            return (\r\n                <Box className={classes.box}>\r\n                    <CircularProgress size={100} className={classes.progress}/>\r\n                    <CircularProgress size={100} className={classes.progress}/>\r\n                    <CircularProgress size={100} className={classes.progress}/>\r\n                    <CircularProgress size={100} className={classes.progress}/>\r\n                    <CircularProgress size={100} className={classes.progress}/>\r\n                </Box>\r\n            );\r\n        }\r\n    };\r\n\r\n    return (\r\n        <List>\r\n            {showWebsites()}\r\n        </List>\r\n    );\r\n});\r\n\r\nexport {TopWebsites};","import React from \"react\";\r\nimport {TopWebsites} from \"./TopWebsites\";\r\n\r\nconst index = (props) => {\r\n    return (\r\n        <TopWebsites {...props} />\r\n    );\r\n};\r\n\r\nexport {index as TopWebsites};","import React, {useState} from \"react\";\r\nimport {Box, ListItem, ListItemText, makeStyles, Paper, Typography} from \"@material-ui/core\";\r\nimport {ThumbUp} from \"@material-ui/icons\";\r\nimport {useStores} from \"../../util/hooks\";\r\nimport {voteCommentRoute} from \"../../util/routes\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    comment: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\"\r\n    },\r\n    paper: {\r\n        margin: theme.spacing(2),\r\n        padding: \"5%\",\r\n        minWidth: \"70%\"\r\n    },\r\n    box: {\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        justifyContent: \"space-between\"\r\n    },\r\n    mb: {\r\n        marginBottom: theme.spacing(2)\r\n    },\r\n    text: {\r\n        marginLeft: theme.spacing(1)\r\n    }\r\n}));\r\n\r\n\r\nconst Comment = (props) => {\r\n    const {userStore} = useStores();\r\n\r\n    const classes = useStyles();\r\n\r\n\r\n    const sendVote = () => {\r\n        console.log(userStore.sid);\r\n        fetch(voteCommentRoute(), {\r\n            method: \"PATCH\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n                sid: userStore.sid,\r\n                username: userStore.username,\r\n                id: props.id,\r\n                vote: !props.voted,\r\n                password: \"q\"\r\n            })\r\n        }).then(res => {\r\n            if (res.status === 200) {\r\n\r\n            } else if (res.status === 400) {\r\n\r\n            }\r\n        })\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <ListItem button className={classes.comment}>\r\n            <Paper className={classes.paper}>\r\n                <Box className={`${classes.box} ${classes.mb}`}>\r\n                    <Typography variant=\"h5\">{props.title}</Typography>\r\n                    <Typography variant=\"caption\">{props.date}</Typography>\r\n                </Box>\r\n                <ListItemText primary={props.content} className={classes.mb}/>\r\n                <Box className={classes.box}>\r\n                    <Typography variant=\"caption\">{props.author}</Typography>\r\n                    <Box display=\"flex\" onClick={sendVote}>\r\n                        <ThumbUp color={(props.voted) ? \"primary\" : \"inherit\"}/>\r\n                        <ListItemText primary={props.votes} className={classes.text}/>\r\n                    </Box>\r\n                </Box>\r\n            </Paper>\r\n        </ListItem>\r\n    );\r\n};\r\n\r\nexport default Comment;","import React, {useEffect} from \"react\";\r\nimport uuid from \"uuid\";\r\nimport {observer} from \"mobx-react-lite\";\r\nimport {List, makeStyles, CircularProgress, Box} from \"@material-ui/core\";\r\nimport {Comment} from \"../Comment\";\r\nimport {ipAddress} from \"../../util/constants\";\r\nimport {useStores} from \"../../util/hooks\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    box: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\"\r\n    },\r\n    progress: {\r\n        margin: \"5%\"\r\n    }\r\n}));\r\n\r\nconst TopComments = observer((props) => {\r\n    const classes = useStyles();\r\n\r\n    const {commentStore} = useStores();\r\n\r\n    useEffect(() => {\r\n        fetch(`${ipAddress}/api/comments?count=5`)\r\n            .then(res => {\r\n                if (res.ok)\r\n                    return res.json();\r\n            })\r\n            .then(res => {\r\n                commentStore.comments = res.comments;\r\n            })\r\n    }, []);\r\n\r\n    function showComments() {\r\n        if (Array.isArray(commentStore.comments) && commentStore.comments.length) {\r\n            return commentStore.comments.map(item => {\r\n                return <Comment date={item.date} content={item.content} title={item.headline} url={item.url}\r\n                                author={item.author} votes={item.likes} key={uuid.v4()}/>\r\n            });\r\n        } else {\r\n            return (\r\n                <Box className={classes.box}>\r\n                    <CircularProgress size={100} className={classes.progress}/>\r\n                    <CircularProgress size={100} className={classes.progress}/>\r\n                    <CircularProgress size={100} className={classes.progress}/>\r\n                    <CircularProgress size={100} className={classes.progress}/>\r\n                    <CircularProgress size={100} className={classes.progress}/>\r\n                </Box>\r\n            );\r\n        }\r\n\r\n    };\r\n\r\n    return (\r\n        <List>\r\n            {showComments()}\r\n        </List>\r\n    );\r\n});\r\n\r\nexport {TopComments};","import React from \"react\";\r\nimport { TopComments } from \"./TopComments\";\r\n\r\nfunction index(props) {\r\n    return (\r\n        <TopComments {...props} />\r\n    );\r\n};\r\n\r\nexport { index as TopComments };","import React from \"react\";\r\nimport {Grid} from \"@material-ui/core\";\r\nimport {TopWebsites} from \"../components/TopWebsites\";\r\nimport {TopComments} from \"../components/TopComments\";\r\n\r\nfunction Home() {\r\n    return (\r\n        <Grid container>\r\n            <Grid item xs={12} sm={6}>\r\n                <TopWebsites/>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n                <TopComments/>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport {Home};","import React, {useContext} from \"react\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {observer} from \"mobx-react-lite\";\r\nimport {TextField, makeStyles, Box, Paper, Button} from \"@material-ui/core\";\r\nimport {langDe} from \"../util/lang\";\r\nimport {useStores} from \"../util/hooks\";\r\nimport {changeUserRoute} from \"../util/routes\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    paper: {\r\n        width: \"100%\",\r\n        padding: theme.spacing(2)\r\n    },\r\n    textField: {\r\n        width: \"90%\",\r\n        margin: theme.spacing(1)\r\n    },\r\n    div: {\r\n        display: \"flex\",\r\n        justifyContent: \"center\"\r\n    },\r\n    box: {\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    buttonBox: {\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        justifyContent: \"center\",\r\n        width: \"100%\",\r\n        [theme.breakpoints.down(\"sm\")]: {\r\n            flexDirection: \"column\"\r\n        }\r\n    },\r\n    button: {\r\n        margin: theme.spacing(2)\r\n    }\r\n}));\r\n\r\nconst Account = observer((props) => {\r\n    const {userStore} = useStores();\r\n\r\n    const classes = useStyles();\r\n    let history = useHistory();\r\n\r\n    const sendData = () => {\r\n        fetch(changeUserRoute(), {\r\n            method: \"PATCH\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n                username: userStore.username,\r\n                password: userStore.password,\r\n                email: userStore.email,\r\n                \"new password\": \"\"\r\n            })\r\n        })\r\n    };\r\n\r\n    const home = () => {\r\n        history.push(\"/\");\r\n    };\r\n\r\n    return (\r\n        <div className={classes.div}>\r\n            <Paper className={classes.paper}>\r\n                <Box className={classes.box}>\r\n                    <TextField label={langDe.username} className={classes.textField} value={userStore.username}\r\n                               onChange={evt => userStore.username = evt.target.value}/>\r\n                    <TextField label={langDe.password} className={classes.textField} value={userStore.password}\r\n                               onChange={evt => userStore.password = evt.target.value} type=\"password\"/>\r\n                    <TextField label={langDe.email} className={classes.textField} value={userStore.email}\r\n                               onChange={evt => userStore.email = evt.target.value}/>\r\n                    <Box className={classes.buttonBox}>\r\n                        <Button variant=\"contained\" color=\"primary\" onClick={sendData}\r\n                                className={classes.button}>{langDe.saveChanges}</Button>\r\n                        <Button variant=\"contained\" color=\"secondary\" onClick={home}\r\n                                className={classes.button}>{langDe.cancel}</Button>\r\n                    </Box>\r\n                </Box>\r\n            </Paper>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport {Account};","import React from \"react\";\r\nimport {Typography} from \"@material-ui/core\";\r\nimport {langDe} from \"../util/lang\";\r\n\r\nfunction NotFound(props) {\r\n    return (\r\n        <>\r\n            <Typography variant=\"h3\">{langDe.notFoundTitle}</Typography>\r\n            <Typography variant=\"body1\">{langDe.notFoundText}</Typography>\r\n        </>\r\n    );\r\n};\r\n\r\nexport {NotFound};","import React from \"react\";\r\nimport { Route, Redirect, Switch } from \"react-router-dom\";\r\nimport { Home } from \"./Home\";\r\nimport { Account } from \"./Account\";\r\nimport { NotFound } from \"./NotFound\";\r\nimport { Container, makeStyles } from \"@material-ui/core\";\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    mt: {\r\n        marginTop: theme.spacing(2)\r\n    }\r\n}));\r\n\r\nfunction Routes(props) {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Container fixed className={classes.mt}>\r\n            <Switch>\r\n                <Route exact path=\"/\" render={(para) => <Home {...para} />} />\r\n                <Route exact path=\"/account\" render={(para) => <Account {...para} />} />\r\n                <Route exact path=\"/404\" render={(para) => <NotFound {...para} />} />\r\n                <Redirect to=\"/404\" />\r\n            </Switch>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport { Routes as Pages };","import React, {useContext} from 'react';\r\nimport {BrowserRouter as Router} from \"react-router-dom\";\r\nimport {ThemeProvider} from '@material-ui/core/styles';\r\nimport theme from \"./theme/\";\r\nimport Navbar from \"./components/Header/Navbar\";\r\nimport {Pages} from \"./pages/Routes\";\r\nimport {CssBaseline} from '@material-ui/core';\r\nimport {getStorage} from './util/helpers';\r\nimport {observer} from 'mobx-react-lite';\r\nimport {useLoggedIn, useSessionId} from \"./util/hooks\";\r\nimport {useStores} from \"./util/hooks\";\r\n\r\n\r\nconst App = observer((props) => {\r\n    const {userStore} = useStores();\r\n    const sessionId = getStorage(\"sid\");\r\n\r\n    useLoggedIn(sessionId).then(res => {\r\n        if (res) {\r\n            userStore.loggedIn = true;\r\n            userStore.username = getStorage(\"username\");\r\n        }\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <ThemeProvider theme={theme}>\r\n                <Router>\r\n                    <CssBaseline/>\r\n                    <Navbar/>\r\n                    <Pages/>\r\n                </Router>\r\n            </ThemeProvider>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport \"./theme/style.css\";\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}