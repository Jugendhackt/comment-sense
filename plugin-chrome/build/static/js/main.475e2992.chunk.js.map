{"version":3,"sources":["constants.js","stores/UserStore.js","components/Header/Navbar.js","components/Header/index.js","components/CommentList/Comment.js","stores/CommentStore.js","components/CommentList/CommentList.js","components/CommentList/index.js","pages/Home.js","pages/NotFound.js","pages/Routes.js","ui/theme/index.js","App.js","helpers.js","index.js"],"names":["langDe","brandName","home","signIn","signInText","signInSuccessTitle","signInSuccessText","signInErrTitle","signInErrText","signUp","signUpText","signUpSuccessTitle","signUpSuccessText","signUpErrTitle","signUpErrText","toWebsite","username","password","email","cancel","ok","saveChanges","account","github","notFoundTitle","notFoundText","loggedInAs","UserStore","observable","UserStoreContext","createContext","useStyles","makeStyles","theme","box","display","justifyContent","Navbar","props","classes","userStore","useContext","AppBar","position","Toolbar","className","Typography","variant","loggedIn","LoggedIn","IconButton","Person","color","index","comment","flexDirection","margin","spacing","paper","padding","minWidth","mb","marginBottom","text","marginLeft","Comment","ListItem","button","Paper","Box","title","date","ListItemText","primary","content","author","ThumbUp","votes","CommentStore","CommentStoreContext","alignItems","progress","CommentList","observer","commentStore","useEffect","fetch","then","res","json","comments","List","Array","isArray","length","map","item","headline","url","likes","key","uuid","v4","CircularProgress","size","Home","NotFound","Routes","Container","fixed","exact","path","render","para","to","createMuiTheme","palette","type","light","main","dark","contrastText","secondary","themeName","App","sessionId","Promise","resolve","status","useLoggedIn","document","cookie","match","RegExp","split","useSessionId","ThemeProvider","CssBaseline","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.475e2992.chunk.js","sourcesContent":["const ipAddress = \"http://commentsense.de\";\r\n\r\nconst langDe = {\r\n    brandName: \"CommentSense\",\r\n    home: \"Home\",\r\n    signIn: \"Anmelden\",\r\n    signInText: \"Hier kommt noch ein Text hin\",\r\n    signInSuccessTitle: \"Erfolgreich angemeldet\",\r\n    signInSuccessText: \"Du hast dich erfolgreich angemeldet\",\r\n    signInErrTitle: \"Fehler!\",\r\n    signInErrText: \"Fehler beim anmelden\",\r\n    signUp: \"Registieren\",\r\n    signUpText: \"Hier kommt noch ein Text hin\",\r\n    signUpSuccessTitle: \"Nutzer erstellt\",\r\n    signUpSuccessText: \"Der Nutzer wurde erfolgreich erstellt\",\r\n    signUpErrTitle: \"Fehler!\",\r\n    signUpErrText: \"Der Nutzer konnte nicht erstellt werden\",\r\n    toWebsite: \"zur Website wechseln\",\r\n    username: \"Nickname\",\r\n    password: \"Passwort\",\r\n    email: \"E-mail\",\r\n    cancel: \"Abbrechen\",\r\n    ok: \"OK\",\r\n    saveChanges: \"Ã„nderungen speichern\",\r\n    account: \"Account bearbeiten\",\r\n    github: \"CommentSense auf Github\",\r\n    notFoundTitle: \"Seite nicht gefunden!\",\r\n    notFoundText: \"Die angefragte Seite konnte nicht gefunden werden.\",\r\n    loggedInAs: \"Angemeldet als: \"\r\n};\r\n\r\n\r\nexport { ipAddress, langDe };","import { observable } from \"mobx\";\r\nimport { createContext } from \"react\";\r\n\r\nclass UserStore {\r\n    @observable username = \"\";\r\n    @observable password = \"\";\r\n    @observable sid = \"\";\r\n    @observable loggedIn = false;\r\n};\r\n\r\nexport const UserStoreContext = createContext(new UserStore);\r\n\r\n","import React, { useContext } from \"react\";\r\nimport { AppBar, Typography, Toolbar, IconButton, makeStyles } from \"@material-ui/core\";\r\nimport { Person } from \"@material-ui/icons\";\r\nimport { langDe } from \"../../constants\";\r\nimport { UserStoreContext } from \"../../stores/UserStore\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    box: {\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\"\r\n    }\r\n}));\r\n\r\n\r\nconst Navbar = (props) => {\r\n    const classes = useStyles();\r\n    const userStore = useContext(UserStoreContext);\r\n    return (\r\n        <AppBar position=\"static\">\r\n            <Toolbar className={classes.box}>\r\n                <Typography variant=\"h6\">{langDe.brandName}</Typography>\r\n                <LoggedIn loggedIn={userStore.loggedIn}/>\r\n            </Toolbar>\r\n        </AppBar>\r\n    );    \r\n};\r\n\r\nconst LoggedIn = (props) => {\r\n    if (props.loggedIn) {\r\n        return (\r\n            <IconButton>\r\n                <Person color=\"secondary\" />\r\n            </IconButton>\r\n        );\r\n    } else {\r\n        return null;\r\n    }\r\n};\r\n\r\nexport { Navbar };","import React from \"react\";\r\nimport {Navbar} from \"./Navbar\";\r\n\r\nconst index = (props) => {\r\n    return (\r\n        <Navbar {...props} />\r\n    );\r\n};\r\n\r\nexport {index as Header};","import React from \"react\";\r\nimport { ListItem, Paper, makeStyles, Typography, ListItemText, Box } from \"@material-ui/core\";\r\nimport { ThumbUp } from \"@material-ui/icons\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    comment: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        margin: theme.spacing(1)\r\n    },\r\n    paper: {\r\n        margin: theme.spacing(2),\r\n        padding: \"5%\",\r\n        minWidth: \"40%\"\r\n    },\r\n    box: {\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        justifyContent: \"space-between\"\r\n    },\r\n    mb: {\r\n        marginBottom: theme.spacing(2)\r\n    },\r\n    text: {\r\n        marginLeft: theme.spacing(1)\r\n    }\r\n}));\r\n\r\n\r\nconst Comment = (props) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <ListItem button className={classes.comment}>\r\n            <Paper className={classes.paper}>\r\n                <Box className={`${classes.box} ${classes.mb}`}>\r\n                    <Typography variant=\"h5\">{props.title}</Typography>\r\n                    <Typography variant=\"caption\">{props.date}</Typography>\r\n                </Box>\r\n                <ListItemText primary={props.content} className={classes.mb} />\r\n                <Box className={classes.box}>\r\n                    <Typography variant=\"caption\">{props.author}</Typography>\r\n                    <Box display=\"flex\">\r\n                        <ThumbUp color=\"secondary\" />\r\n                        <ListItemText primary={props.votes} className={classes.text} />\r\n                    </Box>\r\n                </Box>\r\n            </Paper>\r\n        </ListItem>\r\n    );\r\n};\r\n\r\nexport { Comment };","import { observable } from \"mobx\";\r\nimport { createContext } from \"react\";\r\n\r\nclass CommentStore {\r\n    @observable comments = [];\r\n};\r\n\r\nexport const CommentStoreContext = createContext(new CommentStore());\r\n","import React, { useEffect, useContext } from \"react\";\r\nimport uuid from \"uuid\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { List, makeStyles, CircularProgress, Box } from \"@material-ui/core\";\r\nimport { Comment } from \"./Comment\";\r\nimport { ipAddress } from \"../../constants\";\r\nimport { CommentStoreContext } from \"../../stores/CommentStore\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    box: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\"\r\n    },\r\n    progress: {\r\n        margin: \"5%\"\r\n    }\r\n}));\r\n\r\nconst CommentList = observer((props) => {\r\n    const classes = useStyles();\r\n\r\n    const commentStore = useContext(CommentStoreContext);\r\n\r\n    useEffect(() => {\r\n        fetch(`${ipAddress}/api/comments?count=5`)\r\n            .then(res => {\r\n                if (res.ok)\r\n                    return res.json();\r\n            })\r\n            .then(res => {\r\n                commentStore.comments = res.comments;\r\n            })\r\n    }, []);\r\n\r\n    function showComments() {\r\n        if (Array.isArray(commentStore.comments) && commentStore.comments.length) {\r\n            return commentStore.comments.map(item => {\r\n                return <Comment date={item.date} content={item.content} title={item.headline} url={item.url} author={item.author} votes={item.likes} key={uuid.v4()} />\r\n            });\r\n        } else {\r\n            return (\r\n                <Box className={classes.box}>\r\n                    <CircularProgress size={100} className={classes.progress} />\r\n                    <CircularProgress size={100} className={classes.progress} />\r\n                    <CircularProgress size={100} className={classes.progress} />\r\n                    <CircularProgress size={100} className={classes.progress} />\r\n                    <CircularProgress size={100} className={classes.progress} />\r\n                </Box>\r\n            );\r\n        }\r\n\r\n    };\r\n\r\n    return (\r\n        <List>\r\n            {showComments()}\r\n        </List>\r\n    );\r\n});\r\n\r\nexport { CommentList };","import React from \"react\";\r\nimport {CommentList} from \"./CommentList\";\r\n\r\nconst index = (props) => {\r\n    return (\r\n        <CommentList {...props} />\r\n    );\r\n};\r\n\r\nexport { index as CommentList };","import React from \"react\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport {CommentList} from \"../components/CommentList\";\r\n\r\nconst Home = observer((props) => {\r\n    \r\n    return (\r\n        <>\r\n            <CommentList />\r\n        </>\r\n    );\r\n});\r\n\r\nexport { Home };","import React from \"react\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport { langDe } from \"../constants\";\r\n\r\nfunction NotFound(props) {\r\n    return (\r\n        <>\r\n            <Typography variant=\"h3\">{langDe.notFoundTitle}</Typography>\r\n            <Typography variant=\"body1\">{langDe.notFoundText}</Typography>\r\n        </>\r\n    );\r\n};\r\n\r\nexport { NotFound };","import React from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport { Container } from \"@material-ui/core\";\r\nimport { Home } from \"./Home\";\r\nimport { NotFound } from \"./NotFound\";\r\n\r\nconst Routes = (props) => {\r\n    return (\r\n        <Container fixed>\r\n            <Switch>\r\n                <Route exact path=\"/index.html\" render={(para) => <Home {...para} />} />\r\n                <Route exact path=\"/404/\" render={(para) => <NotFound {...para} />} />\r\n                <Redirect to=\"/404/\" />\r\n            </Switch>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport { Routes };","import { createMuiTheme } from '@material-ui/core/styles';\r\n\r\nconst palette = {\r\n    type: \"dark\",\r\n    primary: {\r\n        light: '#ff9800',\r\n        main: '#f57c00',\r\n        dark: '#e65100',\r\n        contrastText: '#fffff'\r\n    },\r\n    secondary: {\r\n        light: '#42a5f5',\r\n        main: '#1e88e5',\r\n        dark: '#0d47a1',\r\n        contrastText: '#fffff'\r\n    }\r\n};\r\nconst themeName = 'CommentSense';\r\n\r\nexport default createMuiTheme({ palette, themeName });\r\n","import React, { useContext } from 'react';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { Header } from \"./components/Header\";\nimport { Routes } from \"./pages/Routes\";\nimport { ThemeProvider } from '@material-ui/styles';\nimport theme from \"./ui/theme\";\nimport { CssBaseline } from '@material-ui/core';\nimport { observer } from \"mobx-react-lite\";\nimport { UserStoreContext } from './stores/UserStore';\nimport { useSessionId, useLoggedIn, getUsername } from './helpers';\n\nconst App = observer((props) => {\n  const userStore = useContext(UserStoreContext);\n  const sessionId = useSessionId();\n\n  useLoggedIn(sessionId).then(res => {\n    if (res) {\n      userStore.loggedIn = true;\n    }\n  });\n\n  return (\n    <div>\n      <ThemeProvider theme={theme}>\n        <CssBaseline />\n        <Router>\n          <Header />\n          <Routes />\n        </Router>\n      </ThemeProvider>\n    </div>\n  );\n});\n\nexport default App;\n","import { ipAddress } from \"./constants\";\r\n\r\nconst useSessionId = () => {\r\n    const sessionId = document.cookie.match(new RegExp('(^| )sid=([^;]+)'));\r\n    if (sessionId)\r\n        return (sessionId.length) ? sessionId[0].split(\"=\")[1] : null;\r\n};\r\n\r\nconst useLoggedIn = (sessionId) => {\r\n    return new Promise(resolve => {\r\n        fetch(`${ipAddress}/api/checksid?sid='${sessionId}'`)\r\n            .then(res => {\r\n                if (res.status === 410) {\r\n                    resolve(false);\r\n                } else if (res.status === 200) {\r\n                    resolve(true);\r\n                }\r\n            })\r\n    });\r\n};\r\n\r\nconst removeSessionId = () => {\r\n    document.cookie = \"sid=; expires Thu, 01 Jan 1970 00:00:01 GMT;\";\r\n};\r\n\r\nconst saveUsername = (username) => {\r\n    const storage = localStorage;\r\n    storage.setItem(\"username\", username);\r\n};\r\n\r\nconst getUsername = () => {\r\n    const storage = localStorage;\r\n    return storage.getItem(\"username\");\r\n};\r\n\r\nexport {\r\n    useSessionId,\r\n    useLoggedIn,\r\n    saveUsername,\r\n    getUsername,\r\n    removeSessionId\r\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport \"./styles/style.css\";\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}