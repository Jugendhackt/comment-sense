{"version":3,"sources":["util/lang/langDe.js","components/Alert/Alert.js","util/constants.js","util/routes/commentRoute.js","util/routes/signUpRoute.js","util/routes/signInRoute.js","util/routes/createCommentRoute.js","util/routes/voteCommentRoute.js","stores/UserStore.js","stores/DialogStore.js","stores/CommentStore.js","util/contexts/storesContext.js","util/hooks/use-stores.js","util/hooks/use-loggedIn.js","components/SignUp/SignUp.js","util/helpers.js","components/SignIn/SignIn.js","components/SideList/CreateAccount.js","components/SideList/LoggedIn.js","components/SideList/SideList.js","components/Header/AccountDropDown.js","components/Header/LoggedIn.js","components/Header/Navbar.js","components/CreateComment/CreateComment.js","components/Footer/Footer.js","components/Comment/Comment.js","components/Commentlist/CommentList.js","pages/Home.js","pages/NotFound.js","pages/Routes.js","theme/index.js","App.js","index.js"],"names":["langDe","brandName","home","signIn","signInText","signInSuccessTitle","signInSuccessText","signInErrTitle","signInErrText","signUp","signUpText","signUpSuccessTitle","signUpSuccessText","signUpErrTitle","signUpErrText","toWebsite","username","password","email","cancel","ok","saveChanges","account","github","notFoundTitle","notFoundText","loggedInAs","logout","addComment","addCommentText","commentSend","commentTitle","commentText","commentSuccessTitle","commentSuccessText","commentFailTitle","commentFailText","Transition","React","forwardRef","props","ref","Slide","direction","Alert","observer","theme","useTheme","fullScreen","useMediaQuery","breakpoints","down","Dialog","open","onClose","TransitionComponent","DialogTitle","title","DialogContent","DialogContentText","text","DialogActions","Button","variant","color","onClick","ipAddress","standardComment","commentRoute","url","console","log","signUpRoute","signInRoute","data","createCommentRoute","voteCommentRoute","UserStore","this","sid","loggedIn","comment","observable","action","DialogStore","openSignIn","openSignUp","signInSuccess","openSignInSuccess","signInFail","openSignInFail","signUpSuccess","openSignUpSuccess","signUpFail","openSignUpFail","openAccount","anchorEl","anchorElAccount","drawer","openDrawer","openComment","commentSuccess","openCommentSuccess","commentFail","openCommentFail","CommentStore","comments","storesContext","createContext","userStore","dialogStore","commentStore","useStores","useContext","useLoggedIn","sessionId","Promise","resolve","fetch","then","res","status","useStyles","makeStyles","box","display","flexDirection","justifyContent","alignItems","alignContent","width","mb","marginBottom","spacing","center","SignUp","classes","Fragment","handleSignUp","dividers","TextField","label","value","fullWidth","required","className","onChange","evt","handleUsername","target","handlePassword","type","method","header","body","JSON","stringify","handleSignUpSuccess","handleSignUpFail","catch","e","setStorage","id","Array","isArray","i","length","localStorage","setItem","getStorage","arr","push","getItem","removeStorage","removeItem","restoreUserStore","getCurrentTab","chrome","tabs","query","active","currentWindow","SignIn","handleSignIn","handleSignInSuccess","json","handleSignInFail","handleSid","CreateAccount","ListItem","button","ListItemIcon","Person","ListItemText","primary","PersonAdd","LoggedIn","window","location","reload","ExitToApp","list","height","SideList","Drawer","handleDrawer","List","Typography","Divider","AccountDropDown","keepMounted","handleAnchorElAccount","handleAccount","MenuItem","Box","IconButton","currentTarget","menuButton","marginRight","Navbar","AppBar","position","Toolbar","edge","key","Menu","textField","padding","CreateComment","handleComment","autoFocus","placeholder","size","handleTitle","multiline","rows","headers","headline","content","handleCommentSuccess","handleCommentFail","footer","bottom","backgroundColor","palette","main","Footer","paper","margin","minWidth","marginLeft","Comment","Paper","date","author","vote","voted","ThumbUp","votes","progress","CommentList","useEffect","getData","handleComments","interval","setInterval","clearInterval","map","item","likes","uuid","v4","CircularProgress","Home","NotFound","Routes","Container","fixed","exact","path","render","para","to","createMuiTheme","light","dark","contrastText","secondary","themeName","App","useState","loading","setLoading","ThemeProvider","CssBaseline","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.d56e4f35.chunk.js","sourcesContent":["export const langDe = {\r\n    brandName: \"CommentSense\",\r\n    home: \"Home\",\r\n    signIn: \"Anmelden\",\r\n    signInText: \"Hier kommt noch ein Text hin\",\r\n    signInSuccessTitle: \"Erfolgreich angemeldet\",\r\n    signInSuccessText: \"Du hast dich erfolgreich angemeldet\",\r\n    signInErrTitle: \"Fehler!\",\r\n    signInErrText: \"Fehler beim anmelden\",\r\n    signUp: \"Registieren\",\r\n    signUpText: \"Hier kommt noch ein Text hin\",\r\n    signUpSuccessTitle: \"Nutzer erstellt\",\r\n    signUpSuccessText: \"Der Nutzer wurde erfolgreich erstellt\",\r\n    signUpErrTitle: \"Fehler!\",\r\n    signUpErrText: \"Der Nutzer konnte nicht erstellt werden\",\r\n    toWebsite: \"zur Website wechseln\",\r\n    username: \"Nickname\",\r\n    password: \"Passwort\",\r\n    email: \"E-mail\",\r\n    cancel: \"Abbrechen\",\r\n    ok: \"OK\",\r\n    saveChanges: \"Änderungen speichern\",\r\n    account: \"Account bearbeiten\",\r\n    github: \"CommentSense auf Github\",\r\n    notFoundTitle: \"Seite nicht gefunden!\",\r\n    notFoundText: \"Die angefragte Seite konnte nicht gefunden werden.\",\r\n    loggedInAs: \"Angemeldet als: \",\r\n    logout: \"Abmelden\",\r\n    addComment: \"Kommentar schreiben\",\r\n    addCommentText: \"Bitte fülle alle Felder aus\",\r\n    commentSend: \"Kommentar senden\",\r\n    commentTitle: \"Titel\",\r\n    commentText: \"Kommentar\",\r\n    commentSuccessTitle: \"Kommentar erfolgreich erstellt\",\r\n    commentSuccessText: \"Hier kommt noch Text hin\",\r\n    commentFailTitle: \"Fehler beim Kommentar erstellen\",\r\n    commentFailText: \"Hier kommt noch Text hin\"\r\n};\r\n\r\nexport default langDe;","import React from \"react\";\r\nimport {observer} from \"mobx-react-lite\";\r\nimport {\r\n    Dialog,\r\n    DialogTitle,\r\n    DialogContent,\r\n    DialogContentText,\r\n    DialogActions,\r\n    useTheme,\r\n    useMediaQuery,\r\n    Slide,\r\n    Button\r\n} from \"@material-ui/core\";\r\nimport {langDe} from \"../../util/lang\";\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />\r\n});\r\n\r\nconst Alert = observer((props) => {\r\n    const theme = useTheme();\r\n    const fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\r\n\r\n    return (\r\n        <Dialog open={props.open} onClose={props.onClose} fullScreen={fullScreen}\r\n                TransitionComponent={Transition}>\r\n            <DialogTitle>{props.title}</DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText>{props.text}</DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button variant=\"contained\" color=\"secondary\" onClick={props.onClose}>{langDe.cancel}</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n});\r\n\r\nexport default Alert;","const ipAddress = \"http://192.168.2.113\";\r\n\r\nconst standardComment = {\r\n    date: \"1.1.1970\",\r\n    content: \"Keine Kommentare vorhanden\",\r\n    title: \"Kein Kommentar\",\r\n    author: \"CommentSense\",\r\n    votes: \"1\"\r\n};\r\n\r\n\r\nexport {ipAddress, standardComment};","import {ipAddress} from \"../constants\";\r\n\r\nexport const commentRoute = (url, username) => {\r\n    console.log(username, \"commentRoute\");\r\n    console.log(url, \"commentRoute\");\r\n    if (url && username) {\r\n        return `${ipAddress}/api/comments?site='${url}'&username='${username}'`;\r\n    } else if (url) {\r\n        return `${ipAddress}/api/comments?site='${url}`;\r\n    } else {\r\n        return null;\r\n    }\r\n};\r\n\r\nexport default commentRoute;","import {ipAddress} from \"../constants\";\r\n\r\nexport const signUpRoute = () => {\r\n    return `${ipAddress}/api/signup/`;\r\n};\r\n\r\nexport default signUpRoute;","import {ipAddress} from \"../constants\";\r\n\r\nexport const signInRoute = (data) => {\r\n    if (data.username && data.password) {\r\n        return `${ipAddress}/api/signin?username='${data.username}'&password='${data.password}'`;\r\n    } else {\r\n        return null;\r\n    }\r\n};\r\n\r\nexport default signInRoute;","import {ipAddress} from \"../constants\";\r\n\r\nexport const createCommentRoute = () => {\r\n    return `${ipAddress}/api/comments/`;\r\n};\r\n\r\nexport default createCommentRoute;","import {ipAddress} from \"../constants\";\r\nexport const voteCommentRoute = () => {\r\n    return `${ipAddress}/api/comments/`;\r\n};\r\n\r\nexport default voteCommentRoute;","import {action, observable} from \"mobx\";\r\n\r\nexport class UserStore {\r\n    @observable username = \"\";\r\n    @observable password = \"\";\r\n    @observable sid = \"\";\r\n    @observable loggedIn = false;\r\n    @observable title = \"\";\r\n    @observable comment = \"\";\r\n\r\n    @action handleUsername(username) {\r\n        this.username = username;\r\n    }\r\n\r\n    @action handlePassword(password) {\r\n        this.password = password;\r\n    }\r\n\r\n    @action handleSid(sid) {\r\n        this.sid = sid;\r\n    }\r\n\r\n    @action handleLoggedIn(loggedIn) {\r\n        this.loggedIn = loggedIn;\r\n    }\r\n\r\n    @action handleTitle(title) {\r\n        this.title = title;\r\n    }\r\n\r\n    @action handleComment(comment) {\r\n        this.comment = comment;\r\n    }\r\n}\r\n\r\n","import {action, observable} from \"mobx\";\r\n\r\nexport class DialogStore {\r\n    @observable openSignIn = false;\r\n    @observable openSignUp = false;\r\n    @observable openSignInSuccess = false;\r\n    @observable openSignInFail = false;\r\n    @observable openSignUpSuccess = false;\r\n    @observable openSignUpFail = false;\r\n    @observable openAccount = false;\r\n    @observable anchorElAccount = null;\r\n    @observable openDrawer = false;\r\n    @observable openComment = false;\r\n    @observable openCommentSuccess = false;\r\n    @observable openCommentFail = false;\r\n\r\n    @action handleSignIn(signIn) {\r\n        this.openSignIn = signIn;\r\n    }\r\n\r\n    @action handleSignUp(signUp) {\r\n        this.openSignUp = signUp;\r\n    }\r\n\r\n    @action handleSignInSuccess(signInSuccess) {\r\n        this.openSignInSuccess = signInSuccess;\r\n    }\r\n\r\n    @action handleSignInFail(signInFail) {\r\n        this.openSignInFail = signInFail;\r\n    }\r\n\r\n    @action handleSignUpSuccess(signUpSuccess) {\r\n        this.openSignUpSuccess = signUpSuccess;\r\n    }\r\n\r\n    @action handleSignUpFail(signUpFail) {\r\n        this.openSignUpFail = signUpFail;\r\n    }\r\n\r\n    @action handleAccount(account) {\r\n        this.openAccount = account;\r\n    }\r\n\r\n    @action handleAnchorElAccount(anchorEl){\r\n        this.anchorElAccount = anchorEl;\r\n    }\r\n\r\n    @action handleDrawer(drawer) {\r\n        this.openDrawer = drawer;\r\n    }\r\n\r\n    @action handleComment(comment) {\r\n        this.openComment = comment;\r\n    }\r\n\r\n    @action handleCommentSuccess(commentSuccess) {\r\n        this.openCommentSuccess = commentSuccess;\r\n    }\r\n\r\n    @action handleCommentFail(commentFail) {\r\n        this.openCommentFail = commentFail;\r\n    }\r\n}","import {observable, action} from \"mobx\";\r\n\r\nexport class CommentStore {\r\n    @observable comments = [];\r\n\r\n    @action handleComments(comments) {\r\n        this.comments = comments;\r\n    }\r\n}\r\n","import {createContext} from \"react\";\r\nimport {UserStore} from \"../../stores/UserStore\";\r\nimport {DialogStore} from \"../../stores/DialogStore\";\r\nimport {CommentStore} from \"../../stores/CommentStore\";\r\n\r\nexport const storesContext = createContext({\r\n    userStore: new UserStore(),\r\n    dialogStore: new DialogStore(),\r\n    commentStore: new CommentStore()\r\n});\r\n\r\nexport default storesContext;","import {useContext} from \"react\";\r\nimport {storesContext} from \"../contexts\";\r\n\r\nexport const useStores = () => useContext(storesContext);\r\nexport default useStores;","import {ipAddress} from \"../constants\";\r\n\r\nexport const useLoggedIn = (sessionId) => {\r\n    return new Promise(resolve => {\r\n        if (sessionId !== null) {\r\n            fetch(`${ipAddress}/api/checksid?sid='${sessionId}'`)\r\n                .then(res => {\r\n                    if (res.status === 401) {\r\n                        resolve(false);\r\n                    } else if (res.status === 200) {\r\n                        resolve(true);\r\n                    }\r\n                })\r\n        } else {\r\n            resolve(false);\r\n        }\r\n    });\r\n};\r\n\r\nexport default useLoggedIn;","import React from \"react\";\r\nimport {\r\n    Button,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogContentText,\r\n    DialogTitle,\r\n    makeStyles,\r\n    TextField\r\n} from \"@material-ui/core\";\r\nimport {observer} from \"mobx-react-lite\";\r\nimport {langDe} from \"../../util/lang\";\r\nimport {Alert} from \"../Alert\";\r\nimport {signUpRoute} from \"../../util/routes\";\r\nimport {useStores} from \"../../util/hooks\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    box: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        alignContent: \"center\",\r\n        width: \"100%\"\r\n    },\r\n    mb: {\r\n        marginBottom: theme.spacing(2)\r\n    },\r\n    center: {\r\n        display: \"flex\",\r\n        justifyContent: \"center\"\r\n    }\r\n}));\r\n\r\nconst SignUp = observer((props) => {\r\n    const {userStore, dialogStore} = useStores();\r\n    const classes = useStyles();\r\n\r\n    const sendData = () => {\r\n        if (userStore.username && userStore.password) {\r\n            fetch(signUpRoute(), {\r\n                method: \"POST\",\r\n                header: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify({\r\n                    username: userStore.username,\r\n                    password: userStore.password\r\n                })\r\n            })\r\n                .then(res => {\r\n                    if (res.status === 200) {\r\n                        dialogStore.handleSignUpSuccess(true);\r\n                        dialogStore.handleSignUp(false);\r\n                    } else {\r\n                        dialogStore.handleSignUpFail(true);\r\n                        dialogStore.handleSignUp(false);\r\n                    }\r\n                })\r\n                .catch(e => {\r\n                    dialogStore.handleSignUpFail(true);\r\n                });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Dialog open={dialogStore.openSignUp} onClose={() => dialogStore.handleSignUp(false)} fullScreen={true}>\r\n                <DialogTitle>{langDe.signUp}</DialogTitle>\r\n                <DialogContent dividers>\r\n                    <DialogContentText>{langDe.signUpText}</DialogContentText>\r\n                    <TextField label={langDe.username} value={userStore.username} fullWidth required\r\n                               className={classes.mb} onChange={evt => userStore.handleUsername(evt.target.value)}/>\r\n                    <TextField label={langDe.password} value={userStore.password} fullWidth required\r\n                               className={classes.mb} onChange={evt => userStore.handlePassword(evt.target.value)}\r\n                               type=\"password\"/>\r\n                </DialogContent>\r\n                <DialogActions className={classes.center}>\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={sendData}>{langDe.signUp}</Button>\r\n                    <Button variant=\"contained\" color=\"secondary\"\r\n                            onClick={() => dialogStore.handleSignUp(false)}>{langDe.cancel}</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n            <Alert open={dialogStore.openSignUpSuccess} onClose={() => dialogStore.handleSignUpSuccess(false)}\r\n                   title={langDe.signUpSuccessTitle} text={langDe.signUpSuccessText}/>\r\n            <Alert open={dialogStore.openSignUpFail} onClose={() => dialogStore.handleSignUpFail(false)}\r\n                   title={langDe.signUpErrTitle} text={langDe.signUpErrText}/>\r\n        </React.Fragment>\r\n    );\r\n});\r\n\r\nexport default SignUp;","/*global chrome*/\r\n\r\nexport const setStorage = (id, value) => {\r\n    if (Array.isArray(id) && Array.isArray(value)) {\r\n        for (let i = 0; i < id.length; i++) {\r\n            localStorage.setItem(id[i], value[i]);\r\n        }\r\n    } else {\r\n        localStorage.setItem(id, value);\r\n    }\r\n};\r\n\r\nexport const getStorage = (id) => {\r\n    if (Array.isArray(id)) {\r\n        let arr = [];\r\n        const length = id.length;\r\n        for (let i = 0; i < length; i++) {\r\n            arr.push(localStorage.getItem(id[i]));\r\n        }\r\n        return arr;\r\n    } else {\r\n        return localStorage.getItem(id);\r\n    }\r\n};\r\n\r\nexport const removeStorage = (id) => {\r\n    localStorage.removeItem(id);\r\n};\r\n\r\nexport const restoreUserStore = (userStore) => {\r\n    userStore.username = \"\";\r\n    userStore.password = \"\";\r\n    userStore.email = \"\";\r\n    userStore.sid = \"\";\r\n    userStore.loggedIn = false;\r\n};\r\n\r\nexport const getCurrentTab = () => {\r\n    return new Promise((resolve) => {\r\n        chrome.tabs.query({active: true, currentWindow: true}, (tabs) => {\r\n            console.log(tabs[0].url, \"getCurrentTab\");\r\n            resolve(tabs[0].url);\r\n        })\r\n    });\r\n};","import React from \"react\";\r\nimport {observer} from \"mobx-react-lite\";\r\nimport {\r\n    Button,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogContentText,\r\n    DialogTitle,\r\n    makeStyles,\r\n    TextField\r\n} from \"@material-ui/core\";\r\nimport {langDe} from \"../../util/lang\";\r\nimport {setStorage} from \"../../util/helpers\";\r\nimport {Alert} from \"../Alert\";\r\nimport {useStores} from \"../../util/hooks\";\r\nimport {signInRoute} from \"../../util/routes\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    box: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        alignContent: \"center\",\r\n        width: \"100%\"\r\n    },\r\n    center: {\r\n        display: \"flex\",\r\n        justifyContent: \"center\"\r\n    },\r\n    mb: {\r\n        marginBottom: theme.spacing(2)\r\n    }\r\n}));\r\n\r\n\r\nconst SignIn = observer((props) => {\r\n    const {userStore, dialogStore} = useStores();\r\n    const classes = useStyles();\r\n\r\n    const sendData = () => {\r\n        fetch(signInRoute({username: userStore.username, password: userStore.password}))\r\n            .then(res => {\r\n                if (res.status === 200) {\r\n                    setStorage(\"username\", userStore.username);\r\n                    dialogStore.handleSignInSuccess(true);\r\n                    dialogStore.handleSignIn(false);\r\n                    return res.json();\r\n                } else {\r\n                    dialogStore.handleSignInFail(true);\r\n                    dialogStore.handleSignIn(false);\r\n                }\r\n            })\r\n            .then(res => {\r\n                if (res.sid) {\r\n                    userStore.handleSid(res.sid);\r\n                    setStorage(\"sid\", res.sid);\r\n                }\r\n            })\r\n            .catch(e => {\r\n                dialogStore.handleSignInFail(true);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Dialog open={dialogStore.openSignIn} onClose={() => dialogStore.handleSignIn(false)} fullScreen={true}>\r\n                <DialogTitle>{langDe.signIn}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>{langDe.signInText}</DialogContentText>\r\n                    <TextField label={langDe.username} value={userStore.username} fullWidth required\r\n                               className={classes.mb} onChange={evt => userStore.handleUsername(evt.target.value)}/>\r\n                    <TextField label={langDe.password} value={userStore.password} fullWidth required\r\n                               className={classes.mb} onChange={evt => userStore.handlePassword(evt.target.value)}\r\n                               type=\"password\"/>\r\n                </DialogContent>\r\n                <DialogActions className={classes.center}>\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={sendData}>{langDe.signIn}</Button>\r\n                    <Button variant=\"contained\" color=\"secondary\"\r\n                            onClick={() => dialogStore.handleSignIn(false)}>{langDe.cancel}</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n            <Alert open={dialogStore.openSignInSuccess} onClose={() => dialogStore.handleSignInSuccess(false)}\r\n                   title={langDe.signInSuccessTitle} text={langDe.signInSuccessText}/>\r\n            <Alert open={dialogStore.openSignInFail} onClose={() => dialogStore.handleSignInFail(false)}\r\n                   title={langDe.signUpErrTitle} text={langDe.signUpErrText}/>\r\n        </>\r\n    );\r\n});\r\n\r\nexport default SignIn;","import {observer} from \"mobx-react-lite\";\r\nimport {useStores} from \"../../util/hooks\";\r\nimport React from \"react\";\r\nimport {ListItem, ListItemIcon, ListItemText} from \"@material-ui/core\";\r\nimport {Person, PersonAdd} from \"@material-ui/icons\";\r\nimport {langDe} from \"../../util/lang\";\r\n\r\nexport const CreateAccount = observer((props) => {\r\n    const {dialogStore} = useStores();\r\n    const {userStore} = useStores();\r\n\r\n    if (!userStore.loggedIn) {\r\n        return (\r\n            <>\r\n                <ListItem button onClick={() => dialogStore.handleSignIn(true)}>\r\n                    <ListItemIcon><Person color=\"secondary\"/></ListItemIcon>\r\n                    <ListItemText primary={langDe.signIn}/>\r\n                </ListItem>\r\n                <ListItem button onClick={() => dialogStore.handleSignUp(true)}>\r\n                    <ListItemIcon><PersonAdd color=\"secondary\"/></ListItemIcon>\r\n                    <ListItemText primary={langDe.signUp}/>\r\n                </ListItem>\r\n            </>\r\n        );\r\n    } else {\r\n        return null;\r\n    }\r\n});","import {observer} from \"mobx-react-lite\";\r\nimport {useStores} from \"../../util/hooks\";\r\nimport {removeStorage, restoreUserStore} from \"../../util/helpers\";\r\nimport React from \"react\";\r\nimport {ListItem, ListItemIcon, ListItemText} from \"@material-ui/core\";\r\nimport {ExitToApp, Person} from \"@material-ui/icons\";\r\nimport {langDe} from \"../../util/lang\";\r\n\r\nexport const LoggedIn = observer((props) => {\r\n    const {userStore} = useStores();\r\n\r\n    const logout = () => {\r\n        restoreUserStore(userStore);\r\n        removeStorage(\"sid\");\r\n        window.location.reload();\r\n    };\r\n\r\n    if (userStore.loggedIn) {\r\n        return (\r\n            <>\r\n                <ListItem button>\r\n                    <ListItemIcon><Person color=\"secondary\"/></ListItemIcon>\r\n                    <ListItemText primary={`${langDe.loggedInAs} ${userStore.username}`}/>\r\n                </ListItem>\r\n                <ListItem button onClick={logout}>\r\n                    <ListItemIcon><ExitToApp color=\"secondary\"/></ListItemIcon>\r\n                    <ListItemText primary={langDe.logout}/>\r\n                </ListItem>\r\n            </>\r\n        );\r\n    } else {\r\n        return null;\r\n    }\r\n});","import React from \"react\";\r\nimport {\r\n    Drawer,\r\n    makeStyles,\r\n    ListItem,\r\n    Typography,\r\n    List,\r\n    Divider\r\n} from \"@material-ui/core\";\r\nimport {langDe} from \"../../util/lang\";\r\nimport {SignUp} from \"../SignUp\";\r\nimport {SignIn} from \"../SignIn\";\r\nimport {CreateAccount} from \"./CreateAccount\";\r\nimport {LoggedIn} from \"./LoggedIn\";\r\nimport {observer} from \"mobx-react-lite\";\r\nimport {useStores} from \"../../util/hooks\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    list: {\r\n        width: 250,\r\n        height: \"100%\"\r\n    }\r\n}));\r\n\r\nconst SideList = observer((props) => {\r\n    const {dialogStore} = useStores();\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Drawer open={dialogStore.openDrawer} onClose={() => dialogStore.handleDrawer(false)}>\r\n            <div className={classes.list}>\r\n                <List>\r\n                    <ListItem>\r\n                        <Typography variant=\"h6\">{langDe.brandName}</Typography>\r\n                    </ListItem>\r\n                    <Divider/>\r\n                    <CreateAccount/>\r\n                    <LoggedIn/>\r\n                </List>\r\n            </div>\r\n            <SignUp/>\r\n            <SignIn/>\r\n        </Drawer>\r\n    );\r\n});\r\n\r\nexport default SideList;","import {ListItemIcon, ListItemText, Menu, MenuItem} from \"@material-ui/core\";\r\nimport {Person} from \"@material-ui/icons\";\r\nimport {observer} from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport {langDe} from \"../../util/lang\";\r\nimport {removeStorage, restoreUserStore} from \"../../util/helpers\";\r\nimport {useStores} from \"../../util/hooks\";\r\n\r\nconst AccountDropDown = observer((props) => {\r\n    const {userStore, dialogStore} = useStores();\r\n\r\n    const handleOnClose = () => {\r\n        dialogStore.handleAnchorElAccount(null);\r\n        dialogStore.handleAccount(false);\r\n    };\r\n\r\n    const logout = () => {\r\n        restoreUserStore(userStore);\r\n        removeStorage(\"sid\");\r\n        window.location.reload();\r\n    };\r\n\r\n    if (userStore.loggedIn) {\r\n        return (\r\n            <Menu keepMounted={true} anchorEl={dialogStore.anchorElAccount} open={dialogStore.openAccount}\r\n                  onClose={handleOnClose}>\r\n                <MenuItem>\r\n                    <ListItemIcon><Person color=\"secondary\"/></ListItemIcon>\r\n                    <ListItemText primary={`${langDe.loggedInAs} ${userStore.username}`}/>\r\n                </MenuItem>\r\n                <MenuItem onClick={logout}>\r\n                    <ListItemIcon><Person color=\"secondary\"/></ListItemIcon>\r\n                    <ListItemText primary={langDe.logout}/>\r\n                </MenuItem>\r\n            </Menu>\r\n        );\r\n    } else {\r\n        return null;\r\n    }\r\n});\r\n\r\nexport default AccountDropDown;\r\n","import {observer} from \"mobx-react-lite\";\r\nimport {useStores} from \"../../util/hooks\";\r\nimport {Box, IconButton, makeStyles} from \"@material-ui/core\";\r\nimport {Person} from \"@material-ui/icons\";\r\nimport React from \"react\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    account: {\r\n        display: \"flex\",\r\n        justifyContent: \"flex-end\",\r\n        width: \"100%\"\r\n    }\r\n}));\r\n\r\nexport const LoggedIn = observer((props) => {\r\n    const {dialogStore, userStore} = useStores();\r\n\r\n    const classes = useStyles();\r\n\r\n    const handleOnClick = (evt) => {\r\n        dialogStore.handleAccount(true);\r\n        dialogStore.handleAnchorElAccount(evt.currentTarget);\r\n    };\r\n\r\n    if (userStore.loggedIn) {\r\n        return (\r\n            <Box className={classes.account}>\r\n                <IconButton color=\"inherit\" onClick={handleOnClick}>\r\n                    <Person/>\r\n                </IconButton>\r\n            </Box>\r\n        );\r\n    } else {\r\n        return null;\r\n    }\r\n});\r\n\r\nexport default LoggedIn;","import React from \"react\";\r\nimport {AppBar, IconButton, makeStyles, Toolbar, Typography} from \"@material-ui/core\";\r\nimport {Menu} from \"@material-ui/icons\";\r\nimport {langDe} from \"../../util/lang\";\r\nimport {SideList} from \"../SideList\";\r\nimport {observer} from \"mobx-react-lite\";\r\nimport AccountDropDown from \"./AccountDropDown\";\r\nimport {LoggedIn} from \"./LoggedIn\";\r\nimport {useStores} from \"../../util/hooks\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    menuButton: {\r\n        marginRight: theme.spacing(2)\r\n    }\r\n}));\r\n\r\n\r\nconst Navbar = observer((props) => {\r\n    const {dialogStore} = useStores();\r\n\r\n    const classes = useStyles();\r\n\r\n    const handleOnClick = evt => {\r\n        if (evt && evt.target.type === \"keydown\" && (evt.key === \"Tab\" || evt.key === \"Shift\"))\r\n            return;\r\n        dialogStore.handleDrawer(!dialogStore.openDrawer);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <AppBar position=\"sticky\">\r\n                <Toolbar>\r\n                    <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" onClick={handleOnClick}>\r\n                        <Menu/>\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\">{langDe.brandName}</Typography>\r\n                    <LoggedIn/>\r\n                    <AccountDropDown/>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <SideList/>\r\n        </>\r\n    );\r\n});\r\n\r\nexport default Navbar;","import {\r\n    Button,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogContentText,\r\n    DialogTitle,\r\n    TextField\r\n} from \"@material-ui/core\";\r\nimport {observer} from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport {langDe} from \"../../util/lang\";\r\nimport {makeStyles} from \"@material-ui/styles\";\r\nimport {getCurrentTab} from \"../../util/helpers\";\r\nimport {Alert} from \"../Alert\";\r\nimport {createCommentRoute} from \"../../util/routes\";\r\nimport {useStores} from \"../../util/hooks\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    textField: {\r\n        marginBottom: theme.spacing(2),\r\n        padding: theme.spacing(1)\r\n    },\r\n    center: {\r\n        display: \"flex\",\r\n        justifyContent: \"center\"\r\n    }\r\n}));\r\n\r\nexport const CreateComment = observer((props) => {\r\n    const classes = useStyles();\r\n    const {userStore, dialogStore} = useStores();\r\n\r\n    const sendComment = () => {\r\n        getCurrentTab().then(url => {\r\n            console.log(url, \"hi\");\r\n            fetch(createCommentRoute(), {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify({\r\n                    sid: userStore.sid,\r\n                    url: url,\r\n                    headline: userStore.title,\r\n                    content: userStore.comment,\r\n                    username: userStore.username\r\n                })\r\n            })\r\n                .then(res => {\r\n                    if (res.status === 200) {\r\n                        dialogStore.handleCommentSuccess(true);\r\n                        dialogStore.handleComment(false);\r\n                    } else {\r\n                        dialogStore.handleCommentFail(true);\r\n                        dialogStore.handleComment(false);\r\n                    }\r\n                })\r\n                .catch(e => {\r\n                    dialogStore.handleCommentFail(true);\r\n                })\r\n        });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Dialog open={dialogStore.openComment} onClose={() => dialogStore.handleComment(false)} fullScreen={true}>\r\n                <DialogTitle>{langDe.addComment}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>{langDe.addCommentText}</DialogContentText>\r\n                    <TextField autoFocus={true} fullWidth placeholder={langDe.commentTitle} size=\"medium\"\r\n                               className={classes.textField} onChange={(evt) => userStore.handleTitle(evt.target.value)}/>\r\n                    <TextField fullWidth multiline={true} placeholder={langDe.commentText} size=\"medium\" rows={6}\r\n                               className={classes.textField} onChange={(evt) => userStore.handleComment(evt.target.value)}/>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={sendComment}>{langDe.commentSend}</Button>\r\n                    <Button variant=\"contained\" color=\"secondary\"\r\n                            onClick={() => dialogStore.handleComment(false)}>{langDe.cancel}</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n            <Alert open={dialogStore.openCommentSuccess} onClose={() => dialogStore.handleCommentSuccess(false)}\r\n                   title={langDe.commentSuccessTitle} text={langDe.commentSuccessText}/>\r\n            <Alert open={dialogStore.openCommentFail} onClose={() => dialogStore.handleCommentFail(false)}\r\n                   title={langDe.commentFailTitle} text={langDe.commentFailText}/>\r\n        </>\r\n    );\r\n});\r\n\r\nexport default CreateComment;\r\n","import React from \"react\";\r\nimport {observer} from \"mobx-react-lite\";\r\nimport {makeStyles} from \"@material-ui/styles\";\r\nimport {Button} from \"@material-ui/core\";\r\nimport {langDe} from \"../../util/lang\";\r\nimport {CreateComment} from \"../CreateComment\";\r\nimport {useStores} from \"../../util/hooks\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    footer: {\r\n        display: \"flex\",\r\n        position: \"fixed\",\r\n        bottom: 0,\r\n        width: \"100%\",\r\n        backgroundColor: theme.palette.primary.main,\r\n        height: 50,\r\n        justifyContent: \"center\"\r\n    }\r\n}));\r\n\r\nconst Footer = observer((props) => {\r\n    const {dialogStore, userStore} = useStores();\r\n\r\n    const classes = useStyles();\r\n\r\n    if (userStore.loggedIn) {\r\n        return (\r\n            <>\r\n                <CreateComment/>\r\n                <footer className={classes.footer}>\r\n                    <Button onClick={() => dialogStore.handleComment(true)}>{langDe.addComment}</Button>\r\n                </footer>\r\n            </>\r\n        );\r\n    } else {\r\n        return null;\r\n    }\r\n});\r\n\r\nexport default Footer;","import React, {useState} from \"react\";\r\nimport {Box, ListItem, ListItemText, makeStyles, Paper, Typography} from \"@material-ui/core\";\r\nimport {ThumbUp} from \"@material-ui/icons\";\r\nimport {useStores} from \"../../util/hooks\";\r\nimport {voteCommentRoute} from \"../../util/routes\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    comment: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\"\r\n    },\r\n    paper: {\r\n        margin: theme.spacing(2),\r\n        padding: \"5%\",\r\n        minWidth: \"70%\"\r\n    },\r\n    box: {\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        justifyContent: \"space-between\"\r\n    },\r\n    mb: {\r\n        marginBottom: theme.spacing(2)\r\n    },\r\n    text: {\r\n        marginLeft: theme.spacing(1)\r\n    }\r\n}));\r\n\r\n\r\nconst Comment = (props) => {\r\n    const {userStore} = useStores();\r\n\r\n    const classes = useStyles();\r\n\r\n\r\n    const sendVote = () => {\r\n        console.log(userStore.sid);\r\n        fetch(voteCommentRoute(), {\r\n            method: \"PATCH\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n                sid: userStore.sid,\r\n                username: userStore.username,\r\n                id: props.id,\r\n                vote: !props.voted,\r\n                password: \"q\"\r\n            })\r\n        }).then(res => {\r\n            if (res.status === 200) {\r\n\r\n            } else if (res.status === 400) {\r\n\r\n            }\r\n        })\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <ListItem button className={classes.comment}>\r\n            <Paper className={classes.paper}>\r\n                <Box className={`${classes.box} ${classes.mb}`}>\r\n                    <Typography variant=\"h5\">{props.title}</Typography>\r\n                    <Typography variant=\"caption\">{props.date}</Typography>\r\n                </Box>\r\n                <ListItemText primary={props.content} className={classes.mb}/>\r\n                <Box className={classes.box}>\r\n                    <Typography variant=\"caption\">{props.author}</Typography>\r\n                    <Box display=\"flex\" onClick={sendVote}>\r\n                        <ThumbUp color={(props.voted) ? \"primary\" : \"inherit\"}/>\r\n                        <ListItemText primary={props.votes} className={classes.text}/>\r\n                    </Box>\r\n                </Box>\r\n            </Paper>\r\n        </ListItem>\r\n    );\r\n};\r\n\r\nexport default Comment;","import React, {useEffect} from \"react\";\r\nimport uuid from \"uuid\";\r\nimport {observer} from \"mobx-react-lite\";\r\nimport {List, makeStyles, CircularProgress, Box} from \"@material-ui/core\";\r\nimport {Comment} from \"../Comment\";\r\nimport {standardComment} from \"../../util/constants\";\r\nimport {getCurrentTab} from \"../../util/helpers\";\r\nimport {commentRoute} from \"../../util/routes\";\r\nimport {useInterval, useStores} from \"../../util/hooks\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    box: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\"\r\n    },\r\n    progress: {\r\n        margin: \"5%\"\r\n    }\r\n}));\r\n\r\nconst CommentList = observer(() => {\r\n    const {commentStore, userStore} = useStores();\r\n    const classes = useStyles();\r\n\r\n    useEffect(() => {\r\n        const getData = () => {\r\n            getCurrentTab().then(url => {\r\n                fetch(commentRoute(url, userStore.username))\r\n                    .then(res => {\r\n                        if (res.ok)\r\n                            return res.json();\r\n                    })\r\n                    .then(res => {\r\n                        commentStore.handleComments(res.comments);\r\n                    })\r\n            })\r\n        };\r\n\r\n        const interval = setInterval(getData, 10000);\r\n        getData();\r\n        return () => clearInterval(interval);\r\n    }, []);\r\n\r\n    const showComments = () => {\r\n        if (Array.isArray(commentStore.comments) && commentStore.comments.length) {\r\n            return commentStore.comments.map(item => {\r\n                return (\r\n                    <Comment date={item.date} content={item.content} title={item.headline} url={item.url}\r\n                             author={item.author} votes={item.likes} key={uuid.v4()} id={item.id} voted={item.voted}/>\r\n                );\r\n            });\r\n        } else if (Array.isArray(commentStore.comments) && !commentStore.comments.length) {\r\n            return (\r\n                <Comment date={standardComment.date} content={standardComment.content} title={standardComment.title}\r\n                         author={standardComment.author} votes={standardComment.votes}/>\r\n            );\r\n        } else {\r\n            return (\r\n                <Box className={classes.box}>\r\n                    <CircularProgress size={100} className={classes.progress}/>\r\n                    <CircularProgress size={100} className={classes.progress}/>\r\n                    <CircularProgress size={100} className={classes.progress}/>\r\n                    <CircularProgress size={100} className={classes.progress}/>\r\n                    <CircularProgress size={100} className={classes.progress}/>\r\n                </Box>\r\n            );\r\n        }\r\n\r\n    };\r\n\r\n    return (\r\n        <List>\r\n            {showComments()}\r\n        </List>\r\n    );\r\n});\r\n\r\nexport default CommentList;","import React from \"react\";\r\nimport {CommentList} from \"../components/Commentlist\";\r\n\r\nconst Home = (props) => {\r\n\r\n    return (\r\n        <>\r\n            <CommentList/>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Home;","import React from \"react\";\r\nimport {Typography} from \"@material-ui/core\";\r\nimport {langDe} from \"../util/lang\";\r\n\r\nconst NotFound = (props) => {\r\n    return (\r\n        <>\r\n            <Typography variant=\"h3\">{langDe.notFoundTitle}</Typography>\r\n            <Typography variant=\"body1\">{langDe.notFoundText}</Typography>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default NotFound;","import React from \"react\";\r\nimport {Switch, Route, Redirect} from \"react-router-dom\";\r\nimport {Container} from \"@material-ui/core\";\r\nimport Home from \"./Home\";\r\nimport NotFound from \"./NotFound\";\r\n\r\nconst Routes = (props) => {\r\n    return (\r\n        <div className=\"scrollbar\">\r\n            <Container fixed>\r\n                <Switch>\r\n                    <Route exact path=\"/index.html\" render={(para) => <Home {...para} />}/>\r\n                    <Route exact path=\"/404/\" render={(para) => <NotFound {...para} />}/>\r\n                    <Redirect to=\"/404/\"/>\r\n                </Switch>\r\n            </Container>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Routes;","import { createMuiTheme } from '@material-ui/core/styles';\r\n\r\nconst palette = {\r\n    type: \"dark\",\r\n    primary: {\r\n        light: '#ff9800',\r\n        main: '#f57c00',\r\n        dark: '#e65100',\r\n        contrastText: '#fffff'\r\n    },\r\n    secondary: {\r\n        light: '#42a5f5',\r\n        main: '#1e88e5',\r\n        dark: '#0d47a1',\r\n        contrastText: '#fffff'\r\n    }\r\n};\r\nconst themeName = 'CommentSense';\r\n\r\nexport default createMuiTheme({ palette, themeName });\r\n","import React, {useState} from 'react';\nimport {BrowserRouter as Router} from \"react-router-dom\";\nimport {Header} from \"./components/Header\";\nimport {getStorage} from \"./util/helpers\";\nimport {Footer} from \"./components/Footer\";\nimport Routes from \"./pages/Routes\";\nimport {ThemeProvider} from '@material-ui/styles';\nimport theme from \"./theme\";\nimport {CircularProgress, CssBaseline, makeStyles} from '@material-ui/core';\nimport {observer} from \"mobx-react-lite\";\nimport {useStores, useLoggedIn} from \"./util/hooks\";\n\nconst App = observer(() => {\n    const [loading, setLoading] = useState(true);\n    const {userStore} = useStores();\n    const sessionId = getStorage(\"sid\");\n\n    useLoggedIn(sessionId).then(res => {\n        if (res) {\n            userStore.loggedIn = true;\n            userStore.handleUsername(getStorage(\"username\"));\n            userStore.handleSid(sessionId);\n            setLoading(false);\n        } else {\n            setLoading(false);\n        }\n    });\n\n    if (!loading) {\n        return (\n            <>\n                <ThemeProvider theme={theme}>\n                    <CssBaseline/>\n                    <Router>\n                        <Header/>\n                        <Routes/>\n                        <Footer/>\n                    </Router>\n                </ThemeProvider>\n            </>\n        );\n    } else {\n        return (\n            <ThemeProvider theme={theme}>\n                <CssBaseline/>\n                <CircularProgress size={100}/>\n            </ThemeProvider>\n        );\n    }\n});\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport \"./theme/style.css\";\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}