{"version":3,"sources":["components/Header/Navbar.js","components/Header/index.js","components/CommentList/Comment.js","constants.js","stores/CommentStore.js","components/CommentList/CommentList.js","components/CommentList/index.js","pages/Home.js","pages/NotFound.js","pages/Routes.js","ui/theme/index.js","App.js","index.js"],"names":["Navbar","props","AppBar","position","index","useStyles","makeStyles","theme","comment","display","flexDirection","margin","spacing","paper","padding","minWidth","box","justifyContent","mb","marginBottom","text","marginLeft","Comment","classes","ListItem","button","className","Paper","Box","Typography","variant","title","date","ListItemText","primary","content","author","ThumbUp","color","votes","langDe","brandName","home","signIn","signInText","signInSuccessTitle","signInSuccessText","signInErrTitle","signInErrText","signUp","signUpText","signUpSuccessTitle","signUpSuccessText","signUpErrTitle","signUpErrText","toWebsite","username","password","email","cancel","ok","saveChanges","account","github","notFoundTitle","notFoundText","loggedInAs","CommentStore","observable","CommentStoreContext","createContext","alignItems","progress","CommentList","observer","commentStore","useContext","useEffect","fetch","then","res","json","comments","List","Array","isArray","length","map","item","headline","url","likes","key","uuid","v4","CircularProgress","size","Home","NotFound","Routes","Container","fixed","exact","path","render","para","to","createMuiTheme","palette","type","light","main","dark","contrastText","secondary","themeName","App","ThemeProvider","CssBaseline","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.91631a10.chunk.js","sourcesContent":["import React from \"react\";\nimport { AppBar } from \"@material-ui/core\";\n\nconst Navbar = (props) => {\n    return (\n        <AppBar position=\"static\">\n            \n        </AppBar>\n    );\n};\n\nexport {Navbar};","import React from \"react\";\nimport {Navbar} from \"./Navbar\";\n\nconst index = (props) => {\n    return (\n        <Navbar {...props} />\n    );\n};\n\nexport {index as Header};","import React from \"react\";\nimport { ListItem, Paper, makeStyles, Typography, ListItemText, Box } from \"@material-ui/core\";\nimport { ThumbUp } from \"@material-ui/icons\";\n\nconst useStyles = makeStyles(theme => ({\n    comment: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        margin: theme.spacing(1)\n    },\n    paper: {\n        margin: theme.spacing(2),\n        padding: \"5%\",\n        minWidth: \"40%\"\n    },\n    box: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        justifyContent: \"space-between\"\n    },\n    mb: {\n        marginBottom: theme.spacing(2)\n    },\n    text: {\n        marginLeft: theme.spacing(1)\n    }\n}));\n\n\nconst Comment = (props) => {\n    const classes = useStyles();\n\n    return (\n        <ListItem button className={classes.comment}>\n            <Paper className={classes.paper}>\n                <Box className={`${classes.box} ${classes.mb}`}>\n                    <Typography variant=\"h5\">{props.title}</Typography>\n                    <Typography variant=\"caption\">{props.date}</Typography>\n                </Box>\n                <ListItemText primary={props.content} className={classes.mb} />\n                <Box className={classes.box}>\n                    <Typography variant=\"caption\">{props.author}</Typography>\n                    <Box display=\"flex\">\n                        <ThumbUp color=\"secondary\" />\n                        <ListItemText primary={props.votes} className={classes.text} />\n                    </Box>\n                </Box>\n            </Paper>\n        </ListItem>\n    );\n};\n\nexport { Comment };","const ipAddress = \"http://commentsense.de\";\n\nconst langDe = {\n    brandName: \"CommentSense\",\n    home: \"Home\",\n    signIn: \"Anmelden\",\n    signInText: \"Hier kommt noch ein Text hin\",\n    signInSuccessTitle: \"Erfolgreich angemeldet\",\n    signInSuccessText: \"Du hast dich erfolgreich angemeldet\",\n    signInErrTitle: \"Fehler!\",\n    signInErrText: \"Fehler beim anmelden\",\n    signUp: \"Registieren\",\n    signUpText: \"Hier kommt noch ein Text hin\",\n    signUpSuccessTitle: \"Nutzer erstellt\",\n    signUpSuccessText: \"Der Nutzer wurde erfolgreich erstellt\",\n    signUpErrTitle: \"Fehler!\",\n    signUpErrText: \"Der Nutzer konnte nicht erstellt werden\",\n    toWebsite: \"zur Website wechseln\",\n    username: \"Nickname\",\n    password: \"Passwort\",\n    email: \"E-mail\",\n    cancel: \"Abbrechen\",\n    ok: \"OK\",\n    saveChanges: \"Ã„nderungen speichern\",\n    account: \"Account bearbeiten\",\n    github: \"CommentSense auf Github\",\n    notFoundTitle: \"Seite nicht gefunden!\",\n    notFoundText: \"Die angefragte Seite konnte nicht gefunden werden.\",\n    loggedInAs: \"Angemeldet als: \"\n};\n\n\nexport { ipAddress, langDe };","import { observable } from \"mobx\";\nimport { createContext } from \"react\";\n\nclass CommentStore {\n    @observable comments = [];\n};\n\nexport const CommentStoreContext = createContext(new CommentStore());\n","import React, { useEffect, useContext } from \"react\";\nimport uuid from \"uuid\";\nimport { observer } from \"mobx-react-lite\";\nimport { List, makeStyles, CircularProgress, Box } from \"@material-ui/core\";\nimport { Comment } from \"./Comment\";\nimport { ipAddress } from \"../../constants\";\nimport { CommentStoreContext } from \"../../stores/CommentStore\";\n\nconst useStyles = makeStyles(theme => ({\n    box: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n    },\n    progress: {\n        margin: \"5%\"\n    }\n}));\n\nconst CommentList = observer((props) => {\n    const classes = useStyles();\n\n    const commentStore = useContext(CommentStoreContext);\n\n    useEffect(() => {\n        fetch(`${ipAddress}/api/comments?count=5`)\n            .then(res => {\n                if (res.ok)\n                    return res.json();\n            })\n            .then(res => {\n                commentStore.comments = res.comments;\n            })\n    }, []);\n\n    function showComments() {\n        if (Array.isArray(commentStore.comments) && commentStore.comments.length) {\n            return commentStore.comments.map(item => {\n                return <Comment date={item.date} content={item.content} title={item.headline} url={item.url} author={item.author} votes={item.likes} key={uuid.v4()} />\n            });\n        } else {\n            return (\n                <Box className={classes.box}>\n                    <CircularProgress size={100} className={classes.progress} />\n                    <CircularProgress size={100} className={classes.progress} />\n                    <CircularProgress size={100} className={classes.progress} />\n                    <CircularProgress size={100} className={classes.progress} />\n                    <CircularProgress size={100} className={classes.progress} />\n                </Box>\n            );\n        }\n\n    };\n\n    return (\n        <List>\n            {showComments()}\n        </List>\n    );\n});\n\nexport { CommentList };","import React from \"react\";\nimport {CommentList} from \"./CommentList\";\n\nconst index = (props) => {\n    return (\n        <CommentList {...props} />\n    );\n};\n\nexport { index as CommentList };","import React from \"react\";\nimport { observer } from \"mobx-react-lite\";\nimport {CommentList} from \"../components/CommentList\";\n\nconst Home = observer((props) => {\n    \n    return (\n        <>\n            <CommentList />\n        </>\n    );\n});\n\nexport { Home };","import React from \"react\";\nimport { Typography } from \"@material-ui/core\";\nimport { langDe } from \"../constants\";\n\nfunction NotFound(props) {\n    return (\n        <>\n            <Typography variant=\"h3\">{langDe.notFoundTitle}</Typography>\n            <Typography variant=\"p\">{langDe.notFoundText}</Typography>\n        </>\n    );\n};\n\nexport { NotFound };","import React from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport { Container } from \"@material-ui/core\";\nimport { Home } from \"./Home\";\nimport { NotFound } from \"./NotFound\";\n\nconst Routes = (props) => {\n    return (\n        <Container fixed>\n            <Switch>\n                <Route exact path=\"/index.html\" render={(para) => <Home {...para} />} />\n                <Route exact path=\"/404/\" render={(para) => <NotFound {...para} />} />\n                <Redirect to=\"/404/\" />\n            </Switch>\n        </Container>\n    );\n};\n\nexport { Routes };","import { createMuiTheme } from '@material-ui/core/styles';\n\nconst palette = {\n    type: \"dark\",\n    primary: {\n        light: '#ff9800',\n        main: '#f57c00',\n        dark: '#e65100',\n        contrastText: '#fffff'\n    },\n    secondary: {\n        light: '#42a5f5',\n        main: '#1e88e5',\n        dark: '#0d47a1',\n        contrastText: '#fffff'\n    }\n};\nconst themeName = 'CommentSense';\n\nexport default createMuiTheme({ palette, themeName });\n","import React from 'react';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { Header } from \"./components/Header\";\nimport { Routes } from \"./pages/Routes\";\nimport { ThemeProvider } from '@material-ui/styles';\nimport theme from \"./ui/theme\";\nimport { CssBaseline } from '@material-ui/core';\n\nconst App = () => {\n\n  return (\n    <div>\n      <ThemeProvider theme={theme}>\n        <CssBaseline />\n        <Router>\n          <Header />\n          <Routes />\n        </Router>\n      </ThemeProvider>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport \"./styles/style.css\";\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}