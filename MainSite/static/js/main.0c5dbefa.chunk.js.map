{"version":3,"sources":["ui/theme/index.js","constants.js","stores/UserStore.js","stores/DialogStore.js","components/Dialogs/SignUp/SignUp.js","components/Dialogs/SignUp/index.js","components/Dialogs/SignIn/SignIn.js","components/Dialogs/SignIn/index.js","components/Header/Drawer.js","components/Header/AccountDropDown.js","components/Header/Navbar.js","components/Header/index.js","components/TopWebsites/Website.js","stores/WebsiteStore.js","components/TopWebsites/TopWebsites.js","components/TopWebsites/index.js","components/TopComments/Comment.js","stores/CommentStore.js","components/TopComments/TopComments.js","components/TopComments/index.js","pages/Home.js","pages/Account.js","pages/NotFound.js","pages/Routes.js","App.js","helpers.js","index.js"],"names":["createMuiTheme","palette","type","primary","light","main","dark","contrastText","secondary","themeName","ipAddress","langDe","brandName","home","signIn","signInText","signInSuccessTitle","signInSuccessText","signInErrTitle","signInErrText","signUp","signUpText","signUpSuccessTitle","signUpSuccessText","signUpErrTitle","signUpErrText","toWebsite","username","password","email","cancel","ok","saveChanges","account","github","notFoundTitle","notFoundText","loggedInAs","UserStore","observable","UserStoreContext","createContext","DialogStore","DialogStoreContext","useStyles","makeStyles","theme","box","display","flexDirection","justifyContent","alignItems","alignContent","width","mb","marginBottom","spacing","margin","SignUp","observer","props","useTheme","fullScreen","useMediaQuery","breakpoints","down","userStore","useContext","dialogStore","classes","Dialog","open","onClose","DialogTitle","DialogContent","dividers","DialogContentText","DialogActions","Box","className","TextField","label","value","fullWidth","required","onChange","evt","target","Button","variant","color","onClick","fetch","method","body","JSON","stringify","userName","then","res","status","openSignUpSuccess","openSignUpFail","catch","e","SignUpSuccess","openSignInSuccess","SignUpErr","window","location","reload","index","SignIn","openSignInFail","SignInSuccess","SignInErr","list","height","Drawer","SwipeableDrawer","onOpen","List","ListItem","Typography","Divider","Link","href","button","ListItemIcon","Home","ListItemText","loggedIn","onClickSignIn","openSignIn","onClickSignUp","openSignUp","LoggedInAccount","Code","CreateAccount","Person","PersonAdd","SettingsApplications","AccountDropDown","keepMounted","anchorEl","MenuItem","menuButton","marginRight","Navbar","handleOnClick","key","openDrawer","AppBar","position","Toolbar","IconButton","edge","Menu","openAccount","anchorElAccount","currentTarget","website","title","paper","padding","minWidth","text","marginLeft","Website","Paper","url","ThumbUp","comments","WebsiteStore","WebsiteStoreContext","progress","TopWebsites","websiteStore","useEffect","json","websites","sites","Array","isArray","length","from","map","item","uuid","v4","CircularProgress","size","comment","Comment","date","content","author","votes","CommentStore","CommentStoreContext","TopComments","commentStore","headline","likes","Grid","container","xs","sm","textField","div","buttonBox","Account","history","useHistory","push","NotFound","mt","marginTop","Routes","Container","fixed","exact","path","render","para","to","App","sessionId","Promise","resolve","useLoggedIn","document","cookie","match","RegExp","split","useSessionId","ThemeProvider","CssBaseline","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.0c5dbefa.chunk.js","sourcesContent":["import { createMuiTheme } from '@material-ui/core/styles';\r\n\r\nconst palette = {\r\n    type: \"dark\",\r\n    primary: {\r\n        light: '#ff9800',\r\n        main: '#f57c00',\r\n        dark: '#e65100',\r\n        contrastText: '#fffff'\r\n    },\r\n    secondary: {\r\n        light: '#42a5f5',\r\n        main: '#1e88e5',\r\n        dark: '#0d47a1',\r\n        contrastText: '#fffff'\r\n    }\r\n};\r\nconst themeName = 'CommentSense';\r\n\r\nexport default createMuiTheme({ palette, themeName });\r\n","const ipAddress = \"http://commentsense.de\";\r\n\r\nconst langDe = {\r\n    brandName: \"CommentSense\",\r\n    home: \"Home\",\r\n    signIn: \"Anmelden\",\r\n    signInText: \"Hier kommt noch ein Text hin\",\r\n    signInSuccessTitle: \"Erfolgreich angemeldet\",\r\n    signInSuccessText: \"Du hast dich erfolgreich angemeldet\",\r\n    signInErrTitle: \"Fehler!\",\r\n    signInErrText: \"Fehler beim anmelden\",\r\n    signUp: \"Registieren\",\r\n    signUpText: \"Hier kommt noch ein Text hin\",\r\n    signUpSuccessTitle: \"Nutzer erstellt\",\r\n    signUpSuccessText: \"Der Nutzer wurde erfolgreich erstellt\",\r\n    signUpErrTitle: \"Fehler!\",\r\n    signUpErrText: \"Der Nutzer konnte nicht erstellt werden\",\r\n    toWebsite: \"zur Website wechseln\",\r\n    username: \"Nickname\",\r\n    password: \"Passwort\",\r\n    email: \"E-mail\",\r\n    cancel: \"Abbrechen\",\r\n    ok: \"OK\",\r\n    saveChanges: \"Änderungen speichern\",\r\n    account: \"Account bearbeiten\",\r\n    github: \"CommentSense auf Github\",\r\n    notFoundTitle: \"Seite nicht gefunden!\",\r\n    notFoundText: \"Die angefragte Seite konnte nicht gefunden werden.\",\r\n    loggedInAs: \"Angemeldet als: \"\r\n};\r\n\r\n\r\nexport { ipAddress, langDe };","import { observable} from \"mobx\"\r\nimport {createContext} from \"react\";\r\n\r\nclass UserStore {\r\n    @observable username = \"\";\r\n    @observable password = \"\";\r\n    @observable email = \"\";\r\n    @observable sid = \"\";\r\n    @observable loggedIn = false;\r\n};\r\n\r\nexport const UserStoreContext = createContext(new UserStore());","import { observable } from \"mobx\";\r\nimport { createContext } from \"react\";\r\n\r\nclass DialogStore {\r\n    @observable openSignIn = false;\r\n    @observable openSignUp = false;\r\n    @observable openSignInSuccess = false;\r\n    @observable openSignInFail = false;\r\n    @observable openSignUpSuccess = false;\r\n    @observable openSignUpFail = false;\r\n    @observable openAccount = false;\r\n    @observable anchorElAccount = null;\r\n    @observable openDrawer = false;\r\n};\r\n\r\nexport const DialogStoreContext = createContext(new DialogStore());","import React, { useContext } from \"react\";\r\nimport { Dialog, useMediaQuery, DialogTitle, DialogContent, DialogContentText, DialogActions, TextField, Box, makeStyles, Button } from \"@material-ui/core\";\r\nimport { useTheme } from \"@material-ui/styles\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { UserStoreContext } from \"../../../stores/UserStore\";\r\nimport { DialogStoreContext } from \"../../../stores/DialogStore\";\r\nimport { langDe, ipAddress } from \"../../../constants\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    box: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        alignContent: \"center\",\r\n        width: \"100%\"\r\n    },\r\n    mb: {\r\n        marginBottom: theme.spacing(2)\r\n    },\r\n    margin: {\r\n        margin: theme.spacing(1)\r\n    }\r\n}));\r\n\r\nconst SignUp = observer((props) => {\r\n    const theme = useTheme();\r\n    const fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\r\n\r\n    const userStore = useContext(UserStoreContext);\r\n    const dialogStore = useContext(DialogStoreContext);\r\n\r\n    const classes = useStyles();\r\n\r\n\r\n    const sendData = () => {\r\n        if (userStore.username && userStore.password) {\r\n            fetch(`${ipAddress}/api/signup/`, {\r\n                method: \"POST\",\r\n                body: JSON.stringify({\r\n                    userName: userStore.username,\r\n                    password: userStore.password\r\n                })\r\n            })\r\n                .then(res => {\r\n                    if (res.status === 200) {\r\n                        dialogStore.openSignUpSuccess = true;\r\n                    } else {\r\n                        dialogStore.openSignUpFail = true;\r\n                    }\r\n                })\r\n                .catch(e => {\r\n                    dialogStore.openSignUpFail = true;\r\n                });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Dialog open={props.open} onClose={props.onClose} fullScreen={fullScreen}>\r\n                <DialogTitle>{langDe.signUp}</DialogTitle>\r\n                <DialogContent dividers>\r\n                    <DialogContentText>{langDe.signUpText}</DialogContentText>\r\n                    <DialogActions>\r\n                        <Box className={classes.box} >\r\n                            <TextField label={langDe.username} value={userStore.username} fullWidth required className={classes.mb} onChange={evt => userStore.username = evt.target.value} />\r\n                            <TextField label={langDe.password} value={userStore.password} fullWidth required className={classes.mb} onChange={evt => userStore.password = evt.target.value} type=\"password\" />\r\n                            <TextField label={langDe.email} value={userStore.email} fullWidth className={classes.mb} onChange={evt => userStore.email = evt.target.value} />\r\n                            <Box className={classes.margin} >\r\n                                <Button variant=\"contained\" color=\"primary\" className={classes.margin} onClick={sendData} >{langDe.signUp}</Button>\r\n                                <Button variant=\"contained\" color=\"secondary\" className={classes.margin} onClick={props.onClose}>{langDe.cancel}</Button>\r\n                            </Box>\r\n                        </Box>\r\n                    </DialogActions>\r\n                </DialogContent>\r\n            </Dialog>\r\n            <SignUpSuccess open={dialogStore.openSignUpSuccess} onClose={() => dialogStore.openSignInSuccess = false} />\r\n            <SignUpErr open={dialogStore.openSignUpFail} onClose={() => dialogStore.openSignUpFail = false} />\r\n        </>\r\n    );\r\n});\r\n\r\nfunction SignUpSuccess(props) {\r\n    const theme = useTheme();\r\n    const fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\r\n\r\n    const reload = () => {\r\n        window.location.reload();\r\n    };\r\n\r\n    return (\r\n        <Dialog open={props.open} onClose={props.onClose} fullScreen={fullScreen}>\r\n            <DialogTitle>{langDe.signUpSuccessTitle}</DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText>{langDe.signUpSuccessText}</DialogContentText>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={reload}>{langDe.ok}</Button>\r\n                </DialogActions>\r\n            </DialogContent>\r\n        </Dialog>\r\n    );\r\n};\r\n\r\nfunction SignUpErr(props) {\r\n    const theme = useTheme();\r\n    const fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\r\n\r\n    return (\r\n        <Dialog open={props.open} onClose={props.onClose} fullScreen={fullScreen}>\r\n            <DialogTitle>{langDe.signUpErrTitle}</DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText>{langDe.signUpErrText}</DialogContentText>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={props.onClose}>{langDe.ok}</Button>\r\n                </DialogActions>\r\n            </DialogContent>\r\n        </Dialog>\r\n    );\r\n};\r\n\r\nexport { SignUp };","import React from \"react\";\r\nimport { SignUp } from \"./SignUp\";\r\n\r\nfunction index(props) {\r\n    return (\r\n        <SignUp {...props} />\r\n    );\r\n};\r\n\r\nexport { index as SignUp };","import React, { useContext } from \"react\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Dialog, useMediaQuery, DialogTitle, DialogContent, DialogContentText, DialogActions, TextField, Box, makeStyles, Button } from \"@material-ui/core\";\r\nimport { useTheme } from \"@material-ui/styles\";\r\nimport { langDe, ipAddress } from \"../../../constants\";\r\nimport { UserStoreContext } from \"../../../stores/UserStore\";\r\nimport { DialogStoreContext } from \"../../../stores/DialogStore\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    box: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        alignContent: \"center\",\r\n        width: \"100%\"\r\n    },\r\n    margin: {\r\n        margin: theme.spacing(1)\r\n    },\r\n    mb: {\r\n        marginBottom: theme.spacing(2)\r\n    }\r\n}));\r\n\r\n\r\nconst SignIn = observer((props) => {\r\n    const userStore = useContext(UserStoreContext);\r\n    const dialogStore = useContext(DialogStoreContext);\r\n\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\r\n\r\n\r\n    const sendData = () => {\r\n        fetch(`${ipAddress}/api/signin?name='${userStore.username}'&password='${userStore.username}'`)\r\n            .then(res => {\r\n                if (res.status === 200) {\r\n                    dialogStore.openSignInSuccess = true;\r\n                } else {\r\n                    dialogStore.openSignInFail = true;\r\n                }\r\n            })\r\n            .catch(e => {\r\n                dialogStore.openSignInFail = true;\r\n            })\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Dialog open={props.open} onClose={props.onClose} fullScreen={fullScreen}>\r\n                <DialogTitle>{langDe.signIn}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>{langDe.signInText}</DialogContentText>\r\n                    <DialogActions>\r\n                        <Box className={classes.box}>\r\n                            <TextField label={langDe.username} value={userStore.username} fullWidth required className={classes.mb} onChange={evt => userStore.username = evt.target.value} />\r\n                            <TextField label={langDe.password} value={userStore.password} fullWidth required className={classes.mb} onChange={evt => userStore.password = evt.target.value} type=\"password\" />\r\n                            <Box className={classes.margin}>\r\n                                <Button variant=\"contained\" color=\"primary\" className={classes.margin} onClick={sendData} >{langDe.signIn}</Button>\r\n                                <Button variant=\"contained\" color=\"secondary\" className={classes.margin} onClick={props.onClose} >{langDe.cancel}</Button>\r\n                            </Box>\r\n                        </Box>\r\n                    </DialogActions>\r\n                </DialogContent>\r\n            </Dialog>\r\n            <SignInSuccess open={dialogStore.openSignInSuccess} onClose={() => dialogStore.openSignInSuccess = false} />\r\n            <SignInErr open={dialogStore.openSignInFail} onClose={() => dialogStore.openSignInFail = false} />\r\n        </>\r\n    );\r\n});\r\n\r\nfunction SignInSuccess(props) {\r\n    const theme = useTheme();\r\n    const fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\r\n\r\n    const reload = () => {\r\n        window.location.reload();\r\n    };\r\n\r\n    return (\r\n        <Dialog open={props.open} onClose={props.onClose} fullScreen={fullScreen}>\r\n            <DialogTitle>{langDe.signInSuccessTitle}</DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText>{langDe.signInSuccessText}</DialogContentText>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={reload}>{langDe.ok}</Button>\r\n                </DialogActions>\r\n            </DialogContent>\r\n        </Dialog>\r\n    );\r\n};\r\n\r\nfunction SignInErr(props) {\r\n    const theme = useTheme();\r\n    const fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\r\n\r\n    return (\r\n        <Dialog open={props.open} onClose={props.onClose} fullScreen={fullScreen}>\r\n            <DialogTitle>{langDe.signInErrTitle}</DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText>{langDe.signInErrText}</DialogContentText>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={props.onClose}>{langDe.ok}</Button>\r\n                </DialogActions>\r\n            </DialogContent>\r\n        </Dialog>\r\n    );\r\n};\r\n\r\nexport { SignIn };","import React from \"react\";\r\nimport { SignIn } from \"./SignIn\";\r\n\r\nfunction index(props) {\r\n    return (\r\n        <SignIn {...props} />\r\n    );\r\n};\r\n\r\nexport { index as SignIn };","import React, { useContext } from \"react\";\r\nimport { SwipeableDrawer, makeStyles, ListItem, Typography, List, Divider, Link, ListItemText, ListItemIcon } from \"@material-ui/core\";\r\nimport { langDe } from \"../../constants\";\r\nimport { Home, Person, PersonAdd, SettingsApplications, Code } from \"@material-ui/icons\";\r\nimport { SignUp } from \"../Dialogs/SignUp/\";\r\nimport { SignIn } from \"../Dialogs/SignIn/\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { DialogStoreContext } from \"../../stores/DialogStore\";\r\nimport { UserStoreContext } from \"../../stores/UserStore\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    list: {\r\n        width: 250,\r\n        height: \"100%\"\r\n    }\r\n}));\r\n\r\nconst Drawer = observer((props) => {\r\n    const dialogStore = useContext(DialogStoreContext);\r\n    const userStore = useContext(UserStoreContext);\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <SwipeableDrawer open={props.open} onClose={props.onClose} onOpen={props.onClose}>\r\n            <div className={classes.list}>\r\n                <List>\r\n                    <ListItem>\r\n                        <Typography variant=\"h6\">{langDe.brandName}</Typography>\r\n                    </ListItem>\r\n                    <Divider />\r\n                    <Link color=\"inherit\" href=\"/\">\r\n                        <ListItem button>\r\n                            <ListItemIcon><Home color=\"secondary\" /></ListItemIcon>\r\n                            <ListItemText primary={langDe.home} />\r\n                        </ListItem>\r\n                    </Link>\r\n                    <CreateAccount display={userStore.loggedIn} onClickSignIn={() => dialogStore.openSignIn = true} onClickSignUp={() => dialogStore.openSignUp = true} />\r\n                    <LoggedInAccount display={userStore.loggedIn} />\r\n                    <Link color=\"inherit\" href=\"https://github.com/Jugendhackt/comment-sense/\">\r\n                        <ListItem button>\r\n                            <ListItemIcon><Code color=\"secondary\" /></ListItemIcon>\r\n                            <ListItemText primary={langDe.github} />\r\n                        </ListItem>\r\n                    </Link>\r\n                </List>\r\n            </div>\r\n            <SignUp open={dialogStore.openSignUp} onClose={() => dialogStore.openSignUp = false} />\r\n            <SignIn open={dialogStore.openSignIn} onClose={() => dialogStore.openSignIn = false} />\r\n        </SwipeableDrawer>\r\n    );\r\n});\r\n\r\nconst CreateAccount = (props) => {\r\n    if (!props.display) {\r\n        return (\r\n            <>\r\n                <ListItem button onClick={props.onClickSignIn} >\r\n                    <ListItemIcon><Person color=\"secondary\" /></ListItemIcon>\r\n                    <ListItemText primary={langDe.signIn} />\r\n                </ListItem>\r\n                <ListItem button onClick={props.onClickSignUp} >\r\n                    <ListItemIcon><PersonAdd color=\"secondary\" /></ListItemIcon>\r\n                    <ListItemText primary={langDe.signUp} />\r\n                </ListItem>\r\n            </>\r\n        );\r\n    } else {\r\n        return null;\r\n    }\r\n};\r\n\r\nconst LoggedInAccount = observer((props) => {\r\n    const userStore = useContext(UserStoreContext);\r\n    \r\n    if (props.display) {\r\n        return (\r\n            <>\r\n                <Link color=\"inherit\" href=\"/account/\">\r\n                    <ListItem button>\r\n                        <ListItemIcon><SettingsApplications color=\"secondary\" /></ListItemIcon>\r\n                        <ListItemText primary={langDe.account} />\r\n                    </ListItem>\r\n                </Link>\r\n                <ListItem button>\r\n                    <ListItemIcon><Person color=\"secondary\" /></ListItemIcon>\r\n                    <ListItemText primary={`${langDe.loggedInAs} ${userStore.username}`} />\r\n                </ListItem>\r\n            </>\r\n        );\r\n    } else {\r\n        return null;\r\n    }\r\n});\r\n\r\nexport { Drawer };","import React, { useContext } from \"react\";\r\nimport { MenuItem, ListItemIcon, ListItemText, Menu, Link } from \"@material-ui/core\";\r\nimport { Person, SettingsApplications } from \"@material-ui/icons\";\r\nimport { langDe } from \"../../constants\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { UserStoreContext } from \"../../stores/UserStore\";\r\n\r\nconst AccountDropDown = observer((props) => {\r\n    const userStore = useContext(UserStoreContext);\r\n    if (props.display) {\r\n        return (\r\n            <Menu keepMounted anchorEl={props.anchorEl} open={props.open} onClose={props.onClose}>\r\n                <MenuItem>\r\n                    <ListItemIcon><Person color=\"secondary\" /></ListItemIcon>\r\n                    <ListItemText primary={`${langDe.loggedInAs} ${userStore.username}`} />\r\n                </MenuItem>\r\n                <Link color=\"inherit\" href=\"/account/\">\r\n                    <MenuItem>\r\n                        <ListItemIcon><SettingsApplications color=\"secondary\" /></ListItemIcon>\r\n                        <ListItemText primary={langDe.account} />\r\n                    </MenuItem>\r\n                </Link>\r\n            </Menu>\r\n        );\r\n    } else {\r\n        return null;\r\n    }\r\n});\r\n\r\nexport { AccountDropDown };","import React, { useContext } from \"react\";\r\nimport { Drawer } from \"./Drawer\";\r\nimport { AppBar, Toolbar, IconButton, Typography, makeStyles, Box } from \"@material-ui/core\";\r\nimport { langDe } from \"../../constants\";\r\nimport { AccountCircle as AccountIcon, Menu as MenuIcon } from \"@material-ui/icons\";\r\n\r\nimport { AccountDropDown } from \"./AccountDropDown\";\r\nimport { DialogStoreContext } from \"../../stores/DialogStore\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { UserStoreContext } from \"../../stores/UserStore\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    menuButton: {\r\n        marginRight: theme.spacing(2)\r\n    },\r\n    account: {\r\n        display: \"flex\",\r\n        justifyContent: \"flex-end\",\r\n        width: \"100%\"\r\n    }\r\n}));\r\n\r\nconst Navbar = observer((props) => {\r\n    const dialogStore = useContext(DialogStoreContext);\r\n    const userStore = useContext(UserStoreContext);\r\n\r\n    const classes = useStyles();\r\n\r\n    const handleOnClick = evt => {\r\n        if (evt && evt.target.type === \"keydown\" && (evt.key === \"Tab\" || evt.key === \"Shift\"))\r\n            return;\r\n        dialogStore.openDrawer = !dialogStore.openDrawer;\r\n    };\r\n\r\n    const handleClickAccount = evt => {\r\n        dialogStore.openAccount = true;\r\n        dialogStore.anchorElAccount = evt.currentTarget;\r\n    };\r\n\r\n    const handleOnClose = () => {\r\n        dialogStore.openAccount = false;\r\n        dialogStore.anchorElAccount = null;\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <AppBar position=\"static\">\r\n                <Toolbar>\r\n                    <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" onClick={handleOnClick}>\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\">\r\n                        {langDe.brandName}\r\n                    </Typography>\r\n                    <Box className={classes.account} display={(userStore.loggedIn) ? \"block\" : \"none !important\"}>\r\n                        <IconButton onClick={handleClickAccount}>\r\n                            <AccountIcon />\r\n                        </IconButton>\r\n                    </Box>\r\n                    <AccountDropDown open={dialogStore.openAccount} anchorEl={dialogStore.anchorElAccount} onClose={handleOnClose} display={userStore.loggedIn} />\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Drawer open={dialogStore.openDrawer} onOpen={handleOnClick} onClose={() => dialogStore.openDrawer = false} />\r\n        </div>\r\n    );\r\n});\r\n\r\nexport { Navbar };\r\n","import React from \"react\";\r\nimport { Navbar } from \"./Navbar\";\r\n\r\nfunction index(props) {\r\n    return (\r\n        <Navbar {...props} />\r\n    );\r\n};\r\n\r\nexport { index as Header};","import React from \"react\";\r\nimport { ListItem, ListItemText, Typography, Link, Button, makeStyles, Paper, Box } from \"@material-ui/core\";\r\nimport { langDe } from \"../../constants\";\r\nimport { ThumbUp } from \"@material-ui/icons\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    website: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        margin: theme.spacing(1)\r\n    },\r\n    title: {\r\n        margin: theme.spacing(2)\r\n    },\r\n    paper: {\r\n        margin: theme.spacing(1),\r\n        padding: \"5%\",\r\n        minWidth: \"40%\"\r\n    },\r\n    text: {\r\n        marginLeft: theme.spacing(1)\r\n    }\r\n}));\r\n\r\n\r\nfunction Website(props) {\r\n    const classes = useStyles();\r\n\r\n    /*\r\n    const showTitle = () => {\r\n        if (props.url.length > 40) {\r\n            return props.url.substring(0, 40) + \"...\";\r\n        }\r\n        return props.url;\r\n    }; */\r\n\r\n\r\n    return (\r\n        <ListItem button className={classes.website} >\r\n            <Paper className={classes.paper}>\r\n                <Typography variant=\"h5\">{props.url}</Typography>\r\n                <br />\r\n                <Box display=\"flex\">\r\n                    <ThumbUp color=\"secondary\" />\r\n                    <ListItemText primary={props.comments} className={classes.text} />\r\n                </Box>\r\n                <Link color=\"inherit\" href={props.url}>\r\n                    <Button color=\"primary\" variant=\"contained\">{langDe.toWebsite}</Button>\r\n                </Link>\r\n            </Paper>\r\n        </ListItem>\r\n    );\r\n};\r\n\r\nexport { Website }","import { createContext } from \"react\";\r\nimport { observable } from \"mobx\";\r\n\r\nclass WebsiteStore {\r\n    @observable websites = [];\r\n};\r\n\r\nexport const WebsiteStoreContext = createContext(new WebsiteStore());","import React, { useEffect, useContext } from \"react\";\r\nimport { List, makeStyles, CircularProgress, Box } from \"@material-ui/core\";\r\nimport uuid from \"uuid\";\r\nimport { ipAddress } from \"../../constants\";\r\nimport { Website } from \"./Website\";\r\nimport { WebsiteStoreContext } from \"../../stores/WebsiteStore\";\r\nimport { observer } from \"mobx-react-lite\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    progress: {\r\n        margin: \"5%\"\r\n    },\r\n    box: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\"\r\n    }\r\n}));\r\n\r\nconst TopWebsites = observer((props) => {\r\n    const websiteStore = useContext(WebsiteStoreContext);\r\n\r\n    const classes = useStyles();\r\n\r\n    useEffect(() => {\r\n        fetch(`${ipAddress}/api/sites/`)\r\n            .then(res => {\r\n                if (res.ok)\r\n                    return res.json();\r\n            })\r\n            .then(res => {\r\n                websiteStore.websites = res.sites;\r\n            })\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    function showWebsites() {\r\n        if (Array.isArray(websiteStore.websites) && websiteStore.websites.length) {\r\n            return Array.from(websiteStore.websites).map(item => {\r\n                return <Website url={item.url} comments={item.comments} key={uuid.v4()} />\r\n            });\r\n        } else {\r\n            return (\r\n                <Box className={classes.box}>\r\n                    <CircularProgress size={100} className={classes.progress} />\r\n                    <CircularProgress size={100} className={classes.progress} />\r\n                    <CircularProgress size={100} className={classes.progress} />\r\n                    <CircularProgress size={100} className={classes.progress} />\r\n                    <CircularProgress size={100} className={classes.progress} />\r\n                </Box>\r\n            );\r\n        }\r\n    };\r\n\r\n    return (\r\n        <List>\r\n            {showWebsites()}\r\n        </List>\r\n    );\r\n});\r\n\r\nexport { TopWebsites };","import React from \"react\";\r\nimport {TopWebsites} from \"./TopWebsites\";\r\n\r\nfunction index(props) {\r\n    return (\r\n        <TopWebsites {...props} />\r\n    );\r\n};\r\n\r\nexport {index as TopWebsites};","import React from \"react\";\r\nimport { ListItem, Paper, makeStyles, Typography, ListItemText, Box } from \"@material-ui/core\";\r\nimport { ThumbUp } from \"@material-ui/icons\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    comment: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        margin: theme.spacing(1)\r\n    },\r\n    paper: {\r\n        margin: theme.spacing(2),\r\n        padding: \"5%\",\r\n        minWidth: \"40%\"\r\n    },\r\n    box: {\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        justifyContent: \"space-between\"\r\n    },\r\n    mb: {\r\n        marginBottom: theme.spacing(2)\r\n    },\r\n    text: {\r\n        marginLeft: theme.spacing(1)\r\n    }\r\n}));\r\n\r\n\r\nfunction Comment(props) {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <ListItem button className={classes.comment}>\r\n            <Paper className={classes.paper}>\r\n                <Box className={`${classes.box} ${classes.mb}`}>\r\n                    <Typography variant=\"h5\">{props.title}</Typography>\r\n                    <Typography variant=\"caption\">{props.date}</Typography>\r\n                </Box>\r\n                <ListItemText primary={props.content} className={classes.mb} />\r\n                <Box className={classes.box}>\r\n                    <Typography variant=\"caption\">{props.author}</Typography>\r\n                    <Box display=\"flex\">\r\n                        <ThumbUp color=\"secondary\" />\r\n                        <ListItemText primary={props.votes} className={classes.text} />\r\n                    </Box>\r\n                </Box>\r\n            </Paper>\r\n        </ListItem>\r\n    );\r\n};\r\n\r\nexport { Comment };","import { observable } from \"mobx\";\r\nimport { createContext } from \"react\";\r\n\r\nclass CommentStore {\r\n    @observable comments = [];\r\n};\r\n\r\nexport const CommentStoreContext = createContext(new CommentStore());\r\n\r\n","import React, { useEffect, useContext } from \"react\";\r\nimport uuid from \"uuid\";\r\nimport {observer} from \"mobx-react-lite\";\r\nimport { List, makeStyles, CircularProgress, Box } from \"@material-ui/core\";\r\nimport { Comment } from \"./Comment\";\r\nimport { ipAddress } from \"../../constants\";\r\nimport { CommentStoreContext } from \"../../stores/CommentStore\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    box: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\"\r\n    },\r\n    progress: {\r\n        margin: \"5%\"\r\n    }\r\n}));\r\n\r\nconst TopComments = observer((props) => {\r\n    const classes = useStyles();\r\n\r\n    const commentStore = useContext(CommentStoreContext);\r\n\r\n    useEffect(() => {\r\n        fetch(`${ipAddress}/api/comments?count=5`)\r\n            .then(res => {\r\n                if (res.ok)\r\n                    return res.json();\r\n            })\r\n            .then(res => {\r\n                commentStore.comments = res.comments;\r\n            })\r\n            // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    function showComments() {\r\n        if (Array.isArray(commentStore.comments) && commentStore.comments.length) {\r\n            return commentStore.comments.map(item => {\r\n                return <Comment date={item.date} content={item.content} title={item.headline} url={item.url} author={item.author} votes={item.likes} key={uuid.v4()} />\r\n            });\r\n        } else {\r\n            return (\r\n                <Box className={classes.box}>\r\n                    <CircularProgress size={100} className={classes.progress} />\r\n                    <CircularProgress size={100} className={classes.progress} />\r\n                    <CircularProgress size={100} className={classes.progress} />\r\n                    <CircularProgress size={100} className={classes.progress} />\r\n                    <CircularProgress size={100} className={classes.progress} />\r\n                </Box>\r\n            );\r\n        }\r\n\r\n    };\r\n\r\n    return (\r\n        <List>\r\n            {showComments()}\r\n        </List>\r\n    );\r\n});\r\n\r\nexport { TopComments };","import React from \"react\";\r\nimport { TopComments } from \"./TopComments\";\r\n\r\nfunction index(props) {\r\n    return (\r\n        <TopComments {...props} />\r\n    );\r\n};\r\n\r\nexport { index as TopComments };","import React from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { TopWebsites } from \"../components/TopWebsites/index\";\r\nimport { TopComments } from \"../components/TopComments/index\";\r\n\r\nfunction Home() {\r\n    return (\r\n        <Grid container>\r\n            <Grid item xs={12} sm={6}>\r\n                <TopWebsites />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n                <TopComments />\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport { Home };","import React, { useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {observer} from \"mobx-react-lite\";\r\nimport { TextField, makeStyles, Box, Paper, Button } from \"@material-ui/core\";\r\nimport { langDe } from \"../constants\";\r\nimport {UserStoreContext} from \"../stores/UserStore\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    paper: {\r\n        width: \"100%\",\r\n        padding: theme.spacing(2)\r\n    },\r\n    textField: {\r\n        width: \"90%\",\r\n        margin: theme.spacing(1)\r\n    },\r\n    div: {\r\n        display: \"flex\",\r\n        justifyContent: \"center\"\r\n    },\r\n    box: {\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    buttonBox: {\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        justifyContent: \"center\",\r\n        width: \"100%\",\r\n        [theme.breakpoints.down(\"sm\")]: {\r\n            flexDirection: \"column\"\r\n        }\r\n    },\r\n    button: {\r\n        margin: theme.spacing(2)\r\n    }\r\n}));\r\n\r\nconst Account = observer((props) =>{\r\n    const userStore = useContext(UserStoreContext);\r\n\r\n    const classes = useStyles();\r\n    let history = useHistory();\r\n\r\n    const sendData = () => {\r\n\r\n    };\r\n\r\n    const home = () => {\r\n        history.push(\"/\");\r\n    };\r\n\r\n    return (\r\n        <div className={classes.div} >\r\n            <Paper className={classes.paper}>\r\n                <Box className={classes.box}>\r\n                    <TextField label={langDe.username} className={classes.textField} value={userStore.username} onChange={evt => userStore.username = evt.target.value} />\r\n                    <TextField label={langDe.password} className={classes.textField} value={userStore.password} onChange={evt => userStore.password = evt.target.value} type=\"password\" />\r\n                    <TextField label={langDe.email} className={classes.textField} value={userStore.email} onChange={evt => userStore.email = evt.target.value} />\r\n                    <Box className={classes.buttonBox}>\r\n                        <Button variant=\"contained\" color=\"primary\" onClick={sendData} className={classes.button}>{langDe.saveChanges}</Button>\r\n                        <Button variant=\"contained\" color=\"secondary\" onClick={home} className={classes.button}>{langDe.cancel}</Button>\r\n                    </Box>\r\n                </Box>\r\n            </Paper>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport { Account };","import React from \"react\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport { langDe } from \"../constants\";\r\n\r\nfunction NotFound(props) {\r\n    return (\r\n        <>\r\n            <Typography variant=\"h3\">{langDe.notFoundTitle}</Typography>\r\n            <Typography variant=\"p\">{langDe.notFoundText}</Typography>\r\n        </>\r\n    );\r\n};\r\n\r\nexport { NotFound };","import React from \"react\";\r\nimport { Route, Redirect, Switch } from \"react-router-dom\";\r\nimport { Home } from \"./Home\";\r\nimport { Account } from \"./Account\";\r\nimport { NotFound } from \"./NotFound\";\r\nimport { Container, makeStyles } from \"@material-ui/core\";\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    mt: {\r\n        marginTop: theme.spacing(2)\r\n    }\r\n}));\r\n\r\nfunction Routes(props) {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Container fixed className={classes.mt}>\r\n            <Switch>\r\n                <Route exact path=\"/\" render={(para) => <Home {...para} />} />\r\n                <Route exact path=\"/account\" render={(para) => <Account {...para} />} />\r\n                <Route exact path=\"/404\" render={(para) => <NotFound {...para} />} />\r\n                <Redirect to=\"/404\" />\r\n            </Switch>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport { Routes as Pages };","import React, { useContext } from 'react';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport theme from \"../src/ui/theme/\";\n\nimport { Header } from \"./components/Header\";\nimport { Pages } from \"./pages/Routes\";\nimport { CssBaseline } from '@material-ui/core';\nimport { useSessionId, useLoggedIn } from './helpers';\nimport { observer } from 'mobx-react-lite';\nimport { UserStoreContext } from './stores/UserStore';\n\n\nconst App = observer((props) => {\n  const userStore = useContext(UserStoreContext);\n  const sessionId = useSessionId();\n\n  useLoggedIn(sessionId).then(res => {\n    if (res) {\n      userStore.loggedIn = true;\n    }\n  });\n\n  return (\n    <div>\n      <ThemeProvider theme={theme}>\n        <Router>\n          <CssBaseline />\n          <Header />\n          <Pages />\n        </Router>\n      </ThemeProvider>\n    </div>\n  );\n});\n\nexport default App;\n","import { ipAddress } from \"./constants\";\r\n\r\nconst useSessionId = () => {\r\n    const sessionId = document.cookie.match(new RegExp('(^| )sid=([^;]+)'));\r\n    if (sessionId) \r\n        return (sessionId.length) ? sessionId[0].split(\"=\")[1] : null;\r\n};\r\n\r\nconst useLoggedIn = (sessionId) => {\r\n    return new Promise(resolve => {\r\n        fetch(`${ipAddress}/api/checksid?sid='${sessionId}'`)\r\n            .then(res => {\r\n                if (res.status === 410) {\r\n                    resolve(false);\r\n                } else if (res.status === 200) {\r\n                    resolve(true);\r\n                }\r\n            })\r\n    });\r\n};\r\n\r\nexport { useSessionId, useLoggedIn };","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport \"./style/style.css\";\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}